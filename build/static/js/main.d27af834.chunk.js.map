{"version":3,"sources":["context/UserContext.js","pages/Login/index.js","redux/types.js","redux/action.js","pages/Register/index.js","images/fino.png","pages/Home/index.js","pages/Invoice/Slide.js","pages/api/sendApi.js","pages/Invoice/index.js","pages/Admin/index.js","pages/Admin/Edit/index.js","pages/Admin/Create/index.js","pages/Confirm/index.js","pages/TransList/index.js","pages/Customer/index.js","pages/Invite/index.js","routes/index.js","redux/reducers/emailReducer.js","redux/reducers/dataReducer.js","redux/reducers/slideReducer.js","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["createContext","isLoggedIn","userId","token","login","logout","BootstrapInput","styled","InputBase","theme","marginTop","spacing","position","backgroundColor","border","borderRadius","width","padding","transition","transitions","create","Login","prop","addToast","useToasts","setLoginStatus","useContext","UserContext","history","useHistory","useState","email","setEmail","React","password","showPassword","values","setValues","a","push","appearance","autoDismiss","loginUser","Axios","post","loginRes","data","status","msg","customerId","localStorage","setItem","Box","sx","height","IconButton","color","aria-label","onClick","top","right","className","placeholder","my","mt","value","onChange","e","target","marginBottom","type","event","label","Button","p","variant","Typography","SAVE_EMAIL","SEL_DATA","SLIDE_DATA","selData","val","types","payload","slideData","Register","dispatch","useDispatch","repassword","showRePassword","rePassword","setRePassword","submit","newUser","resultRegister","handleRePasswordChange","style","BoxSx","Grid","container","direction","justifyContent","alignItems","px","pt","item","src","logoImg","alt","textAlign","ButtonGroup","orientation","Slide","props","setWidth","amount","setAmount","setPlaceholder","count","setCount","description","setDescription","useEffect","slice","charCodeAt","prev","Number","toFixed","toString","length","includes","index","Actions","mx","TextField","id","m","pl","maxWidth","InputProps","startAdornment","InputAdornment","disableUnderline","fontSize","preventDefault","result","match","temp","inputProps","fullWidth","focused","SendApi","collection","invoiceInfo","response","calcTime","offset","d","Date","utc","getTime","getTimezoneOffset","vendor","process","docType","doc","name","branch","getDate","getMonth","getFullYear","map","el","detalle","console","log","method","headers","body","JSON","stringify","Invoice","setPdf","setConf","sellerId","pdfLink","setInvoiceInfo","loading","setLoading","dni","setDni","invoice","ticket","note","setDocType","alter","setAlter","getItem","get","userRes","then","res","_id","checkLoggedIn","slideCount","setSlideCount","dataInfo","useSelector","state","slide","middle","setMiddle","sort","i","filter","pop","total","setTotal","sum","undefined","getTotal","active_status","autoDismissTimeout","placement","removeItem","getVals","detail","fetch","json","datas","gettingPdf","documento","id_contribuyente","id_tipodoc_electronico","serie_comprobante","numero_comprobante","tmp_invoice","aaa","currentDate","curFormatDate","sel","date","pathname","catch","err","fill","flexGrow","spaceBetween","slidesPerView","onReachEnd","Array","_","isActive","active","RadioGroup","row","aria-labelledby","FormControlLabel","control","Radio","size","LoadingButton","endIcon","loadingPosition","toUpperCase","Admin","users","setUsers","user","ruc","credit","paid","open","setOpen","handleClose","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","prevUsers","delete","del_id","userSize","Object","keys","remove","autoFocus","Edit","useParams","setName","setRuc","setBranch","setToken","setCredit","setVendor","setProcess","setPaid","docHandle","checked","put","component","display","flexWrap","noValidate","autoComplete","InputLabel","fontWeight","required","mb","mr","ml","FormControl","Select","MenuItem","Checkbox","Create","handleMouseDownPassword","Input","endAdornment","onMouseDown","edge","Confirm","selInfo","params","pdf","conf","userInfo","setUserInfo","navigator","share","window","location","protocol","replace","href","sendUrlToPrint","url","document","encodeURI","afterUrl","encodeURIComponent","r","blob","file","File","title","text","files","error","alert","Img","format","Transition","forwardRef","ref","Item","Paper","palette","secondary","heigth","Translist","tranData","setTranData","loginStatus","setSellerId","totalAmount","setTotalAmount","openDialog","setDialogOpen","toLocaleDateString","hour12","tranFormatDate","anchorEl","setAnchorEl","Boolean","showAll","setShowAll","dirction","xs","aria-controls","aria-haspopup","aria-expanded","currentTarget","Menu","MenuListProps","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","hover","scope","reverse","bottom","TransitionComponent","keepMounted","startIcon","borderColor","borderWidth","Customer","totalCustomer","setTotalCustomer","allCustomer","setAllCustomer","customerInfo","setCustomerInfo","saveCustomer","selectCustomer","setShow","setDoc","show","setText","handleDelete","changeData","setChangeData","handleEdit","handleChange","newItems","letterSpacing","paddingBottom","paddingTop","boxShadow","flex","searchKey","toLowerCase","searchResult","search","respuesta","nombre","razon_social","direccion","trim","Index","ListType","IOS","trailingActions","destructive","borderLeft","disabled","margin","Invite","Provider","exact","path","Home","TransList","initialState","currentEmail","rootReducer","combineReducers","action","newState","enhancer","composeWithDevTools","applyMiddleware","ReduxThunk","store","createStore","App","configureStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"scAEeA,0BAAc,CACvBC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,e,6ECQRC,EAAiBC,YAAOC,IAAPD,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,YAAa,CACTC,UAAWD,EAAME,QAAQ,IAE7B,wBAAyB,CACrBC,SAAU,WACVC,gBAAiB,QACjBC,OAAQ,oBACRC,aAAa,OACbC,MAAO,OACPC,QAAS,YACTC,WAAYT,EAAMU,YAAYC,OAAO,CACjC,eACA,mBACA,aACA,sBAMG,SAASC,IAAQ,IAWNC,EATdC,EAAaC,sBAAbD,SACAE,EAAmBC,qBAAWC,GAA9BF,eACFG,EAAUC,cAJY,EAKFC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMAC,IAAMH,SAAS,CACvCI,SAAU,GACVC,cAAc,IARU,mBAMrBC,EANqB,KAMbC,EANa,KAetBjC,EAAK,uCAAG,gCAAAkC,EAAA,yDACJJ,EAAWE,EAAOF,SAUV,eAAVH,GAAuC,eAAbG,EAXpB,uBAYNN,EAAQW,KAAK,UAZP,6BAgBLR,EAhBK,uBAiBNR,EAAS,oBAAqB,CAC1BiB,WAAY,QACZC,aAAa,IAnBX,6BAwBLP,EAxBK,wBAyBNX,EAAS,wBAAyB,CAC9BiB,WAAY,QACZC,aAAa,IA3BX,kCAgCJC,EAAY,CAAEX,QAAOG,YAhCjB,UAiCaS,IAAMC,KAAK,eAAgBF,GAjCxC,WAmCmB,aAFvBG,EAjCI,QAmCGC,KAAKC,OAnCR,wBAoCNxB,EAASsB,EAASC,KAAKE,IAAK,CACxBR,WAAY,QACZC,aAAa,IAtCX,8BA2CmB,mBAAzBI,EAASC,KAAKC,OA3CR,wBA4CNxB,EAASsB,EAASC,KAAKE,IAAK,CACxBR,WAAY,QACZC,aAAa,IA9CX,8BAmDmB,cAAzBI,EAASC,KAAKC,OAnDR,wBAoDNxB,EAASsB,EAASC,KAAKE,IAAK,CACxBR,WAAY,QACZC,aAAa,IAtDX,2BA8DNhB,EAAe,CACXtB,MAAO0C,EAASC,KAAK3C,MACrB4B,MAAOc,EAASC,KAAKf,MACrBkB,WAAY,KAEdC,aAAaC,QAAQ,aAAcN,EAASC,KAAK3C,OAEnDyB,EAAQW,KAAK,cArEP,4CAAH,qDA2EX,OACI,eAACa,EAAA,EAAD,CACEC,GAAI,CACFC,OAAQ,QACRzC,gBAAiB,WAHrB,UAMI,cAAC0C,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QAVrC,WACb9B,EAAQW,KAAK,MASwDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACI,cAAC,IAAD,MAEJ,sBAAKC,UAAU,WAAf,UAEA,mBAAGA,UAAU,QAAb,qBACI,cAACvD,EAAD,CACIwD,YAAY,QACZT,GAAI,CAAErC,MAAO,MAAO+C,GAAG,OAAQC,GAAG,QAClCC,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOnC,EAASmC,EAAEC,OAAOH,UAEvC,cAAC3D,EAAD,CACIwD,YAAY,WACZT,GAAI,CAAErC,MAAO,MAAOqD,aAAc,QAClCC,KAAMlC,EAAOD,aAAe,OAAS,WACrC8B,MAAO7B,EAAOF,SACdgC,UAvGM5C,EAuGiB,WAvGR,SAACiD,GAC5BlC,EAAU,2BAAKD,GAAN,kBAAed,EAAOiD,EAAMH,OAAOH,WAuGhCO,MAAM,aAET,sBAAKX,UAAU,UAAf,UACG,cAACY,EAAA,EAAD,CAAQpB,GAAI,CAACxC,gBAAgB,cAAeG,MAAM,MAAOwC,MAAO,UAAUkB,EAAE,EAAGV,GAAG,OAAQR,MAAM,UAAUmB,QAAQ,SAASjB,QAAStD,EAApI,uBAGA,cAACwE,EAAA,EAAD,CAAYD,QAAQ,YAApB,kD,YC7JPE,EAAa,aACbC,EAAW,WAEXC,EAAa,aCMbC,EAAU,SAACC,GACpB,MAAO,CACHX,KAAMY,EACNC,QAASF,IAIJG,EAAY,SAACH,GACtB,MAAO,CACHX,KAAMY,EACNC,QAAUF,ICKZ3E,G,OAAiBC,YAAOC,IAAPD,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,YAAa,CACTC,UAAWD,EAAME,QAAQ,IAE7B,wBAAyB,CACrBC,SAAU,WACVG,aAAa,OACbF,gBAAiB,QACjBC,OAAQ,oBACRG,QAAS,YACTC,WAAYT,EAAMU,YAAYC,OAAO,CACjC,eACA,mBACA,aACA,uBAKG,SAASiE,IACpB,IAcsB/D,EAdhBgE,EAAWC,cADc,EAELzD,mBAAS,IAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,OAGHC,IAAMH,SAAS,CACvCI,SAAU,GACVC,cAAc,IALa,mBAGxBC,EAHwB,KAGhBC,EAHgB,OAOKJ,IAAMH,SAAS,CAC/C0D,WAAY,GACZC,gBAAgB,IATW,mBAOxBC,EAPwB,KAOZC,EAPY,KAWvBpE,EAAaC,sBAAbD,SACAE,EAAmBC,qBAAWC,GAA9BF,eACFG,EAAUC,cA6BV+D,EAAM,uCAAG,kCAAAtD,EAAA,yDACLJ,EAAWE,EAAOF,SAClBsD,EAAaE,EAAWF,WAEzBzD,EAJM,uBAKPR,EAAS,qBAAsB,CAC3BiB,WAAY,QACZC,aAAa,IAPV,6BAYPP,IAAasD,EAZN,uBAaPjE,EAAS,0BAA2B,CAChCiB,WAAY,QACZC,aAAa,IAfV,iCAoBLoD,EAAU,CACZ9D,QACAG,YAtBO,UAwBkBS,IAAMC,KAAK,kBAAmBiD,GAxBhD,QA2BwB,OAH7BC,EAxBK,QA2BQhD,KAAKC,QACpBtB,GAAe,GAOf6D,EDrHD,CACHhB,KAAMY,EACNC,QC+GoB,CACZpD,MAAOA,EACPkB,WAAY,MAGhBrB,EAAQW,KAAK,WAEbhB,EAASuE,EAAehD,KAAKE,IAAK,CAC9BR,WAAY,QACZC,aAAa,IAxCV,4CAAH,qDAgDZ,OAAQ,eAACW,EAAA,EAAD,CACJC,GAAI,CACFC,OAAQ,QACRzC,gBAAiB,WAHf,UAMF,cAAC0C,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QATnC,WACb9B,EAAQW,KAAK,MAQsDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACM,cAAC,IAAD,MAEJ,qBAAKC,UAAU,YAEf,sBAAKA,UAAU,WAAf,UAEA,mBAAGA,UAAU,QAAb,qBACI,cAAC,EAAD,CACIC,YAAY,QACZQ,KAAK,QACLjB,GAAI,CAAErC,MAAO,MAAO+C,GAAI,OAAQC,GAAG,QACnCC,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOnC,EAASmC,EAAEC,OAAOH,UAGvC,cAAC,EAAD,CACIH,YAAY,WACZT,GAAI,CAAErC,MAAO,MAAOqD,aAAc,QAClCC,KAAMlC,EAAOD,aAAe,OAAS,WACrC8B,MAAO7B,EAAOF,SACdgC,UAtGM5C,EAsGiB,WAtGR,SAACiD,GAC5BlC,EAAU,2BAAKD,GAAN,kBAAed,EAAOiD,EAAMH,OAAOH,WAsGhCO,MAAM,aAEV,cAAC,EAAD,CACIV,YAAY,mBACZT,GAAI,CAAErC,MAAO,MAAOqD,aAAc,QAClCC,KAAMoB,EAAWD,eAAiB,OAAS,WAC3CxB,MAAOyB,EAAWF,WAClBtB,SA/Fe,SAAC5C,GAAD,OAAU,SAACiD,GACtCoB,EAAc,2BAAKD,GAAN,kBAAmBpE,EAAOiD,EAAMH,OAAOH,UA8F9B8B,CAAuB,cACjCvB,MAAM,aAEV,qBAAKX,UAAU,UAAUmC,MAAO,CAACtF,UAAU,QAA3C,SACA,cAAC+D,EAAA,EAAD,CAAQpB,GAAI,CAACxC,gBAAgB,cAAe2C,MAAO,UAAUkB,EAAE,EAAE1D,MAAM,OAAQwC,MAAM,UAAUmB,QAAQ,SAASjB,QAASkC,EAAzH,qC,aC5KD,MAA0B,iC,SCS1B,SAASK,IACtB,IAAMrE,EAAUC,cAEhB,OAEE,cAACuB,EAAA,EAAD,CACEC,GAAI,CACFC,OAAQ,QACRzC,gBAAiB,WAHrB,SAME,eAACqF,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,eAAe,SACfC,WAAW,SACXjD,GAAI,CACFkD,GAAG,EACHC,GAAI,IAPV,UAUE,cAACN,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,qBAAKC,IAAKC,EAASC,IAAI,OAAO5F,MAAM,YAEtC,cAACkF,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CAACW,GAAG,GAAnB,SACE,cAACY,EAAA,EAAD,CAAYD,QAAQ,KAAKtB,GAAI,CAACwD,UAAW,SAAUrD,MAAO,QAA1D,iCAIF,cAAC0C,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAAC7B,EAAA,EAAD,CAAYD,QAAQ,YAAYqB,MAAO,CAACa,UAAW,SAAUrD,MAAO,aAApE,iHAIF,cAAC0C,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CAAEW,GAAI,EAAGhD,MAAO,QAA/B,SACE,eAAC8F,EAAA,EAAD,CACIC,YAAY,WACZtD,aAAW,kCACXJ,GAAI,CAACrC,MAAM,OAHf,UAKE,cAACyD,EAAA,EAAD,CAAQpB,GAAI,CAACxC,gBAAgB,cAAe2C,MAAO,UAAUkB,EAAE,GAAIlB,MAAM,UAAUmB,QAAQ,YAAcjB,QAAS,kBAAK9B,EAAQW,KAAK,cAApI,6BACA,cAACkC,EAAA,EAAD,CAAQpB,GAAI,CAACxC,gBAAgB,cAAe2C,MAAO,UAAUkB,EAAE,GAAIlB,MAAM,UAAUmB,QAAQ,YAAajB,QAAS,kBAAK9B,EAAQW,KAAK,WAAnI,iC,2ECvCI,SAASyE,EAAMC,GACzB,IAAM3B,EAAWC,cADe,EAEPzD,mBAAS,GAFF,mBAEzBd,EAFyB,KAElBkG,EAFkB,OAGLpF,mBAAS,KAHJ,mBAGzBqF,EAHyB,KAGlBC,EAHkB,OAIMtF,mBAAS,GAJf,mBAIZuF,GAJY,aAKNvF,mBAAS,GALH,mBAKzBwF,EALyB,KAKlBC,EALkB,OAMMzF,mBAAS,IANf,mBAMzB0F,EANyB,KAMZC,EANY,KA2BjCC,qBAAU,WACM,KAAVP,GACCC,EAAU,KAEuB,KAAlCD,EAAOQ,MAAM,GAAGC,WAAW,IAC1BR,GAAU,SAAAS,GAAI,OAAIC,OAAOD,GAAME,QAAQ,MAE3Cb,EAAS,EAA+B,IAAzBC,EAAOa,WAAWC,QACjCZ,EAAeF,GACZA,EAAOa,WAAWE,SAAS,MAC1Bb,GAAe,SAAAQ,GAAI,OAAIC,OAAOD,GAAME,QAAQ,QAEjD,CAACZ,IAEH,IAcKgB,EAAQlB,EAAMkB,MAcrB,OAZCT,qBAAU,WAKN,OAFApC,EAAS8C,EADE,CAACD,QAAOb,QAAOH,SAAQK,iBAG3B,WAEHlC,EAAS8C,EADE,CAACD,MAAQ,EAAGb,MAAQ,EAAGH,OAAO,GAAIK,YAAa,SAGhE,CAACL,EAAQG,EAAOhC,EAAU6C,EAAOX,IAIlC,8BACL,eAACtB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,iBAAiBC,WAAW,SAAS3F,QAAS,EAAhG,UACY,eAACuF,EAAA,EAAD,CAAMO,MAAI,EAAV,UACI,cAAClD,EAAA,EAAD,CAAYE,aAAW,QAAQJ,GAAI,CAACgF,GAAI,GAAI3E,QA7BvC,WACb6D,GAAS,SAAAM,GACL,OAAGA,GAAO,EACCA,EAAK,EAGLA,MAuBP,SACI,cAAC,IAAD,CAAiBrE,MAAM,cAE3B,sBAAMK,UAAU,QAAhB,SAAyByD,IACzB,cAAC/D,EAAA,EAAD,CAAYE,aAAW,OAAOJ,GAAI,CAACgF,GAAI,GAAI3E,QApCrC,WACd6D,GAAS,SAAAM,GAAI,OAAIA,EAAK,MAmCd,SACI,cAAC,IAAD,CAAcrE,MAAM,iBAI5B,cAAC0C,EAAA,EAAD,CAAMO,MAAI,EAAC5C,UAAU,UAArB,SACI,cAACyE,EAAA,EAAD,CACI3D,QAAQ,WACR4D,GAAG,yBACHlF,GAAI,CAAEmF,EAAG,EAAEC,GAAG,EAAGzH,MAAOA,EAAO,KAAM0H,SAAW,QAChDC,WAAY,CACRC,eAAgB,cAACC,EAAA,EAAD,CAAgBjI,SAAS,QAAzB,SAAiC,mBAAGiD,UAAU,WAAb,kBACjDiF,kBAAkB,EAClB9C,MAAO,CAAE+C,SAAU,KAEvBzE,KAAK,SACLJ,SArFQ,SAACC,GACjBA,EAAE6E,iBACF,IACMC,EAAS9E,EAAEC,OAAOH,MAAM+D,WAAWkB,MAD7B,wBAGZ,GAAGD,GAAUA,EAAO,IAAM,WACtB7B,GAAU,SAAAS,GAAI,OAAIoB,EAAS9E,EAAEC,OAAOH,MAAQ4D,KAEZ,MAA7B1D,EAAEC,OAAOH,MAAM0D,MAAM,EAAE,IACtB,GAAiC,OAA9BxD,EAAEC,OAAOH,MAAM0D,MAAM,EAAE,QAErB,CACD,IAAIwB,EAAMhF,EAAEC,OAAOH,MAAM0D,MAAM,GAC/BP,EAAU+B,KAyEdlF,MAAOkD,MAIf,cAACjB,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXrC,MAAM,OADV,SAGI,cAACsH,EAAA,EAAD,CACIxE,YAAY,cACZa,QAAQ,WACRgE,WAAY,CACRS,WAAY,CACRpD,MAAO,CAAEa,UAAW,YAG5B3C,SAAY,SAACC,GAAD,OAAMsD,EAAetD,EAAEC,OAAOH,QAC1CoF,WAAS,EACTC,SAAO,W,qECNZC,I,OAnHC,SAACC,EAAYC,EAAaC,GAqBpC,SAASC,EAASC,GAEf,IAAIC,EAAI,IAAIC,KAKRC,EAAMF,EAAEG,UAAqC,IAAxBH,EAAEI,oBAK3B,OADS,IAAIH,KAAKC,EAAO,KAAQH,GAMpC,IAAM9G,EACN,CACI,cAAgB,CACb,oBAAuB4G,EAASvJ,MAAOuJ,EAASvJ,MAAO,wCACvD,oBAAuBuJ,EAASQ,OAASR,EAASQ,OAAS,EAC3D,aAAgBR,EAASS,QAAUT,EAASS,QAAU,SACtD,WAAa,aAEhB,QAAU,CACP,kBA7C0B,QAAxBV,EAAYW,QACF,EAEe,QAAxBX,EAAYW,QACH,EAEN,EAwCN,gBAAmBX,EAAYY,IAC/B,OAAWZ,EAAYa,KACvB,MAAQ,GACR,UAAab,EAAYrD,UACzB,OAAS,GACT,KAAO,GACP,UAAY,GACZ,QAAU,IAEb,qBAAuB,CACpB,eA/CoB,YAArBqD,EAAYnF,KACL,KAEc,WAArBmF,EAAYnF,KACL,KAEc,SAArBmF,EAAYnF,KACL,UADV,EA0CI,OAAS,MACT,WAAcoF,EAASa,OAASb,EAASa,OAAS,GAClD,iBAAmB,IACnB,kBAAoB,GAApB,OAAwBZ,EAAS,MAAMa,UAAvC,YAAoDb,EAAS,MAAMc,WAAW,EAA9E,YAAmFd,EAAS,MAAMe,eAClG,UAAY,GACZ,UAAY,GACZ,cAAgB,GAChB,gBAAkB,EAClB,YAAc,GACd,qBAAwB,IAE3B,QAAU,IA0Cd,OA5BAlB,EAAWmB,KAAI,SAACC,EAAIzC,GACdyC,EAAGzC,QAAUA,IAEI,IAAbyC,EAAGtD,OAA+B,MAAdsD,EAAGzD,QAAkC,KAAdyD,EAAGzD,QAG/CrE,EAAK+H,QAAQtI,KAAK,CACf,WAAa,EACb,OAAS,MACT,cAAgB,KAChB,qBAAuB,GACvB,YAAgBqI,EAAGpD,YACnB,eAAiB,MACjB,aAAiBoD,EAAGzD,OACpB,SAAYyD,EAAGtD,YAM3BwD,QAAQC,IAAIjI,GACO,CAChBkI,OAAQ,OACRC,QAAS,CACN,eAAgB,oBAEnBC,KAAMC,KAAKC,UAAUtI,MC/Ef,SAASuI,KAAW,IAAD,EACc3J,qBAAWC,GAA/C2J,EADsB,EACtBA,OAAQC,EADc,EACdA,QAAS9J,EADK,EACLA,eADK,EAEQK,mBAAS,CAC3CqF,OAAQ,GACRmD,KAAM,GACND,IAAK,GACLjE,UAAW,GACXoF,SAAU,GACVvI,WAAY,GACZqB,KAAM,GACNmH,QAAQ,GACRrB,QAAS,KAXiB,mBAEvBX,EAFuB,KAEViC,EAFU,KAatBnK,EAAaC,sBAAbD,SACFK,EAAUC,cAdc,EAeAI,IAAMH,UAAS,GAff,mBAevB6J,EAfuB,KAedC,EAfc,OAgBR9J,oBAAS,GAhBD,mBAgBvB+J,EAhBuB,KAgBlBC,EAhBkB,OAiBAhK,mBAAS,CACnCiK,SAAS,EACTC,QAAQ,EACRC,MAAM,IApBoB,mBAiBvB7B,EAjBuB,KAiBd8B,EAjBc,OAuBJpK,oBAAS,GAvBL,mBAuBvBqK,EAvBuB,KAuBhBC,EAvBgB,KAwBxB9G,EAAWC,cAIjBmC,qBAAU,YACa,uCAAG,kCAAApF,EAAA,yDACdnC,EAAQ+C,aAAamJ,QAAQ,cAC7BpJ,EAAaC,aAAamJ,QAAQ,cACjClM,GAAU8C,EAHG,uBAIhBrB,EAAQW,KAAK,KAJG,0CAOMI,IAAM2J,IAAI,UAAW,CACzCrB,QAAS,CAAE,eAAgB9K,KARb,cAOVoM,EAPU,OAUhB9K,EAAe,CACbtB,QACA4B,MAAOwK,EAAQzJ,KAAKf,MACpBkB,WAAYA,IAIdqI,EAAO,IAEPnC,EAAK,GAnBW,UAoBjBxG,IAAM2J,IAAI,kBAAoBrJ,GAAYuJ,KAA1C,uCAA+C,WAAOC,GAAP,SAAAnK,EAAA,sDAChD6G,EAAKmB,KAAOmC,EAAI3J,KAAK,GAAGwH,KACxBnB,EAAKkB,IAAMoC,EAAI3J,KAAK,GAAGuH,IACvBlB,EAAKlG,WAAawJ,EAAI3J,KAAK,GAAG4J,IAC9BvD,EAAK/C,UAAYqG,EAAI3J,KAAK,GAAGsD,UAC7B+C,EAAKqC,SAAWiB,EAAI3J,KAAK,GAAG0I,SAC5BrC,EAAKsC,QAAQ,GACbtC,EAAKiB,QAAUqC,EAAI3J,KAAK,GAAGsH,QACA,QAAxBqC,EAAI3J,KAAK,GAAGsH,SAEX0B,GAAO,GAVqC,2CAA/C,uDApBiB,yBAiCjBnJ,IAAM2J,IAAI,gBAAkBC,EAAQzJ,KAAKf,OAAOyK,KAAhD,uCACP,WAAO9C,GAAP,SAAApH,EAAA,sDACE4J,EAAW,2BAAI9B,GAAL,IAAc,QAAYV,EAAS5G,KAAKsH,QAAQ,GAAI,OAAWV,EAAS5G,KAAKsH,QAAQ,GAAI,KAASV,EAAS5G,KAAKsH,QAAQ,MAClIjB,EAAK7E,KAAO,IACToF,EAAS5G,KAAKsH,QAAQ,IAAOV,EAAS5G,KAAKsH,QAAQ,IAAOV,EAAS5G,KAAKsH,QAAQ,KAC/EjB,EAAK7E,KAAO,UACZ4H,EAAW,2BAAI9B,GAAL,IAAc,SAAY,MAGpCV,EAAS5G,KAAKsH,QAAQ,KAAMV,EAAS5G,KAAKsH,QAAQ,IAAOV,EAAS5G,KAAKsH,QAAQ,KAC/EjB,EAAK7E,KAAO,SACZ4H,EAAW,2BAAI9B,GAAL,IAAc,QAAW,MAGnCV,EAAS5G,KAAKsH,QAAQ,IAAOV,EAAS5G,KAAKsH,QAAQ,KAAMV,EAAS5G,KAAKsH,QAAQ,KAC/EjB,EAAK7E,KAAO,OACZ4H,EAAW,2BAAI9B,GAAL,IAAc,MAAS,MAGlCV,EAAS5G,KAAKsH,QAAQ,IAAOV,EAAS5G,KAAKsH,QAAQ,KAAOV,EAAS5G,KAAKsH,QAAQ,KAC/EgC,GAAS,GACc,IAApBjD,EAAKkB,IAAIpC,SACRkB,EAAK7E,KAAO,WAIjBoF,EAAS5G,KAAKsH,QAAQ,KAAQV,EAAS5G,KAAKsH,QAAQ,IAAMV,EAAS5G,KAAKsH,QAAQ,KAC/EgC,GAAS,GACc,IAApBjD,EAAKkB,IAAIpC,SACRkB,EAAK7E,KAAO,SAIpBoH,EAAevC,GAhCjB,2CADO,uDAjCiB,4CAAH,qDAqEvBwD,KAEG,IAEH,IAtG8B,EA6GM7K,mBAAS,GA7Gf,mBA6GvB8K,EA7GuB,KA6GXC,GA7GW,KAoHxBC,GAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SApHd,GAqHDnL,mBAAS,IArHR,qBAqHtBoL,GArHsB,MAqHdC,GArHc,MAuHxB3D,GAAa,GAEb4D,GAAO,WACT,IADe,IAAD,WACNC,GACH7D,GAAWjH,KAAK2K,GAAOI,QAAO,SAAC1C,GAC5B,OAAOA,EAAGzC,QAAUkF,KACrBE,QAHCF,EAAI,EAAGA,EAAET,EAAW,EAAIS,IAAK,EAA7BA,IA1HkB,GAgINvL,mBAAS,GAhIH,qBAgIvB0L,GAhIuB,MAgIhBC,GAhIgB,MA4I9B/F,qBAAU,WACNyF,IAAU,SAAAtF,GAAI,4BAAOA,GAAP,CAAaiF,UAC7B,CAACA,KACHpF,qBAAU,WACN0F,KAfW,WAEX,IADA,IAAIM,EAAM,EACFL,EAAI,EAAGA,EAAG7D,GAAWvB,OAAQoF,SACZM,IAAlBnE,GAAW6D,KAGVK,GAAOlE,GAAW6D,GAAG/F,MAAQQ,OAAO0B,GAAW6D,GAAGlG,SAG1DsG,GAASC,EAAI3F,QAAQ,IAOrB6F,KAGD,CAACV,KACJxF,qBAAU,WACNgE,EAAe,2BACRjC,GADO,IAEV,OAAW+D,GAAMxF,gBAGvB,CAACwF,KACH,IAAM5H,GAAM,uCAAE,4BAAAtD,EAAA,yDACVK,IAAM2J,IAAI,cAAgB7C,EAAY+B,UAAUgB,KAAhD,uCACI,WAAO9C,GAAP,SAAApH,EAAA,yDAEOoH,EAAS5G,KAAK+K,cAFrB,uBAGItM,EAAS,gCAAiC,CACtCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEf7K,aAAa8K,WAAW,cACxB9K,aAAa8K,WAAW,cACxBpM,EAAQW,KAAK,UAXjB,8DADJ,uDAkBKkH,EAAW,OAnBN,uBAoBNlI,EAAS,sBAAuB,CAC5BiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAxBT,6BA4BVX,UACqBO,IAAlBnE,GAAW,GA7BJ,uBA8BNjI,EAAS,2BAA4B,CACjCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAlCT,0BAsCFV,EAAI,EAtCF,YAsCKA,EAAG7D,GAAWvB,QAtCnB,oBAuCqB,IAAxBuB,GAAW6D,GAAG/F,OAAwC,MAAzBkC,GAAW6D,GAAGlG,OAvCxC,4CAyC+B,KAA9BqC,GAAW6D,GAAG7F,YAzCf,wBA0CEjG,EAAS,2BAA4B,CACjCiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,eA9CjB,8BAkD2B,MAAzBvE,GAAW6D,GAAGlG,OAlDhB,wBAmDE5F,EAAS,sBAAuB,CAC5BiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,eAvDjB,2BAsC2BV,IAtC3B,0BA8DL5D,EAAW,KA9DN,wBA+DNlI,EAAS,qBAAsB,CAC3BiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,eAnET,2BAuEVnC,GAAW,GACXN,EAAO,sBACP3I,IAAM2J,IAAI,cAAe7C,EAAY+B,UAAUgB,MAAK,SAAC9C,GAEhDuE,GADkB1E,GAAQC,GAAYC,EAAaC,EAAS5G,MACzC2G,EAAYnF,SA3E1B,4CAAF,qDA5JkB,SA2Of2J,GA3Oe,mFA2O9B,WAAuBC,EAAO5J,GAA9B,SAAAhC,EAAA,sEAEiB6L,MAAe,SAAT7J,EAAkB,gEAAiE,2DAA4D4J,GACjK1B,MAAK,SAAC9C,GACE,OAAOA,EAAS0E,UAGxB5B,MAAM,SAAC6B,GAED,IAAMC,EAAU,gEAA4DD,EAAME,UAAUC,iBAA5E,YAAgGH,EAAME,UAAUE,uBAAhH,YAA0IJ,EAAME,UAAUG,kBAA1J,YAA+KL,EAAME,UAAUI,mBAA/L,uBAEjBrD,EAAOgD,EAAWtG,YAClB,IAAI4G,EAAW,2BAAOnF,GAAP,IAAmB,QAAY6E,EAAWtG,aAOvD,OALJ0D,EAAe,2BACJjC,GADG,IAEN,QAAY6E,EAAWtG,cAGpB4G,KAGdpC,KApBY,uCAoBP,WAAOqC,GAAP,SAAAvM,EAAA,sDACFK,IAAMC,KAAK,gBAAiBiM,GAAKrC,KAAjC,uCAAsC,WAAO9C,GAAP,mBAAApH,EAAA,sDAEL,MAAzBoH,EAAS5G,KAAKC,SACdwI,GAAQ,GACRrI,aAAa8K,WAAW,cAClBc,EAAc,IAAIhF,KAClBiF,EAAgBD,EAClBE,EAAK,CACL1E,KAAMuE,EAAIvE,KACV2E,KAAMF,GAEVzJ,EAAS8C,EAAgB4G,IACzBpN,EAAQW,KAAK,CACT2M,SAAU,YAAczF,EAAW,UAbT,2CAAtC,uDADE,2CApBO,uDAwCZ0F,OAAM,SAACC,GACJ7N,EAAS,oEAAqE,CAC9EiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfnC,GAAW,MAjDf,oFA3O8B,sBA0S9B,OAVAlE,qBAAU,WACN,OAAM,WACF+F,GAAS,GACTjE,GAAW6F,KAAK,MAChBlC,GAAU,MACVN,GAAc,GACdf,GAAO,MAGb,IAEE,cAAC1I,EAAA,EAAD,CAAKC,GAAI,CACLiM,SAAU,EACVtO,MAAO,OACPsC,OAAQ,QACRzC,gBAAkB,SAJtB,SAMJ,eAACqF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,gBAAgBC,WAAW,SAA7E,UACI,eAACJ,EAAA,EAAD,CAAMO,MAAI,EAACN,WAAS,EAACC,UAAU,MAAM/C,GAAI,CAACW,GAAG,GAAIqC,eAAe,SAASC,WAAW,SAApF,UACI,mBAAGzC,UAAU,OAAb,SAAqB4F,EAAW,OAChC,cAAClG,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QA9MrC,WACb9B,EAAQW,KAAK,cA6MwDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACI,cAAC,IAAD,SAGR,cAACsC,EAAA,EAAD,CAAMO,MAAI,EAAV,SACI,mBAAG5C,UAAU,MAAb,SAAoB4F,EAAW,QAEnC,cAACvD,EAAA,EAAD,CAAM7C,GAAI,CAACrC,MAAO,OAAQwF,GAAG,GAAIC,MAAI,EAArC,SACA,cAAC,KAAD,CACI8I,aAAc,EACdC,cAAe,EACfC,WAhNU,WACd5C,IAAc,SAAAhF,GAAI,OAAGA,EAAM,MA4M3B,SAQS,IAAI6H,MAAM9C,GAAYyC,KAAK,MAAM1E,KAAI,SAACgF,EAAGtC,GAAJ,OAClC,cAAC,KAAD,UACK,gBAAGuC,EAAH,EAAGA,SAAH,OACG,cAAC5I,EAAD,CAAOmB,MAAOkF,EAAGwC,SAAQD,MAFfvC,UAgB9B,cAACnH,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXW,GAAG,GADP,SAGI,eAAC8L,EAAA,EAAD,CACIC,KAAG,EACHC,kBAAgB,qCAChB1F,KAAK,0BACLjH,GAAI,CACAoF,GAAG,GALX,WAQMoD,GAAOzB,EAAQ2B,SAAW,cAACkE,EAAA,EAAD,CAAkB3F,KAAK,OAAOrG,MAAM,UAAUiM,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAY5L,MAAM,UAAUN,SAAU,SAACC,GAAD,OACzHuH,EAAe,2BACRjC,GADO,kBAETtF,EAAEC,OAAOkG,KAAOnG,EAAEC,OAAOH,YAGzCmG,EAAQ4B,UAAYG,IAAUN,IAAS,cAACoE,EAAA,EAAD,CAAkB3F,KAAK,OAAOrG,MAAM,SAASiM,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAY5L,MAAM,SAASN,SAAU,SAACC,GAAD,OACnIuH,EAAe,2BACRjC,GADO,kBAETtF,EAAEC,OAAOkG,KAAOnG,EAAEC,OAAOH,YAGzCmG,EAAQ6B,QAAUE,IAAUN,IAAQ,cAACoE,EAAA,EAAD,CAAkB3F,KAAK,OAAOrG,MAAM,OAAOiM,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAY5L,MAAM,OAAON,SAAU,SAACC,GAAD,OACpIuH,EAAe,2BACRjC,GADO,kBAERtF,EAAEC,OAAOkG,KAAOnG,EAAEC,OAAOH,iBAO3C,cAACiC,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXW,GAAG,GADP,SAGI,oBAAGH,UAAU,QAAb,qBAA8B2J,QAElC,cAACtH,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXmD,GAAG,EACHxF,MAAO,OAFX,SAIA,cAACqP,EAAA,EAAD,CACE3M,QAASkC,GACT0K,QAAS,cAAC,KAAD,IACT3E,QAASA,EACT4E,gBAAgB,MAChBlH,WAAS,EACT1E,QAAQ,YANV,SAQyB,KAArB8E,EAAYnF,KAAc,OAASmF,EAAYnF,KAAKkM,uB,6DCtZjD,SAASC,KAAS,IAAD,EACF3O,mBAAS,IADP,mBACrB4O,EADqB,KACdC,EADc,KAEpBpP,EAAaC,sBAAbD,SACFK,EAAUC,cAChB6F,qBAAU,WAyBN,OAvBA/E,IAAM2J,IAAI,cAAcE,MAAK,SAAC9C,GAE1B,IADA,IAAIgH,EAAQ,GACHrD,EAAI,EAAGA,EAAI3D,EAAS5G,KAAKmF,OAAQoF,IAAK,CAC3C,IAAIuD,EACJA,EAAO,CACHrI,GAAImB,EAAS5G,KAAKuK,GAAG9E,GACrB+B,KAAMZ,EAAS5G,KAAKuK,GAAG/C,KACvBuG,IAAKnH,EAAS5G,KAAKuK,GAAGwD,IACtBtG,OAAQb,EAAS5G,KAAKuK,GAAG9C,OACzBL,OAAQR,EAAS5G,KAAKuK,GAAGnD,OACzBC,QAAST,EAAS5G,KAAKuK,GAAGlD,QAC1B2G,OAAQpH,EAAS5G,KAAKuK,GAAGyD,OACzBC,KAAMrH,EAAS5G,KAAKuK,GAAG0D,KACvB5Q,MAAOuJ,EAAS5G,KAAKuK,GAAGlN,MACxB4B,MAAO2H,EAAS5G,KAAKuK,GAAGtL,MACxB8L,cAAenE,EAAS5G,KAAKuK,GAAGQ,eAEpC6C,EAAMnO,KAAKqO,GAEfD,EAASD,MAIP,WACFC,EAAS,OAEd,CAAC/O,IAEJ,IAlC4B,EAuCJK,IAAMH,SAAS,IAvCX,mBAuCrBkP,EAvCqB,KAuCfC,EAvCe,KA6CtBC,EAAc,WAChBD,EAAQ,KAkHZ,OACI,sBAAKpN,UAAU,QAAf,UACI,8BACI,cAACN,EAAA,EAAD,CAAYG,QAjIT,WACX9B,EAAQW,KAAK,MAgIL,SAA6B,mBACzBsB,UAAU,0CAKjB,mBAAGA,UAAU,mBAAmBH,QAbzB,WACZ9B,EAAQW,KAAK,iBAaT,wBAAOsB,UAAU,oBAAjB,UACI,gCACI,+BACI,oCACA,qCACA,6CAGR,gCACK6M,EAAM/F,KAAI,SAACiG,EAAMzI,GAAP,OACP,+BACI,6BAAKA,EAAQ,IACb,6BAAKyI,EAAKC,MACV,+BAEI,cAACtN,EAAA,EAAD,CAAY6M,KAAK,QAAQ1M,QAAS,kBAnChD6E,EAmC2DqI,EAAKrI,QAlC1E3G,EAAQW,KAAK,CACT2M,SAAU,eAAiB3G,IAFtB,IAACA,GAmCc,SAAuD,mBACnD1E,UAAU,iBAGd,cAACN,EAAA,EAAD,CAAY6M,KAAK,QAAQ1M,QAAS,kBApJrC6E,EAoJ2DqI,EAAKrI,QAnJrF0I,EAAQ1I,GADY,IAACA,GAoJG,SACA,mBACI1E,UAAU,uBAIb+M,EAAK/C,cACD,cAACtK,EAAA,EAAD,CAAY6M,KAAK,QAAQ1M,QAAS,kBAtGjD6E,EAsGgEqI,EAAKrI,QArGnF5F,IAAM2J,IAAI,mBAAqB/D,GAAIiE,MAAK,SAAC9C,GAErC,IADA,IAAIgH,EAAQ,GACHrD,EAAI,EAAGA,EAAI3D,EAAS5G,KAAKmF,OAAQoF,IAAK,CAC3C,IAAIuD,EACJA,EAAO,CACHrI,GAAImB,EAAS5G,KAAKuK,GAAG9E,GACrB+B,KAAMZ,EAAS5G,KAAKuK,GAAG/C,KACvBuG,IAAKnH,EAAS5G,KAAKuK,GAAGwD,IACtBtG,OAAQb,EAAS5G,KAAKuK,GAAG9C,OACzBL,OAAQR,EAAS5G,KAAKuK,GAAGnD,OACzBC,QAAST,EAAS5G,KAAKuK,GAAGlD,QAC1B2G,OAAQpH,EAAS5G,KAAKuK,GAAGyD,OACzBC,KAAMrH,EAAS5G,KAAKuK,GAAG0D,KACvB5Q,MAAOuJ,EAAS5G,KAAKuK,GAAGlN,MACxB4B,MAAO2H,EAAS5G,KAAKuK,GAAGtL,MACxB8L,cAAenE,EAAS5G,KAAKuK,GAAGQ,eAEpC6C,EAAMnO,KAAKqO,GAEfD,EAASD,GACTnP,EAAS,wBAAyB,CAC9BiB,WAAY,UACZC,aAAa,OAvBR,IAAC8F,GAsGe,SACD,mBACI1E,UAAU,kBAGd,cAACN,EAAA,EAAD,CAAY6M,KAAK,QAAQ1M,QAAS,kBA/ElD6E,EA+E+DqI,EAAKrI,QA9EhF5F,IAAM2J,IAAI,iBAAmB/D,GAAIiE,MAAK,SAAC9C,GAEnC,IADA,IAAIgH,EAAQ,GACHrD,EAAI,EAAGA,EAAI3D,EAAS5G,KAAKmF,OAAQoF,IAAK,CAC3C,IAAIuD,EACJA,EAAO,CACHrI,GAAImB,EAAS5G,KAAKuK,GAAG9E,GACrB+B,KAAMZ,EAAS5G,KAAKuK,GAAG/C,KACvBuG,IAAKnH,EAAS5G,KAAKuK,GAAGwD,IACtBtG,OAAQb,EAAS5G,KAAKuK,GAAG9C,OACzBL,OAAQR,EAAS5G,KAAKuK,GAAGnD,OACzBC,QAAST,EAAS5G,KAAKuK,GAAGlD,QAC1B2G,OAAQpH,EAAS5G,KAAKuK,GAAGyD,OACzBC,KAAMrH,EAAS5G,KAAKuK,GAAG0D,KACvB5Q,MAAOuJ,EAAS5G,KAAKuK,GAAGlN,MACxB4B,MAAO2H,EAAS5G,KAAKuK,GAAGtL,MACxB8L,cAAenE,EAAS5G,KAAKuK,GAAGQ,eAEpC6C,EAAMnO,KAAKqO,GAEfD,EAASD,GACTnP,EAAS,sBAAuB,CAC5BiB,WAAY,UACZC,aAAa,OAvBV,IAAC8F,GA+EgB,SAAyD,mBACrD1E,UAAU,4BAtBjBsE,WAgCrB,eAACgJ,GAAA,EAAD,CAC4BH,OAAMA,EACNI,QAASF,EACTlB,kBAAgB,qBAChBqB,mBAAiB,2BAJ7C,UAM4B,cAACC,GAAA,EAAD,CAAa/I,GAAG,qBAAhB,SACC,YAED,cAACgJ,GAAA,EAAD,UACA,cAACC,GAAA,EAAD,CAAmBjJ,GAAG,2BAAtB,yCAIA,eAACkJ,GAAA,EAAD,WACA,cAAChN,EAAA,EAAD,CAAQf,QAASwN,EAAjB,SAA+B,WAC/B,cAACzM,EAAA,EAAD,CAAQf,QAAS,kBAlLtC,SAAC6E,GAGZ,IAAImJ,EAAYhB,EAEhB/N,IAAMgP,OAAO,iBAAmBpJ,GAAIiE,MAAK,SAAC9C,GACtC,GAA0B,YAAtBA,EAAS5G,KAAKE,IAAmB,CAIjC,IAHA,IAAI4O,EAASlI,EAAS5G,KAAK8O,OACvBC,EAAWC,OAAOC,KAAKL,GAAWzJ,OAClCyI,EAAQ,GACHrD,EAAI,EAAGA,EAAIwE,EAAUxE,IAAK,CAC/B,IAAIuD,EAAO,GACPgB,IAAWF,EAAUrE,GAAG9E,KACxBqI,EAAO,CACHrI,GAAImJ,EAAUrE,GAAG9E,GACjB+B,KAAMoH,EAAUrE,GAAG/C,KACnBuG,IAAKa,EAAUrE,GAAGwD,IAClBtG,OAAQmH,EAAUrE,GAAG9C,OACrBL,OAAQwH,EAAUrE,GAAGnD,OACrBC,QAASuH,EAAUrE,GAAGlD,QACtB2G,OAAQY,EAAUrE,GAAGyD,OACrBC,KAAMW,EAAUrE,GAAG0D,KACnB5Q,MAAOuR,EAAUrE,GAAGlN,MACpB4B,MAAO2P,EAAUrE,GAAGtL,MACpB8L,cAAe6D,EAAUrE,GAAGQ,eAEhC6C,EAAMnO,KAAKqO,IAGnBD,EAASD,GACTnP,EAAS,uBAAwB,CAC7BiB,WAAY,UACZC,aAAa,SAGjBlB,EAAS,8BAA+B,CACpCiB,WAAY,QACZC,aAAa,OAIzByO,IAyIuDc,CAAOhB,IAAOiB,WAAS,EAA9C,SACK,kB,sDChO9B,SAASC,KAAQ,IACxB3J,EAAO4J,cAAP5J,GADuB,EAEHzG,mBAAS,IAFN,mBAEpBwI,EAFoB,KAEd8H,EAFc,OAGLtQ,mBAAS,IAHJ,mBAGpB+O,EAHoB,KAGfwB,EAHe,OAICvQ,mBAAS,IAJV,mBAIpByI,EAJoB,KAIZ+H,EAJY,OAKDxQ,mBAAS,IALR,mBAKpB3B,EALoB,KAKboS,EALa,OAMDzQ,mBAAS,IANR,mBAMpBC,EANoB,KAMbC,EANa,OAOCF,mBAAS,IAPV,mBAOpBgP,EAPoB,KAOZ0B,EAPY,OAQC1Q,mBAAS,IARV,mBAQpBoI,EARoB,KAQZuI,EARY,OASG3Q,mBAAS,IATZ,mBASpBqI,EAToB,KASXuI,EATW,OAUH5Q,mBAAS,IAVN,mBAUpBiP,EAVoB,KAUd4B,EAVc,OAWG7Q,mBAAS,CACrCiK,SAAS,EACTC,QAAQ,EACRC,MAAM,IAdmB,oBAWpB7B,GAXoB,MAWX8B,GAXW,MAiBrB0G,GAAY,SAACrO,GACjB2H,GAAW,2BACN9B,IADK,kBAEP7F,EAAMH,OAAOkG,KAAQ/F,EAAMH,OAAOyO,YAK/BtR,GAAaC,sBAAbD,SACFK,GAAUC,cAEZ+D,GAAM,uCAAG,8BAAAtD,EAAA,yDACJgI,EADI,uBAEL/I,GAAS,oBAAqB,CAC1BiB,WAAY,QACZC,aAAa,IAJZ,6BAQJoO,EARI,uBASLtP,GAAS,mBAAoB,CACzBiB,WAAY,QACZC,aAAa,IAXZ,6BAeJ8H,EAfI,uBAgBLhJ,GAAS,2BAA4B,CACjCiB,WAAY,QACZC,aAAa,IAlBZ,6BAsBJtC,EAtBI,wBAuBLoB,GAAS,qBAAsB,CAC3BiB,WAAY,QACZC,aAAa,IAzBZ,8BA6BJV,EA7BI,wBA8BLR,GAAS,qBAAsB,CAC3BiB,WAAY,QACZC,aAAa,IAhCZ,8BAoCJyH,EApCI,wBAqCL3I,GAAS,yBAA0B,CAC/BiB,WAAY,QACZC,aAAa,IAvCZ,8BA2CJ0H,EA3CI,wBA4CL5I,GAAS,4BAA6B,CAClCiB,WAAY,QACZC,aAAa,IA9CZ,8BAkDJqO,EAlDI,wBAmDLvP,GAAS,sBAAuB,CAC5BiB,WAAY,QACZC,aAAa,IArDZ,8BAyDJsO,EAzDI,wBA0DLxP,GAAS,oBAAqB,CAC1BiB,WAAY,QACZC,aAAa,IA5DZ,8BAgEL2H,GAAQ2B,SAAY3B,GAAQ4B,QAAW5B,GAAQ6B,KAhE1C,wBAiEP1K,GAAS,yBAA2B,CAClCiB,WAAY,QACZC,aAAc,IAnET,kCAwEPoD,EAAU,CACd0C,KACA+B,OACAuG,MACAtG,SACApK,QACA4B,QACAmI,SACAC,UACA2G,SACAC,OACA3G,YAnFW,UAqFgBzH,IAAMmQ,IACjC,gBACAjN,GAvFW,QA2FiB,OANxBC,EArFO,QA2FM/C,OACjBnB,GAAQW,KAAK,UAEbhB,GAASuE,EAAehD,KAAKE,IAAK,CAChCR,WAAY,QACZC,aAAa,IAhGJ,4CAAH,qDA0HV,OAlBAiF,qBAAU,WACV/E,IAAM2J,IAAI,cAAgB/D,GAAIiE,KAA9B,uCACE,WAAO9C,GAAP,SAAApH,EAAA,sDACE8P,EAAQ1I,EAAS5G,KAAKwH,MACtB+H,EAAO3I,EAAS5G,KAAK+N,KACrByB,EAAU5I,EAAS5G,KAAKyH,QACxBgI,EAAS7I,EAAS5G,KAAK3C,OACvBqS,EAAU9I,EAAS5G,KAAKgO,QACxB2B,EAAU/I,EAAS5G,KAAKoH,QACxBwI,EAAWhJ,EAAS5G,KAAKqH,QAAST,EAAS5G,KAAKqH,QAAU,UAC1DwI,EAAQjJ,EAAS5G,KAAKiO,MACtB/O,EAAS0H,EAAS5G,KAAKf,OACvBmK,GAAW,2BAAI9B,IAAL,IAAc,QAAYV,EAAS5G,KAAKsH,QAAQ,GAAI,OAAWV,EAAS5G,KAAKsH,QAAQ,GAAI,KAASV,EAAS5G,KAAKsH,QAAQ,MAVpI,4CADF,yDAeC,CAAE7B,IAGC,eAACnF,EAAA,EAAD,CACE2P,UAAU,OACV1P,GAAI,CAAE2P,QAAS,OAAQC,SAAU,OAAQvO,EAAE,GAC3CwO,YAAU,EACVC,aAAa,KAJf,UAME,cAAC5P,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QA7BnC,WACf9B,GAAQW,KAAK,WA4BwDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACM,cAAC,IAAD,MAEN,gCACA,cAACwP,GAAA,EAAD,CAAY/P,GAAI,CAACU,GAAG,EAAGP,MAAO,UAAW6P,WAAW,OAApD,uBACE,cAAC/K,EAAA,EAAD,CACEgL,UAAQ,EACRH,aAAa,QACbxO,QAAQ,WACRH,MAAM,OACN8E,SAAO,EACP8G,KAAK,QACL/G,WAAS,EACThG,GAAI,CAACkQ,GAAG,GACRtP,MAAOqG,EACPpG,SAAU,SAACC,GAAD,OAAOiO,EAAQjO,EAAEC,OAAOH,UAEpC,cAACqE,EAAA,EAAD,CACE9D,MAAM,MACNF,KAAK,SACLK,QAAQ,WACRyL,KAAK,QACL/M,GAAI,CAAEmQ,GAAI,EAAEzP,GAAG,EAAG/C,MAAO,OACzBiD,MAAO4M,EACP3M,SAAU,SAACC,GAAD,OAAOkO,EAAOlO,EAAEC,OAAOH,QACjCqF,SAAO,IAET,cAAChB,EAAA,EAAD,CACE9D,MAAM,cACNG,QAAQ,WACRL,KAAK,SACL8L,KAAK,QACL/M,GAAI,CAAEoQ,GAAI,EAAE1P,GAAG,EAAG/C,MAAO,OACzBiD,MAAOsG,EACPrG,SAAU,SAACC,GAAD,OAAOmO,EAAUnO,EAAEC,OAAOH,QACpCqF,SAAO,IAET,cAAChB,EAAA,EAAD,CACE9D,MAAM,QACN4L,KAAK,QACLzL,QAAQ,WACR2E,SAAO,EACPD,WAAS,EACThG,GAAI,CAACU,GAAG,GACRE,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAOoO,EAASpO,EAAEC,OAAOH,UAErC,cAACqE,EAAA,EAAD,CACEgL,UAAQ,EACR9O,MAAM,QACN4L,KAAK,QACLzL,QAAQ,WACR0E,WAAS,EACThG,GAAI,CAACU,GAAG,GACRuF,SAAO,EACPrF,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOnC,EAASmC,EAAEC,OAAOH,UAErC,cAACqE,EAAA,EAAD,CACE9D,MAAM,YACNF,KAAK,SACLK,QAAQ,WACRyL,KAAK,QACL/M,GAAI,CAAEU,GAAI,EAAEyP,GAAG,EAAGxS,MAAO,OACzBsI,SAAO,EACPrF,MAAOiG,EACPhG,SAAU,SAACC,GAAD,OAAOsO,EAAUtO,EAAEC,OAAOH,UAEtC,eAACyP,GAAA,EAAD,CAAarQ,GAAI,CAAEU,GAAI,EAAE0P,GAAG,EAAGzS,MAAO,OAASoP,KAAK,QAAQ9G,SAAO,EAAC3E,QAAQ,WAA5E,UACE,cAACyO,GAAA,EAAD,2BACA,eAACO,GAAA,EAAD,CACE1P,MAAOkG,EACPjG,SAAU,SAACC,GAAD,OAAOuO,EAAWvO,EAAEC,OAAOH,QACrCO,MAAM,MAHR,UAKE,cAACoP,GAAA,EAAD,CAAU3P,MAAM,SAAhB,oBACA,cAAC2P,GAAA,EAAD,CAAU3P,MAAM,QAAhB,yBAGN,cAACqE,EAAA,EAAD,CACI9D,MAAM,YACNF,KAAK,SACLK,QAAQ,WACRtB,GAAI,CAAEU,GAAI,EAAEyP,GAAG,EAAGxS,MAAO,OACzBoP,KAAK,QACL9G,SAAO,EACPrF,MAAO6M,EACP5M,SAAU,SAACC,GAAD,OAAOqO,EAAUrO,EAAEC,OAAOH,UAEtC,cAACqE,EAAA,EAAD,CACE9D,MAAM,UACNF,KAAK,SAELK,QAAQ,WACRtB,GAAI,CAAEU,GAAI,EAAE0P,GAAG,EAAGzS,MAAO,OACzBoP,KAAK,QACL9G,SAAO,EACPrF,MAAO8M,EACP7M,SAAU,SAACC,GAAD,OAAOwO,EAAQxO,EAAEC,OAAOH,UAGpC,cAACgM,EAAA,EAAD,CAAmBC,QAAS,cAAC2D,GAAA,EAAD,CAAWhB,QAASzI,GAAQ2B,QAAS7H,SAAU0O,GAAWtI,KAAK,UAAU8F,KAAK,UAAW5L,MAAM,YAC3H,cAACyL,EAAA,EAAD,CAAkBC,QAAS,cAAC2D,GAAA,EAAD,CAAUhB,QAASzI,GAAQ4B,OAAQ9H,SAAU0O,GAAWtI,KAAK,SAAS8F,KAAK,UAAW5L,MAAM,WACvH,cAACyL,EAAA,EAAD,CAAkBC,QAAS,cAAC2D,GAAA,EAAD,CAAUhB,QAASzI,GAAQ6B,KAAM/H,SAAU0O,GAAWtI,KAAK,OAAO8F,KAAK,UAAW5L,MAAM,SAEnH,cAACC,EAAA,EAAD,CAAQf,QAASkC,GAAQjB,QAAQ,YAAYtB,GAAI,CAACU,GAAG,EAAG/C,MAAO,OAA/D,wB,wDCrQG,SAAS8S,KAAU,IAgCRxS,EAhCO,EACLQ,mBAAS,IADJ,mBACtBwI,EADsB,KAChB8H,EADgB,OAEPtQ,mBAAS,IAFF,mBAEtB+O,EAFsB,KAEjBwB,EAFiB,OAGDvQ,mBAAS,IAHR,mBAGtByI,EAHsB,KAGd+H,EAHc,OAIHxQ,mBAAS,IAJN,mBAItB3B,EAJsB,KAIfoS,EAJe,OAKHzQ,mBAAS,IALN,mBAKtBC,EALsB,KAKfC,EALe,OAMDF,mBAAS,IANR,mBAMtBgP,EANsB,KAMd0B,EANc,OAOD1Q,mBAAS,IAPR,mBAOtBoI,EAPsB,KAOduI,EAPc,OAQC3Q,mBAAS,UARV,mBAQtBqI,EARsB,KAQbuI,EARa,OASL5Q,mBAAS,IATJ,mBAStBiP,EATsB,KAShB4B,GATgB,QAUD1Q,IAAMH,SAAS,CACvCI,SAAU,GACVC,cAAc,IAZW,qBAUtBC,GAVsB,MAUdC,GAVc,SAcOJ,IAAMH,SAAS,CAC/C0D,WAAY,GACZC,gBAAgB,IAhBS,qBActBC,GAdsB,MAcVC,GAdU,SAkBC7D,mBAAS,CACrCiK,SAAS,EACTC,QAAQ,EACRC,MAAO,IArBoB,qBAkBtB7B,GAlBsB,MAkBb8B,GAlBa,MAuBvB0G,GAAY,SAACrO,GACjB2H,GAAW,2BACN9B,IADK,kBAEP7F,EAAMH,OAAOkG,KAAQ/F,EAAMH,OAAOyO,YAG/BtR,GAAaC,sBAAbD,SACFK,GAAUC,cAaVkS,GAA0B,SAACxP,GAC7BA,EAAMyE,kBAeJpD,GAAM,uCAAG,kCAAAtD,EAAA,yDACLJ,EAAWE,GAAOF,SAClBsD,EAAaE,GAAWF,WACzB8E,EAHM,uBAIP/I,GAAS,oBAAqB,CAC1BiB,WAAY,QACZC,aAAa,IANV,6BAUNoO,EAVM,uBAWPtP,GAAS,mBAAoB,CACzBiB,WAAY,QACZC,aAAa,IAbV,6BAiBN8H,EAjBM,wBAkBPhJ,GAAS,2BAA4B,CACjCiB,WAAY,QACZC,aAAa,IApBV,8BAwBNtC,EAxBM,wBAyBPoB,GAAS,qBAAsB,CAC3BiB,WAAY,QACZC,aAAa,IA3BV,8BA+BNV,EA/BM,wBAgCPR,GAAS,qBAAsB,CAC3BiB,WAAY,QACZC,aAAa,IAlCV,8BAsCNyH,EAtCM,wBAuCP3I,GAAS,yBAA0B,CAC/BiB,WAAY,QACZC,aAAa,IAzCV,8BA6CN0H,EA7CM,wBA8CP5I,GAAS,4BAA6B,CAClCiB,WAAY,QACZC,aAAa,IAhDV,8BAoDNqO,EApDM,wBAqDPvP,GAAS,sBAAuB,CAC5BiB,WAAY,QACZC,aAAa,IAvDV,8BA2DNsO,EA3DM,wBA4DPxP,GAAS,oBAAqB,CAC1BiB,WAAY,QACZC,aAAa,IA9DV,8BAkEPP,IAAasD,EAlEN,wBAmEPjE,GAAS,0BAA2B,CAChCiB,WAAY,QACZC,aAAa,IArEV,8BAyEP2H,GAAQ2B,SAAY3B,GAAQ4B,QAAW5B,GAAQ6B,KAzExC,wBA0ET1K,GAAS,yBAA2B,CAClCiB,WAAY,QACZC,aAAc,IA5EP,kCAgFLoD,EAAU,CACZyE,OACAuG,MACAtG,SACApK,QACA4B,QACAmI,SACAC,UACA2G,SACAC,OACA7O,WACAkI,YA3FO,UA6FkBzH,IAAMC,KAAK,kBAAmBiD,GA7FhD,QAgGwB,OAH7BC,EA7FK,QAgGQhD,KAAKC,OACpBnB,GAAQW,KAAK,UAEbhB,GAASuE,EAAehD,KAAKE,IAAK,CAC9BR,WAAY,QACZC,aAAa,IArGV,4CAAH,qDA4GZ,OACI,eAACW,EAAA,EAAD,CACE2P,UAAU,OACV1P,GAAI,CAAE2P,QAAS,OAAQC,SAAU,OAAQvO,EAAE,GAC3CwO,YAAU,EACVC,aAAa,KAJf,UAME,cAAC5P,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QAVnC,WACf9B,GAAQW,KAAK,WASwDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACM,cAAC,IAAD,MAEN,gCACA,cAACwP,GAAA,EAAD,CAAY/P,GAAI,CAACU,GAAG,EAAGP,MAAO,UAAW6P,WAAW,OAApD,sBACE,cAAC/K,EAAA,EAAD,CACEgL,UAAQ,EACRH,aAAa,QACbxO,QAAQ,WACRH,MAAM,OACN8E,SAAO,EACP8G,KAAK,QACL/G,WAAS,EACThG,GAAI,CAACkQ,GAAG,GACRtP,MAAOqG,EACPpG,SAAU,SAACC,GAAD,OAAOiO,EAAQjO,EAAEC,OAAOH,UAEpC,cAACqE,EAAA,EAAD,CACE9D,MAAM,MACNF,KAAK,SACLK,QAAQ,WACRyL,KAAK,QACL/M,GAAI,CAAEmQ,GAAI,EAAEzP,GAAG,EAAG/C,MAAO,OACzBiD,MAAO4M,EACP3M,SAAU,SAACC,GAAD,OAAOkO,EAAOlO,EAAEC,OAAOH,QACjCqF,SAAO,IAET,cAAChB,EAAA,EAAD,CACE9D,MAAM,cACNG,QAAQ,WACRL,KAAK,SACL8L,KAAK,QACL/M,GAAI,CAAEoQ,GAAI,EAAE1P,GAAG,EAAG/C,MAAO,OACzBiD,MAAOsG,EACPrG,SAAU,SAACC,GAAD,OAAOmO,EAAUnO,EAAEC,OAAOH,QACpCqF,SAAO,IAET,cAAChB,EAAA,EAAD,CACE9D,MAAM,QACN4L,KAAK,QACLzL,QAAQ,WACR2E,SAAO,EACPD,WAAS,EACThG,GAAI,CAACU,GAAG,GACRE,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAOoO,EAASpO,EAAEC,OAAOH,UAErC,cAACqE,EAAA,EAAD,CACEgL,UAAQ,EACR9O,MAAM,QACN4L,KAAK,QACLzL,QAAQ,WACR0E,WAAS,EACThG,GAAI,CAACU,GAAG,GACRuF,SAAO,EACPrF,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOnC,EAASmC,EAAEC,OAAOH,UAErC,cAACqE,EAAA,EAAD,CACE9D,MAAM,YACNF,KAAK,SACLK,QAAQ,WACRyL,KAAK,QACL/M,GAAI,CAAEU,GAAI,EAAEyP,GAAG,EAAGxS,MAAO,OACzBsI,SAAO,EACPrF,MAAOiG,EACPhG,SAAU,SAACC,GAAD,OAAOsO,EAAUtO,EAAEC,OAAOH,UAEtC,eAACyP,GAAA,EAAD,CAAarQ,GAAI,CAAEU,GAAI,EAAE0P,GAAG,EAAGzS,MAAO,OAASoP,KAAK,QAAQ9G,SAAO,EAAC3E,QAAQ,WAA5E,UACE,cAACyO,GAAA,EAAD,2BACA,eAACO,GAAA,EAAD,CACE1P,MAAOkG,EACPjG,SAAU,SAACC,GAAD,OAAOuO,EAAWvO,EAAEC,OAAOH,QACrCO,MAAM,MAHR,UAKE,cAACoP,GAAA,EAAD,CAAU3P,MAAM,SAAhB,oBACA,cAAC2P,GAAA,EAAD,CAAU3P,MAAM,QAAhB,yBAGJ,eAACyP,GAAA,EAAD,CAAarQ,GAAI,CAACU,GAAG,GAAIsF,WAAS,EAAC1E,QAAQ,WAAWyL,KAAK,QAAS9G,SAAO,EAACgK,UAAQ,EAApF,UACE,cAACF,GAAA,EAAD,uBACA,cAACY,GAAA,EAAD,CAEE1P,KAAMlC,GAAOD,aAAe,OAAS,WACrC8B,MAAO7B,GAAOF,SACdgC,UAnOU5C,EAmOa,WAnOJ,SAACiD,GAC5BlC,GAAU,2BAAKD,IAAN,kBAAed,EAAOiD,EAAMH,OAAOH,WAmOpCgQ,aACE,cAACpL,EAAA,EAAD,CAAgBjI,SAAS,MAAzB,SACE,cAAC2C,EAAA,EAAD,CACEE,aAAW,6BACXC,QApOc,WAC5BrB,GAAU,2BACHD,IADE,IAELD,cAAeC,GAAOD,iBAkOZ+R,YAAaH,GACbI,KAAK,MAJP,SAMG/R,GAAOD,aAAe,cAAC,KAAD,CAAeqB,MAAM,SAAY,cAAC,KAAD,CAAaA,MAAM,kBAMvF,eAACkQ,GAAA,EAAD,CAAarQ,GAAI,CAACU,GAAG,GAAIsF,WAAS,EAAC1E,QAAQ,WAAWyL,KAAK,QAAQ9G,SAAO,EAA1E,UACE,cAAC8J,GAAA,EAAD,+BACA,cAACY,GAAA,EAAD,CACE1P,KAAMoB,GAAWD,eAAiB,OAAS,WAC3CxB,MAAOyB,GAAWF,WAClBtB,SAxOqB,SAAC5C,GAAD,OAAU,SAACiD,GACtCoB,GAAc,2BAAKD,IAAN,kBAAmBpE,EAAOiD,EAAMH,OAAOH,UAuOpC8B,CAAuB,cACjCkO,aACE,cAACpL,EAAA,EAAD,CAAgBjI,SAAS,MAAzB,SACE,cAAC2C,EAAA,EAAD,CACEE,aAAW,6BACXC,QAzOkB,WAC9BiC,GAAc,2BACPD,IADM,IAETD,gBAAiBC,GAAWD,mBAuOpByO,YAAaH,GACbI,KAAK,MACL3Q,MAAM,OALR,SAOGkC,GAAWD,eAAiB,cAAC,KAAD,CAAejC,MAAM,SAAY,cAAC,KAAD,CAAYA,MAAM,aAItFgB,MAAM,gBAGV,cAAC8D,EAAA,EAAD,CACI9D,MAAM,YACNF,KAAK,SACLK,QAAQ,WACRtB,GAAI,CAAEU,GAAI,EAAEyP,GAAG,EAAGxS,MAAO,OACzBoP,KAAK,QACL9G,SAAO,EACPrF,MAAO6M,EACP5M,SAAU,SAACC,GAAD,OAAOqO,EAAUrO,EAAEC,OAAOH,UAEtC,cAACqE,EAAA,EAAD,CACE9D,MAAM,UACNF,KAAK,SAELK,QAAQ,WACRtB,GAAI,CAAEU,GAAI,EAAE0P,GAAG,EAAGzS,MAAO,OACzBoP,KAAK,QACL9G,SAAO,EACPrF,MAAO8M,EACP7M,SAAU,SAACC,GAAD,OAAOwO,GAAQxO,EAAEC,OAAOH,UAEpC,cAACgM,EAAA,EAAD,CAAmBC,QAAS,cAAC2D,GAAA,EAAD,CAAWhB,QAASzI,GAAQ2B,QAAS7H,SAAU0O,GAAWtI,KAAK,UAAU8F,KAAK,UAAW5L,MAAM,YAC3H,cAACyL,EAAA,EAAD,CAAkBC,QAAS,cAAC2D,GAAA,EAAD,CAAUhB,QAASzI,GAAQ4B,OAAQ9H,SAAU0O,GAAWtI,KAAK,SAAS8F,KAAK,UAAW5L,MAAM,WACvH,cAACyL,EAAA,EAAD,CAAkBC,QAAS,cAAC2D,GAAA,EAAD,CAAUhB,QAASzI,GAAQ6B,KAAM/H,SAAU0O,GAAWtI,KAAK,OAAO8F,KAAK,UAAW5L,MAAM,SAEnH,cAACC,EAAA,EAAD,CAAQf,QAASkC,GAAQjB,QAAQ,YAAYtB,GAAI,CAACU,GAAG,EAAG/C,MAAO,OAA/D,wB,gCC1UG,SAASoT,GAAQnN,GAC5B,IAAMoN,EAAUtH,aAAY,SAAAC,GAAK,OAAIA,EAAMlK,QACpCyF,EAAMtB,EAAMiC,MAAMoL,OAAlB/L,GACD3G,EAAUC,cAHmB,EAIbH,qBAAWC,GAAzB4S,EAJ2B,EAI3BA,IAAKC,EAJsB,EAItBA,KAJsB,EAKH1S,mBAAS,CACrCwI,KAAM,GACN2E,KAAM,KAPyB,mBAK5BwF,EAL4B,KAKlBC,EALkB,KAWnChN,qBAAU,WAMN,QALwBiG,IAApBgH,UAAUC,OACuB,UAA7BC,OAAOC,SAASC,UAClBF,OAAOC,SAASE,QAAQH,OAAOC,SAASG,KAAKD,QAAQ,SAAU,WAG/C,KAAnBT,EAAIvM,WASP,OALI0M,EAAYL,GAKV,WACFK,EAAY,CACRpK,KAAK,GACLD,IAAI,MAXRzI,EAAQW,KAAK,gBAelB,IAEH,IAYM2S,EAAiB,SAACC,GAOpB,MAHY,kEACA,qCACZC,SAASN,SALQ,UAKWO,UAAUd,GADtCe,6GAEO,GAILV,EAAK,uCAAG,gCAAAtS,EAAA,6DAEN6S,EAFM,6CAEuCI,mBAAmBhB,IAF1D,SAIOpG,MAAMgH,GAAK3I,MAAK,SAAAgJ,GAAC,OAAIA,EAAEC,UAJ9B,UAINA,EAJM,OAMAC,EAAO,IAAIC,KAAK,CAACF,GAAV,UAAoBhB,EAAQ,KAAUA,EAAQ,KAAW,UAAzD,QAA0E,CAACnQ,KAAMmR,EAAKnR,QAChGqQ,UAAUC,MAPP,iCAQID,UAAUC,MAAM,CACtBgB,MAAO,QACPC,KAAM,aACNV,IAAKN,OAAOC,SAASG,KACrBa,MAAO,CAACJ,KAEPlJ,MAAK,kBAAM1B,QAAQC,IAAI,uBACvBoE,OAAM,SAAC4G,GAAD,OAAWjL,QAAQC,IAAI,mBAAoBgL,MAfhD,+BAiBFlB,OAAOmB,MAAP,0CAjBE,4CAAH,qDAoBHC,EAAM1V,YAAO,MAAPA,CAAc,CACxByS,QAAQ,QACRhS,MAAO,MACP0H,SAAU,QACVpF,OAAQ,QAEZ,OACI,sBAAKO,UAAU,UAAf,UACI,eAACqC,EAAA,EAAD,CACIC,WAAS,EACTE,eAAe,SACfC,WAAW,SACXF,UAAU,SAJd,UAMI,cAAC6P,EAAD,CAAKvP,IAAI,aAAaE,IAAI,aAAavD,GAAI,CAACU,GAAG,UAG/C,mBAAGF,UAAU,WAAb,SAEK4Q,EAASnK,OAEd,oBAAGzG,UAAU,WAAb,UAAwB,8BAAK,uCAAoB0E,KACjD,cAAC,KAAD,CAAQ2N,OAAO,kBAAf,SACazB,EAASxF,UAI1B,eAAC/I,EAAA,EAAD,CACIC,WAAS,EACTE,eAAe,gBACfC,WAAW,SACXF,UAAU,MACV/C,GAAI,CAAEpC,QAAS,aALnB,UAOI,cAACsC,EAAA,EAAD,CAAYE,aAAW,OAAOC,QA7ExB,WACd9B,EAAQW,KAAK,eA4EL,SACI,mBAAIsB,UAAU,kBAElB,cAACN,EAAA,EAAD,CAAYE,aAAW,QAAQC,QAASkR,EAAxC,SACI,mBAAG/Q,UAAU,uBAEjB,cAACN,EAAA,EAAD,CAAYE,aAAW,QAAQC,QA3E7B,WACT,IAAIyR,EAAG,6CAA0CI,mBAAmBhB,IACrEW,EAAeC,IAyEP,SACI,mBAAGtR,UAAU,sBAKrB,cAACY,EAAA,EAAD,CAAQf,QAAS,WACV8Q,EACC5S,EAAQW,KAAK,aAEbX,EAAQW,KAAR,WAAiBkS,EAAQ,KAAW,UAAY,YACjDpR,GAAI,CAACW,GAAI,GAAIW,QAAQ,YAL5B,2B,wICpGNwR,I,OAAalU,IAAMmU,YAAW,SAAoBnP,EAAOoP,GACzD,OAAO,cAAC,KAAD,aAAOjQ,UAAU,KAAKiQ,IAAKA,GAASpP,QAG3CqP,GAAO/V,YAAOgW,KAAPhW,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrCG,SAAS,WACbC,gBAAgB,YAChBI,QAASR,EAAME,QAAQ,GACvBkG,UAAW,OACXrD,MAAO/C,EAAM+V,QAAQX,KAAKY,cAItBR,GAAM1V,YAAO,MAAPA,CAAc,CACpByS,QAAQ,QACRhS,MAAM,OACN0V,OAAO,SAGE,SAASC,KAEtB,IAAMrR,EAAWC,cACT3D,EAAUC,cAHgB,EAIAC,mBAAS,IAJT,mBAIzB8U,EAJyB,KAIfC,EAJe,OAKyBnV,qBAAWC,GAA5DmV,EALwB,EAKxBA,YAAarV,EALW,EAKXA,eAAgB8J,EALL,EAKKA,QAASD,EALd,EAKcA,OALd,EAMAxJ,mBAAS,IANT,mBAMzB0J,EANyB,KAMfuL,EANe,OAQMjV,mBAAS,GARf,mBAQzBkV,EARyB,KAQZC,EARY,OASIhV,IAAMH,UAAS,GATnB,mBASzBoV,EATyB,KASbC,EATa,KAYhCzP,qBAAU,WA6CR,OA5CmB,uCAAG,8BAAApF,EAAA,yDAEF,QADVnC,EAAQ+C,aAAamJ,QAAQ,eADjB,uDAMQ1J,IAAM2J,IAAI,UAAW,CACzCrB,QAAS,CAAE,eAAgB9K,KAPf,OAMRoM,EANQ,OASd9K,EAAe,CACbtB,QACA4B,MAAOwK,EAAQzJ,KAAKf,MACpBkB,WAAW,KAEbN,IAAM2J,IAAI,gBAAkBC,EAAQzJ,KAAKf,OAAOyK,KAAhD,uCAAqD,WAAO9C,GAAP,SAAApH,EAAA,sDACjDyU,EAAYrN,EAAS5G,MACjB4G,EAAS5G,KAAKwH,MAChB6M,GAAc,GAHiC,2CAArD,uDAMIxU,IAAM2J,IAAI,cAAgBC,EAAQzJ,KAAKyF,IAAIiE,KAA3C,uCACE,WAAO9C,GAAP,uBAAApH,EAAA,sDAOI,IANMwM,EAAc,IAAIhF,KAClBiF,EAAgBD,EAAYsI,mBAAmB,QAAS,CAC5DC,QAAQ,IAGNL,EAAc,EACT3J,EAAI,EAAGA,EAAI3D,EAAS5G,KAAKmF,OAAQoF,IAChCiK,EAAiB,IAAIxN,KAAKJ,EAAS5G,KAAKuK,GAAG4B,MAC5CmI,mBAAmB,QAAS,CAC3BC,QAAQ,IAEVtI,IAAkBuI,IAClBN,GAAetN,EAAS5G,KAAKuK,GAAGlG,QAGxC8P,EAAeD,GACfH,EAAYnN,EAAS5G,MAjBzB,2CADF,uDApBU,4CAAH,oDA2CnB6J,GACO,WACLsK,EAAe,GACfJ,EAAY,IACZE,EAAY,OAGjB,IAOC,IAtEgC,EA6EE9U,IAAMH,SAAS,MA7EjB,mBA6EvByV,EA7EuB,KA6EbC,EA7Ea,KA8ExBxG,EAAOyG,QAAQF,GAIfrG,EAAc,WAClBsG,EAAY,OAnFgB,EAuGG1V,oBAAS,GAvGZ,mBAuGrB4V,EAvGqB,KAuGXC,EAvGW,KA6GtB1P,EAAS2O,EAAS3O,OA0B9B,OACI,eAAC/B,EAAA,EAAD,CACA7C,GAAI,CACEC,OAAQ,QACRE,MAAM,SAEZ2C,WAAS,EACTC,UAAU,SACVC,eAAe,aAPf,UASA,eAACH,EAAA,EAAD,CAAMO,MAAI,EAAC5C,UAAU,SAASsC,WAAS,EAACxF,QAAS,EAAGiX,SAAS,MAAMvR,eAAe,gBAAgBhD,GAAI,CAACxC,gBAAgB,UAAW6D,EAAE,GAApI,UACE,cAACwB,EAAA,EAAD,CAAMO,MAAI,EAACoR,GAAI,EACrBxR,eAAe,gBAAgBF,WAAS,EADlC,SAEI,cAAC,GAAD,CAAKO,IAAKC,EAASC,IAAI,OAAOvD,GAAI,CAACU,GAAG,YAE1C,eAACmC,EAAA,EAAD,CAAMO,MAAI,EAACoR,GAAI,EAAf,UACI,cAAC3R,EAAA,EAAD,UACCsF,EAAQ,KAAWA,EAAQ,KAAW,cAAC/G,EAAA,EAAD,CAAQE,QAAQ,SAASjB,QAlF1C,WAC5ByT,GAAc,IAiF+B,gCAKvC,cAACjR,EAAA,EAAD,UACGsF,EAAQ,IAAR,eAA0BA,EAAQ,KAAY,qBAGrD,eAACtF,EAAA,EAAD,CAAMO,MAAI,EAACoR,GAAI,EAAGxR,eAAe,WAAWF,WAAS,EAArD,UACI,cAAC5C,EAAA,EAAD,CACMgF,GAAG,eACHuP,gBAAe9G,EAAO,kBAAerD,EACrCoK,gBAAc,OACdC,gBAAehH,EAAO,YAASrD,EAC/BjK,QAxFQ,SAACa,GACnBiT,EAAYjT,EAAM0T,gBAwFR5U,GAAI,CAACG,MAAM,SANjB,SAQM,cAAC,KAAD,CAAcH,GAAI,CAACG,MAAM,aAE/B,eAAC0U,GAAA,EAAD,CACM3P,GAAG,aACHgP,SAAUA,EACVvG,KAAMA,EACNI,QAASF,EACTiH,cAAe,CACf,kBAAmB,gBANzB,UASM,cAACvE,GAAA,EAAD,CAAUlQ,QAASwN,EAAnB,qBACA,cAAC0C,GAAA,EAAD,CAAUlQ,QA3FP,WACbjC,EAAe,CACbtB,WAAOwN,EACP5L,WAAO4L,EACP1K,WAAW,KAEbC,aAAa8K,WAAW,cACxB9K,aAAa8K,WAAW,cACxBpM,EAAQW,KAAK,MAmFH,0BAGV,cAAC2D,EAAA,EAAD,CAAMO,MAAI,EAACoR,GAAI,GAAf,SACI,eAACvB,GAAD,WACM,yCACA,uBAAMtQ,MAAO,CAACpF,SAAS,WAAWgD,MAAM,QAAxC,mBAAyD,+BAAOoT,EAAYjP,QAAQ,gBAKhG,cAAC7B,EAAA,EAAD,CAAMO,MAAI,EAAC5C,UAAU,OAArB,SACA,cAAC0S,GAAA,EAAD,CAAOlT,GAAI,CAAE+U,SAAU,SAAUpX,MAAM,QAAvC,SACA,cAACqX,GAAA,EAAD,CAAgBhV,GAAI,CAAEiV,UAAW,uBAAjC,SACE,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC/U,aAAW,eAA/B,UACE,cAACgV,GAAA,EAAD,UACA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qCACA,cAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAACnU,EAAA,EAAD,CAASE,QAAQ,OACXnB,MAAM,OAAOE,QAlGT,WACZiU,GAAW,SAAA9P,GACP,OAAQA,MAgG2BxE,GAAI,CAAC0F,SAAS,OAAQrE,EAAE,GAD7D,8BAKJ,cAACmU,GAAA,EAAD,UACCjC,EAASjM,KAAI,SAACoF,EAAK5H,GAAN,OACZ,eAACuQ,GAAA,EAAD,CAEEhV,QAAS,kBAnGAyD,EAmGU4I,EAAI5I,OAnGNoB,EAmGcwH,EAAI9M,WAnGdwI,EAmG0BsE,EAAItE,QAnGrBnB,EAmG8ByF,EAAIzF,KAnG5B2E,EAmGkCc,EAAId,KAlG9E1D,GAAQ,GAKVD,EAAOG,GAELhK,EAAe,2BACVqV,GADS,IAEZ7T,WAAYsF,KAEXA,GACCrF,aAAaC,QAAQ,aAAcoF,GAMzCjD,EAAS8C,EAJE,CACPkC,KAAMA,EACN2E,KAAMA,UAGRrN,EAAQW,KAAK,CACX2M,SAAU,YAAc/H,IArBd,IAACA,EAAQoB,EAAIkD,EAASnB,EAAM2E,GAoGpC6J,OAAK,EACLzV,GAAI,CAAE,mCAAoC,CAAEvC,OAAQ,GAAK4D,EAAE,GAJ7D,UAME,eAACiU,GAAA,EAAD,CAAW5F,UAAU,KAAKgG,MAAM,MAAM1V,GAAI,CAACqB,EAAE,GAA7C,UACE,iCAASqL,EAAG,OACZ,oBAAGlM,UAAU,OAAb,UACGkM,EAAG,KADN,aAEE,cAAC,KAAD,CAAQmG,OAAO,kBAAf,SACGnG,EAAG,aAIV,eAAC4I,GAAA,EAAD,CAAWC,MAAM,QAAjB,uBAAyC7I,EAAI5I,YAdxCgB,MAiBN6Q,UAAUrR,MAAM,GAAgB,IAAZ+P,EAAmBzP,EAAS,cAQvD,cAAC/B,EAAA,EAAD,CAAMO,MAAI,EAAC5C,UAAU,SAASR,GAAI,CAACzC,SAAS,QAASqY,OAAO,MAAMjY,MAAM,QAAxE,SACY,cAACyD,EAAA,EAAD,CACEE,QAAQ,YACRjB,QAvJK,WACjBR,aAAa8K,WAAW,cACxBpM,EAAQW,KAAK,cAsJDiB,MAAM,OACNH,GAAI,CAACgB,aAAa,OAAQrD,MAAM,OAJlC,oBAUZ,eAACmQ,GAAA,EAAD,CACEH,MAAMxF,EAAQ,MAAkB0L,EAChCgC,oBAAqB/C,GACrBgD,aAAW,EACX/H,QAhLsB,WACxB+F,GAAc,IAgLZ9N,WAAS,EACTgI,mBAAiB,iCANnB,UAQE,cAACC,GAAA,EAAD,CAAajO,GAAI,CAACgF,GAAG,QAAS7E,MAAM,UAApC,SAAgD,4BAChD,cAAC+N,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBnO,GAAI,CAAC0F,SAAS,OAAQR,GAAG,iCAA5C,sLAIF,cAACkJ,GAAA,EAAD,CAAepO,GAAI,CAACgF,GAAG,QAAvB,SACE,cAAC5D,EAAA,EAAD,CAAQpB,GAAI,CAACqB,EAAE,EAAGqE,SAAS,OAAUqQ,UAAW,cAAC,KAAD,CAAc5V,MAAM,QAAQH,GAAI,CAAC0F,SAAS,QAASA,SAAS,UAAYvF,MAAM,UAAUmB,QAAQ,YAAYjB,QAAS,WAAKmR,OAAO7D,KAAK,+HAAtL,4C,4ECpRJ1Q,I,OAAiBC,YAAOC,IAAPD,EAAkB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,YAAa,CACTC,UAAWD,EAAME,QAAQ,IAE7B,wBAAyB,CACrBC,SAAU,WACVC,gBAAiB,QACjBkI,SAAU,GACV/H,MAAO,OACPC,QAAS,YACTC,WAAYT,EAAMU,YAAYC,OAAO,CACjC,eACA,mBACA,aACA,iBAEJ,UAAW,CACPiY,YAAa,UACbC,YAAa,aAKV,SAASC,KAEpB,IAAM3X,EAAUC,cAFe,EAGSH,qBAAWC,GAA3CmV,EAHuB,EAGvBA,YAAarV,EAHU,EAGVA,eACbF,EAAaC,sBAAbD,SAJuB,EAKWO,mBAAS,IALpB,mBAKxB0X,EALwB,KAKTC,EALS,OAMO3X,mBAAS,IANhB,mBAMxB4X,EANwB,KAMXC,EANW,OAOS7X,mBAAS,CAC7C0J,SAAU,GACVlB,KAAM,GACND,IAAK,GACLjE,UAAW,GACXgE,QAAS,KAZkB,mBAOxBwP,EAPwB,KAOVC,EAPU,OAcD/X,mBAAS,CACnCiK,SAAS,EACTC,QAAQ,EACRC,MAAM,IAjBqB,mBAcxB7B,EAdwB,KAcf8B,EAde,KAqB/BxE,qBAAU,WA+BV,OA9BuB,uCAAG,8BAAApF,EAAA,yDAClBY,aAAa8K,WAAW,cACpB7N,EAAQ+C,aAAamJ,QAAQ,cAFf,uBAIhBzK,EAAQW,KAAK,KAJG,0CAOMI,IAAM2J,IAAI,UAAW,CACzCrB,QAAS,CAAE,eAAgB9K,KARb,OAOVoM,EAPU,OAUhB9K,EAAe,CACbtB,QACA4B,MAAOwK,EAAQzJ,KAAKf,MACpBkB,WAAW,KAGfN,IAAM2J,IAAI,gBAAkBC,EAAQzJ,KAAKf,OAAOyK,KAAhD,uCAAqD,WAAO9C,GAAP,SAAApH,EAAA,sDACjDuX,EAAgB,2BACTD,GADQ,IAEX,SAAYlQ,EAAS5G,KAAK4J,OAE9BR,EAAW,2BAAI9B,GAAL,IAAc,QAAYV,EAAS5G,KAAKsH,QAAQ,GAAI,OAAWV,EAAS5G,KAAKsH,QAAQ,GAAI,KAASV,EAAS5G,KAAKsH,QAAQ,MALjF,2CAArD,uDAOAzH,IAAM2J,IAAI,kBAAoBC,EAAQzJ,KAAKyF,IAAIiE,KAA/C,uCAAoD,WAAOC,GAAP,SAAAnK,EAAA,sDAChDqX,EAAelN,EAAI3J,MACnB2W,EAAiBhN,EAAI3J,MAF2B,2CAApD,uDAvBkB,4CAAH,oDA4BvB6J,GAEM,WACFkN,EAAgB,IAChBF,EAAe,IACfzN,EAAW,OAEb,IAKF,IAAM4N,EAAY,uCAAG,4BAAAxX,EAAA,yDACZsX,EAAY,KADA,uBAEbrY,EAAS,oBAAqB,CAC1BiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eANF,6BAUZ6L,EAAY,IAVA,uBAWbrY,EAAS,0BAA2B,CAChCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAfF,6BAmBZ6L,EAAY,UAnBA,uBAoBbrY,EAAS,yBAA0B,CAC/BiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAxBF,2CA6BIpL,IAAMC,KAAK,oBAAqBgX,GA7BpC,QAgCU,OAHrB3Q,EA7BW,QAgCNnG,KAAKC,QAEZ8W,EAAgB,2BACTD,GADQ,IAEX,IAAO,GACP,KAAQ,GACR,UAAa,MAIjBjX,IAAM2J,IAAI,kBAAoBsN,EAAY,UAAcpN,KAAxD,uCACI,WAAO9C,GAAP,eAAApH,EAAA,sDACQuM,EAAMnF,EAAS5G,KAAKyK,MACxBwM,EAAelL,EAAG,IAFtB,2CADJ,wDAQAtN,EAAS0H,EAAOnG,KAAKE,IAAK,CACtBR,WAAY,QACZC,aAAa,IApDJ,4CAAH,qDA2DZsX,EAAiB,SAACxR,GAOpB5F,IAAM2J,IAAI,kBAAoB/D,GAAIiE,KAAlC,uCAAuC,WAAO9C,GAAP,SAAApH,EAAA,sDAClC8H,EAAQ4B,QAAW5B,EAAQ6B,MAAqC,QAA7BvC,EAAS5G,KAAK,GAAGsH,SAiBrD3I,EAAe,2BACRqV,GADO,IAEV7T,WAAYsF,KAGdrF,aAAaC,QAAQ,aAAcoF,GACrC3G,EAAQW,KAAK,cAtBbhB,EAAS,mDAAoD,CACzDiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfiM,GAAQ,GACRC,EAAO,IACPN,EAAeH,IAVoB,2CAAvC,wDAhI2B,EAkKT1X,mBAAS,IAlKA,mBAkKxBuI,EAlKwB,KAkKnB4P,EAlKmB,OAmKPnY,oBAAS,GAnKF,mBAmKxBoY,EAnKwB,KAmKlBF,EAnKkB,OAqTPlY,mBAAS,IArTF,mBAqTzB+T,EArTyB,KAqTnBsE,EArTmB,KAsTzBC,EAAe,SAAC7R,GAAD,OAAQ,WAE7B5F,IAAMgP,OAAO,qBAAuBpJ,GAAIiE,MAAK,SAACC,GACrB,YAAjBA,EAAI3J,KAAKE,IACTzB,EAAS,uBAAwB,CAC7BiB,WAAY,UACZC,aAAa,IAGjBlB,EAAS,8BAA+B,CACpCiB,WAAY,QACZC,aAAa,SAjUM,GAuUTR,IAAMH,UAAS,GAvUN,qBAuU1BkP,GAvU0B,MAuUpBC,GAvUoB,SAwUGnP,mBAAS,CACzCyG,GAAG,GACH+B,KAAM,GACNlE,UAAY,KA3UiB,qBAwU1BiU,GAxU0B,MAwUdC,GAxUc,MA6U3BC,GAAa,SAAChS,EAAI+B,EAAMlE,GAAX,OAAyB,WAC1CkU,GAAc,CACV/R,GAAIA,EACJ+B,KAAQA,EACRlE,UAAYA,IAEhB6K,IAAQ,KAGJC,GAAc,WAClBD,IAAQ,IAEJuJ,GAAY,uCAAG,8BAAAlY,EAAA,sEACEK,IAAMmQ,IACvB,oBACA,CAACvK,GAAI8R,GAAW9R,GAAI+B,KAAM+P,GAAW/P,KAAMlE,UAAWiU,GAAWjU,YAHlD,OAKE,OAJf6C,EADa,QAKTlG,QACA0X,EAAWf,EAAY/O,KAAI,SAAAlE,GAC7B,OAAI4T,GAAW9R,KAAO9B,EAAK8B,GAClB,2BAAK9B,GAAZ,IAAkB6D,KAAM+P,GAAW/P,KAAMlE,UAAYiU,GAAWjU,YAE3DK,KAETkT,EAAec,GACjBvJ,MAGA3P,EAAS0H,EAAOnG,KAAKE,IAAK,CACtBR,WAAY,QACZC,aAAa,IAlBF,2CAAH,qDAuChB,OACQ,eAACW,EAAA,EAAD,CAAKC,GAAI,CAAEC,OAAO,QAASzC,gBAAgB,WAA3C,UACI,cAAC0C,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QApOzC,WACb9B,EAAQW,KAAK,eAmO4Dc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACI,cAAC,IAAD,MAEJ,mBAAGoC,MAAO,CAAE0U,cAAe,MAAOrH,WAAW,MAAMsH,cAAc,OAAQ5R,SAAU,OAAQvF,MAAQ,UAAWoX,WAAW,QAAzH,uBAEI,eAACrE,GAAA,EAAD,CACIlT,GAAI,CACAkD,GAAG,EACH8B,GAAG,EACHkL,GAAG,EACHP,QAAS,OACT1M,WAAY,SACZjC,aAAc,OACdwW,UAAW,QACX/Z,OAAQ,qBAThB,UAYI,cAACN,EAAA,EAAD,CACI6C,GAAI,CAAEoQ,GAAI,EAAGqH,KAAM,GACnBhX,YAAY,6BACZsF,WAAY,CAAE,aAAc,sBAC5BlF,SAAU,SAACC,GAAD,OAlPnB,SAACA,GAIZ,GAHAA,EAAE6E,iBACFiR,EAAO9V,EAAEC,OAAOH,OAEZE,EAAEC,OAAOH,MAAO,CAGhB,IAFA,IAAM8W,EAAY5W,EAAEC,OAAOH,MAAM+D,WAAWgT,cACxCC,EAAe,GACV5N,EAAI,EAAGA,EAAIqM,EAAYzR,OAAQoF,KAEhCqM,EAAYrM,GAAZ,KACKrF,WACAgT,cACA9S,SAAS6S,IACdrB,EAAYrM,GAAZ,IACKrF,WACAgT,cACA9S,SAAS6S,KAEdE,EAAa1Y,KAAKmX,EAAYrM,IAGtCsM,EAAesB,QAEfjB,GAAQ,GAMRL,EAAeH,GACfK,EAAgB,2BACTD,GADQ,IAEX,IAAO,GACP,KAAQ,GACR,UAAa,MAgNgBsB,CAAO/W,IACxBF,MAAOoG,IAEX,cAAC9G,EAAA,EAAD,CAAYG,QA/MP,WAWrB,GAVAyW,EAAQ,IACRN,EAAgB,2BACTD,GADQ,IAEX,IAAOvP,EACP,KAAQ,GACR,UAAa,GACbD,QAAS,MAEb4P,GAAQ,GAEU,IAAf3P,EAAIpC,OAAa,CAChB,IAAIkN,EAAM,wCAA0C9K,EAAIrC,WAAY,uCACpEmG,MAAMgH,GACD3I,MAAK,SAACC,GAAQ,OAAOA,EAAI2B,UACzB5B,MAAK,SAAC1J,GACmB,OAAnBA,EAAKqY,UACRtB,EAAgB,2BACTD,GADQ,IAEX,IAAO9W,EAAK+I,IACZ,KAAQ/I,EAAKsY,OACb,UAAY,GACZhR,QAAS,UAGb7I,EAAS,0BAA2B,CAChCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfoM,EAAQ,0HAIXhL,OAAM,SAACC,GAAQtE,QAAQC,IAAIqE,WAIhC,GAAkB,KAAf/E,EAAIpC,OAAe,CAElB,IAAIkN,EAAM,wCAA0C9K,EAAIrC,WAAY,uCACpEmG,MAAMgH,GACD3I,MAAK,SAACC,GAAQ,OAAOA,EAAI2B,UACzB5B,MAAK,SAAC1J,GACmB,OAAnBA,EAAKqY,UACJtB,EAAgB,2BACTD,GADQ,IAEX,IAAO9W,EAAK+N,IACZ,KAAQ/N,EAAKuY,aACb,UAAavY,EAAKwY,UAAUC,OAC5BnR,QAAS,UAIb7I,EAAS,0BAA2B,CAChCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfoM,EAAQ,kIAIfhL,OAAM,SAACC,GAAQtE,QAAQC,IAAIqE,WAGhC7N,EAAS,wBAAyB,CAC9BiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfoM,EAAQ,mHAqIyC9W,GAAI,CAAEqB,EAAG,QAAUjB,aAAW,SAAvE,SACI,cAAC,KAAD,CAAaD,MAAM,kBAIzB0W,GAAO,cAAC3D,GAAA,EAAD,CAAOlT,GAAI,CAAE+U,SAAU,SAAWpX,MAAM,OAAOH,gBAAgB,UAAUmD,GAAG,IAAK6W,UAAU,mBAA3F,SACL,cAACxC,GAAA,EAAD,CAAgBhV,GAAI,CAACgF,GAAG,OAAOrH,MAAM,MAAMwa,MAAM,IAAKlD,UAAW,uBAAjE,SACI,cAACC,GAAA,EAAD,CAAO9U,aAAW,eAAlB,SACA,cAACoV,GAAA,EAAD,UACA,cAAC,iBAAD,CAAexV,GAAI,CAACqB,EAAE,EAAG8D,EAAE,GAAIlE,KAAMmX,QAASC,IAA9C,SACChC,EAAY/O,KAAI,SAACoF,EAAK5H,GAAN,OACb,cAAC,qBAAD,CAGAwT,iBAzDJpT,EAyDqCwH,EAAIxH,GAzDrC+B,EAyDyCyF,EAAIzF,KAzDvClE,EAyD6C2J,EAAI3J,UAxDnF,eAAC,mBAAD,CAAiB/C,GAAI,CAAC+U,SAAS,UAA/B,UACE,cAAC,eAAD,CAAc/U,GAAI,CAACrC,MAAM,QAAS0C,QAAS6W,GAAWhS,EAAI+B,EAAMlE,GAAhE,SAEM,cAAC3B,EAAA,EAAD,CAAQE,QAAQ,OAAO2L,QAAS,cAAC,KAAD,CAAWF,KAAK,cAItD,cAAC,eAAD,CAAawL,aAAa,EAAMlY,QAAS0W,EAAa7R,GAAtD,SAEA,cAAC9D,EAAA,EAAD,CAAQE,QAAQ,OAAQyU,UAAW,cAAC,KAAD,CAAYhJ,KAAK,kBA4C1B,SAKA,eAACuI,GAAA,EAAD,CACAjV,QAAS,kBAAMqW,EAAehK,EAAIxH,KACjCwQ,MAAM,MAAM1V,GAAI,CAACqB,EAAE,EAAE+D,GAAG,EAAE8K,GAAG,EAAGvS,MAAM,OAAQ6a,WAAW,kBAF1D,UAGI,iCAAS9L,EAAIzF,OACb,4BACCyF,EAAI1F,QAJmClC,IALvCA,GAvDV,IAACI,EAAI+B,EAAMlE,eA0EjB8T,GAAS,gCACN,mBAAGlU,MAAO,CAACxC,MAAM,UAAWuF,SAAS,OAAQrI,UAAU,OAAQO,QAAS,YAAxE,SAAuF4U,IACvF,cAAC3P,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,SACI,cAAC,GAAD,CACItC,YAAY,aACZwG,KAAK,cACLjH,GAAI,CAAErC,MAAO,MAAMqH,GAAI,QACvBpE,MAAO2V,EAAY,KACnB1V,SAAU,SAACC,GACP0V,EAAgB,2BACTD,GADQ,IAEX,KAAQzV,EAAEC,OAAOH,UAGzB6X,SAAmB,KAATjG,MAGlB,cAAC3P,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS/C,GAAI,CAACW,GAAG,GAA3C,SACI,cAAC,GAAD,CACIF,YAAY,kBACZwG,KAAK,cACLjH,GAAI,CAAErC,MAAO,MAAOqH,GAAI,QACxBpE,MAAO2V,EAAY,UACnB1V,SAAU,SAACC,GACP0V,EAAgB,2BACTD,GADQ,IAEX,UAAazV,EAAEC,OAAOH,cAKtC,cAACQ,EAAA,EAAD,CACIE,QAAQ,YACRtB,GAAI,CAAE3C,UAAW,QACjBgD,QAASoW,EACTjW,UAAU,aAJd,uBASJ,cAACqC,EAAA,EAAD,CAAMO,MAAI,EAAC5C,UAAU,SAASR,GAAI,CAACzC,SAAS,QAASqY,OAAO,MAAMjY,MAAM,QAAxE,UACEkZ,GAAQ,cAACzV,EAAA,EAAD,CAASE,QAAQ,YAC3BtB,GAAI,CAACkQ,GAAG,EAAGvS,MAAM,OACb0C,QAxMA,WAKZ0G,EAAQ4B,QAAW5B,EAAQ6B,MAgB3B/I,aAAa8K,WAAW,cACxBpM,EAAQW,KAAK,YAhBbhB,EAAS,mCAAoC,CACzCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,gBA4LG,wBAOV,eAACoD,GAAA,EAAD,CAAQH,KAAMA,GAAMI,QAASF,GAA7B,UACI,cAACI,GAAA,EAAD,4BACA,eAACC,GAAA,EAAD,WAIA,cAACjJ,EAAA,EAAD,CACI2J,WAAS,EACT3I,SAAO,EACPyS,OAAO,QACPxT,GAAG,OACH/D,MAAM,OACNF,KAAK,QACL+E,WAAS,EACT1E,QAAQ,WACRV,MAAQoW,GAAW/P,KACnBpG,SAAY,SAAAC,GAAC,OAAImW,GAAc,2BAAID,IAAL,IAAiB/P,KAAOnG,EAAEC,OAAOH,YAEnE,cAACqE,EAAA,EAAD,CACIyT,OAAO,QACPxT,GAAG,YACHe,SAAO,EACP9E,MAAM,YACNF,KAAK,OACL+E,WAAS,EACT1E,QAAQ,WACRV,MAASoW,GAAWjU,UACpBlC,SAAY,SAAAC,GAAC,OAAImW,GAAc,2BAAID,IAAL,IAAiBjU,UAAYjC,EAAEC,OAAOH,eAGxE,eAACwN,GAAA,EAAD,WACA,cAAChN,EAAA,EAAD,CAAQf,QAASwN,GAAjB,oBACA,cAACzM,EAAA,EAAD,CAAQf,QAAS8W,GAAjB,6B,OCziBT,SAASwB,KACpB,IAAM1W,EAAWC,cADY,EAEe7D,qBAAWC,GAA/CF,EAFqB,EAErBA,eAAgB6J,EAFK,EAELA,OAASC,EAFJ,EAEIA,QAFJ,EAGSzJ,mBAAS,CAC3CqF,OAAQ,GACRmD,KAAM,UACND,IAAK,GACLjE,UAAW,GACXoF,SAAU,GACVvI,WAAY,GACZqB,KAAM,GACNmH,QAAQ,KAXiB,mBAGtBhC,EAHsB,KAGTiC,EAHS,OAaCzJ,IAAMH,UAAS,GAbhB,mBAatB6J,EAbsB,KAabC,EAba,KAcrBrK,EAAaC,sBAAbD,SACFK,EAAUC,cAfa,EAkBCC,mBAAS,CACnCiK,SAAS,EACTC,QAAQ,EACRC,MAAM,IArBmB,mBAkBtB7B,EAlBsB,KAkBb8B,EAlBa,KAwB7BxE,qBAAU,YACa,uCAAG,8BAAApF,EAAA,yDACdnC,EAAQ+C,aAAamJ,QAAQ,cADf,uBAGhBzK,EAAQW,KAAK,KAHG,0CAMMI,IAAM2J,IAAI,UAAW,CACzCrB,QAAS,CAAE,eAAgB9K,KAPb,OAMVoM,EANU,OAShB9K,EAAe,CACbtB,QACA4B,MAAOwK,EAAQzJ,KAAKf,MACpBkB,WAAW,KAIbN,IAAM2J,IAAI,gBAAkBC,EAAQzJ,KAAKf,OAAOyK,KAAhD,uCACE,WAAO9C,GAAP,SAAApH,EAAA,sDACE4J,EAAW,2BAAI9B,GAAL,IAAc,QAAYV,EAAS5G,KAAKsH,QAAQ,GAAI,OAAWV,EAAS5G,KAAKsH,QAAQ,GAAI,KAASV,EAAS5G,KAAKsH,QAAQ,MAClIsB,EAAe,2BACRjC,GADO,IAEV,SAAaC,EAAS5G,KAAK4J,OAE9BhD,EAAS5G,KAAKsH,QAAQ,KAAOV,EAAS5G,KAAKsH,QAAQ,KAClDsB,EAAe,2BACRjC,GADO,IAEV,KAAS,SACT,SAAYC,EAAS5G,KAAK4J,OAG9BR,EAAW,2BAAI9B,GAAL,IAAc,QAAW,OAGnCV,EAAS5G,KAAKsH,QAAQ,IAAMV,EAAS5G,KAAKsH,QAAQ,KAClDsB,EAAe,2BACRjC,GADO,IAEV,KAAS,OACT,SAAYC,EAAS5G,KAAK4J,OAE9BR,EAAW,2BAAI9B,GAAL,IAAc,MAAS,MAtBrC,2CADF,uDAhBgB,2CAAH,qDA4CjBuC,KAEH,IAEH,IAzE6B,EA6EO7K,mBAAS,GA7EhB,mBA6EtB8K,EA7EsB,KA6EVC,EA7EU,KAoFvBC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SApFf,EAqFAnL,mBAAS,IArFT,mBAqFrBoL,EArFqB,KAqFbC,EArFa,KAuFvB3D,EAAa,GAEb4D,EAAO,WACT,IADe,IAAD,WACNC,GACH7D,EAAWjH,KAAK2K,EAAOI,QAAO,SAAC1C,GAC5B,OAAOA,EAAGzC,QAAUkF,KACrBE,QAHCF,EAAI,EAAGA,EAAET,EAAW,EAAIS,IAAK,EAA7BA,IA1FiB,GAgGLvL,mBAAS,GAhGJ,qBAgGtB0L,GAhGsB,MAgGfC,GAhGe,MA4G7B/F,qBAAU,WACNyF,GAAU,SAAAtF,GAAI,4BAAOA,GAAP,CAAaiF,SAC7B,CAACA,IACHpF,qBAAU,WACN0F,IAfW,WAEX,IADA,IAAIM,EAAM,EACFL,EAAI,EAAGA,EAAG7D,EAAWvB,OAAQoF,SACZM,IAAlBnE,EAAW6D,KAGVK,GAAOlE,EAAW6D,GAAG/F,MAAQQ,OAAO0B,EAAW6D,GAAGlG,SAG1DsG,GAASC,EAAI3F,QAAQ,IAOrB6F,KAED,CAACV,IACJxF,qBAAU,WACNgE,EAAe,2BACRjC,GADO,IAEV,OAAW+D,GAAMxF,gBAGvB,CAACwF,KA1H0B,8CA0L7B,WAAuBU,EAAQ5J,GAA/B,SAAAhC,EAAA,sEAEiB6L,MAAe,SAAT7J,EAAkB,gEAAiE,2DAA4D4J,GACjK1B,MAAK,SAAC9C,GACE,OAAOA,EAAS0E,UAGxB5B,MAAK,SAAC6B,GACA,IAAMC,EAAU,gEAA4DD,EAAME,UAAUC,iBAA5E,YAAgGH,EAAME,UAAUE,uBAAhH,YAA0IJ,EAAME,UAAUG,kBAA1J,YAA+KL,EAAME,UAAUI,mBAA/L,uBAEjBrD,EAAOgD,EAAWtG,YAClB0D,EAAe,2BACRjC,GADO,IAEVgC,QAAU6C,KAEd,IAAIM,EAAW,2BAAOnF,GAAP,IAAmB,QAAY6E,EAAWtG,aAEzDrF,IAAMC,KAAK,gBAAiBgM,GAAapC,KAAzC,uCAA8C,WAAO9C,GAAP,eAAApH,EAAA,sDACf,MAAzBoH,EAAS5G,KAAKC,SACdwI,GAAQ,GACFuD,EAAc,IAAIhF,KAMxBxE,EAAS8C,EAJA,CACLkC,KAAM,UACN2E,KAHkBH,KAMtBlN,EAAQW,KAAK,CACT2M,SAAU,YAAczF,EAAW,UAXC,2CAA9C,0DAiBL0F,OAAM,SAACC,GACJ7N,EAAS,oEAAqE,CAC9EiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,eAEfnC,GAAW,MAzCf,oFA1L6B,sBAkP7B,OAVAlE,qBAAU,WACN,OAAM,WACF+F,KACAjE,EAAW6F,KAAK,MAChBlC,EAAU,MACVN,EAAc,MAGpB,IAGE,eAACzJ,EAAA,EAAD,CAAKC,GAAI,CACLiM,SAAU,EACVtO,MAAO,OACPsC,OAAQ,OACRzC,gBAAkB,SAJtB,UAOI,cAAC0C,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QAjLrC,WACb9B,EAAQW,KAAK,cAgLwDc,GAAI,CAACzC,SAAW,WAAY+C,IAAK,OAAQC,MAAO,QAAjH,SACI,cAAC,IAAD,MAGZ,eAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS/C,GAAI,CAACW,GAAG,GAAIqC,eAAe,gBAAgBC,WAAW,SAAzF,UACI,cAACJ,EAAA,EAAD,CAAMO,MAAI,EAAV,SACI,mBAAG5C,UAAU,MAAb,uBAEJ,cAACqC,EAAA,EAAD,CAAM7C,GAAI,CAACrC,MAAO,OAAQgD,GAAG,GAAIyC,MAAI,EAArC,SACI,cAAC,KAAD,CACI8I,aAAc,EACdC,cAAe,EACfC,WAAc,WAtLtB5C,GAAc,SAAAhF,GAAI,OAAGA,EAAM,MAmLvB,SAOS,IAAI6H,MAAM9C,GAAYyC,KAAK,MAAM1E,KAAI,SAACgF,EAAGtC,GAAJ,OAClC,cAAC,KAAD,UAAsB,cAACrG,EAAD,CAAOmB,MAAOkF,KAAjBA,UAOnC,cAACnH,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXW,GAAG,GADP,SAGI,eAAC8L,EAAA,EAAD,CACIC,KAAG,EACHC,kBAAgB,qCAChB1F,KAAK,0BACLjH,GAAI,CACAoF,GAAG,GALX,UASK2B,EAAQ4B,QAAU,cAACiE,EAAA,EAAD,CAAkB3F,KAAK,OAAOrG,MAAM,SAASiM,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAY5L,MAAM,SAASN,SAAU,SAACC,GAAD,OAC9GuH,EAAe,2BACRjC,GADO,kBAETtF,EAAEC,OAAOkG,KAAOnG,EAAEC,OAAOH,YAGzCmG,EAAQ6B,MAAQ,cAACgE,EAAA,EAAD,CAAkB3F,KAAK,OAAOrG,MAAM,OAAOiM,QAAS,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAY5L,MAAM,OAAON,SAAU,SAACC,GAAD,OAChHuH,EAAe,2BACRjC,GADO,kBAERtF,EAAEC,OAAOkG,KAAOnG,EAAEC,OAAOH,iBAM3C,cAACiC,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXW,GAAG,GADP,SAGI,oBAAGH,UAAU,QAAb,qBAA8B2J,QAElC,cAACtH,EAAA,EAAD,CAAMO,MAAI,EAACpD,GAAI,CACXrC,MAAO,MACPgD,GAAG,GAFP,SAII,cAACqM,EAAA,EAAD,CACF3M,QA5LS,SAACS,GACZ,GAAKsF,EAAW,OAWhB,GADA2D,SACqBO,IAAlBnE,EAAW,GAAd,CASA,IAAI,IAAI6D,EAAI,EAAGA,EAAG7D,EAAWvB,OAAQoF,IACjC,GAA2B,IAAxB7D,EAAW6D,GAAG/F,OAAwC,MAAzBkC,EAAW6D,GAAGlG,YAEzC,CACD,GAAiC,KAA9BqC,EAAW6D,GAAG7F,YAOb,YANAjG,EAAS,2BAA4B,CACjCiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,eAIlB,GAA4B,MAAzBvE,EAAW6D,GAAGlG,OAOd,YANA5F,EAAS,sBAAuB,CAC5BiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,eAMtBtE,EAAW,MAShBmC,GAAW,GACXN,EAAO,sBACP3I,IAAM2J,IAAI,cAAe7C,EAAY+B,UAAUgB,MAAK,SAAC9C,IAnL5B,uCAsLrBuE,CAFmB1E,GAAQC,EAAYC,EAAaC,EAAS5G,MAEzC2G,EAAYnF,UAbhC/C,EAAS,qBAAsB,CAC3BiB,WAAY,OACZC,aAAa,EACbqL,mBAAoB,IACpBC,UAAW,oBArCfxM,EAAS,2BAA4B,CACjCiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,oBAffxM,EAAS,sBAAuB,CAC5BiB,WAAY,OACZsL,mBAAoB,IACpBrL,aAAa,EACbsL,UAAW,gBAuLjBuC,QAAS,cAAC,KAAD,IACT3E,QAASA,EACT4E,gBAAgB,MAChBlH,WAAS,EACT1E,QAAQ,YANN,SAQqB,KAArB8E,EAAYnF,KAAc,OAASmF,EAAYnF,KAAKkM,wBCvUjD,SAASgL,KAAS,IAAD,EACQ1Z,mBAAS,CAC7C3B,WAAOwN,EACP5L,WAAO4L,EACP1K,WAAW,KAJiB,mBACvB6T,EADuB,KACVrV,EADU,OAMRK,mBAAS,IAND,mBAMvByS,EANuB,KAMlBjJ,EANkB,OAONxJ,oBAAS,GAPH,mBAOvB0S,EAPuB,KAOjBjJ,EAPiB,KAkC9B,OACE,cAAC,IAAD,UACE,cAAC5J,EAAYsa,SAAb,CAAsBhY,MAAO,CAAE6S,cAAarV,iBAAgB8S,MAAKjJ,SAAQkJ,OAAMjJ,WAA/E,SACE,cAAC,gBAAD,UAQU,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2Q,OAAK,EAACC,KAAK,IAAIpJ,UAAWqJ,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASpJ,UAAW1R,IACtC,cAAC,IAAD,CAAO6a,OAAK,EAACC,KAAK,YAAYpJ,UAAW1N,IACzC,cAAC,IAAD,CAAO6W,OAAK,EAACC,KAAK,WAAWpJ,UAAW1H,KACxC,cAAC,IAAD,CAAO6Q,OAAK,EAACC,KAAK,SAASpJ,UAAWtC,KACtC,cAAC,IAAD,CAAOyL,OAAK,EAACC,KAAK,kBAAkBpJ,UAAWb,KAC/C,cAAC,IAAD,CAAOgK,OAAK,EAACC,KAAK,aAAapJ,UAAWe,KAC1C,cAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,eAAepJ,UAAWqB,KAC5C,cAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,aAAapJ,UAAWsJ,KAC1C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYpJ,UAAWwG,KACzC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,UAAUpJ,UAAWiJ,c,iCC7E9CM,GAAe,CAC1BC,aAAc,GACdtZ,WAAY,ICFDqZ,GAAe,GCAfA,GAAe,GCUbE,GANKC,2BAAgB,CAChC1a,MHDwB,WAAmC,IAAlCiL,EAAiC,uDAAzBsP,GAAcI,EAAW,uCAC5D,OAAQA,EAAOpY,MACb,KAAKY,EACH,IAAIyX,EAAQ,2BACP3P,GADO,IAEVuP,aAAcG,EAAOvX,QAAQpD,MAC7BkB,WAAYyZ,EAAOvX,QAAQlC,aAG7B,OAAO0Z,EACT,QACE,OAAO3P,IGTTlK,KFJuB,WAAmC,IAAlCkK,EAAiC,uDAAzBsP,GAAcI,EAAW,uCACzD,OAAQA,EAAOpY,MACX,KAAKY,EACD,OAAQwX,EAAOvX,QACnB,QACI,OAAO6H,IEAfC,MDNwB,WAAmC,IAAlCD,EAAiC,uDAAzBsP,GAAcI,EAAW,uCAE1D,OAAQA,EAAOpY,MACX,KAAKY,EACD,OAAQwX,EAAOvX,QACnB,QACI,OAAO6H,MEJb4P,GAAWC,+BAAoBC,2BAAgBC,OAKtCC,GAJM,WACjB,IAAMA,EAAQC,uBAAYT,GAAaI,IACvC,OAAOI,GCSIE,OAXf,WACE,IAAMF,EAAQG,KACd,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,qBAAKnZ,UAAU,MAAf,SACE,cAAC,GAAD,SCCOuZ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9Q,MAAK,YAAkD,IAA/C+Q,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,GAAD,IACFzI,SAAS0I,eAAe,SAM1BV,O","file":"static/js/main.d27af834.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext({\r\n      isLoggedIn: false,\r\n      userId: null,\r\n      token: null,\r\n      login: () => {},\r\n      logout: () => {}\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Axios from \"axios\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport Box from '@mui/material/Box';\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid #D9D9D6\",\r\n        borderRadius:'10px',\r\n        width: \"100%\",\r\n        padding: \"10px 15px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Login() {\r\n    // const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const { setLoginStatus } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const login = async () => {\r\n        const password = values.password;\r\n\r\n        // Store current user's email to redux\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: \"\",\r\n        // };\r\n       \r\n\r\n        // When user is super admin, redirect to admin page.\r\n        if (email === \"superadmin\" && password === \"superadmin\") {\r\n            history.push(\"/admin\");\r\n            return;\r\n        }\r\n\r\n        if (!email) {\r\n            addToast(\"Ingrese su E-mail\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!password) {\r\n            addToast(\"Please Enter Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\"/users/login\", loginUser);\r\n\r\n        if (loginRes.data.status === \"No User\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (loginRes.data.status === \"Wrong Password\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (loginRes.data.status === \"No Active\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        // If login is success.\r\n        // if (loginRes.data.status === \"Success\") {\r\n            \r\n            setLoginStatus({\r\n                token: loginRes.data.token,\r\n                email: loginRes.data.email,\r\n                customerId: ''\r\n              });\r\n              localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            // dispatch(Actions.saveEmail(payload));\r\n            history.push(\"/translist\");\r\n        // }\r\n    };\r\n    const prevPage = () => {\r\n        history.push('/');\r\n    };\r\n    return (\r\n        <Box\r\n          sx={{\r\n            height: '100vh',\r\n            backgroundColor: '#1a1938',\r\n          }}\r\n    >  \r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n            <div className=\"reg-item\">\r\n                \r\n            <p className=\"title\">Sign In</p>\r\n                <BootstrapInput\r\n                    placeholder=\"Email\"\r\n                    sx={{ width: \"90%\", my:'14px', mt:'25px'}}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <BootstrapInput\r\n                    placeholder=\"Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    label=\"Password\"\r\n                />\r\n                 <div className=\"bt-home\">   \r\n                    <Button sx={{backgroundColor:'transparent', width:'70%', color: '#0dcaf0',p:2, mt:'20%'}} color=\"primary\" variant=\"filled\" onClick={login}>\r\n                     L O G I N\r\n                    </Button>\r\n                    <Typography variant=\"subtitle2\" >\r\n                       Olvidaste la contraseña?\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n","export const SAVE_EMAIL = \"SAVE_EMAIL\";\r\nexport const SEL_DATA = \"SEL_DATA\";\r\n\r\nexport const SLIDE_DATA = \"SLIDE_DATA\"","import * as types from \"./types\";\r\n\r\nexport const saveEmail = (val) => {\r\n    return {\r\n        type: types.SAVE_EMAIL,\r\n        payload: val,\r\n    };\r\n};\r\n\r\nexport const selData = (val) => {\r\n    return {\r\n        type: types.SEL_DATA,\r\n        payload: val,\r\n    };\r\n};\r\n\r\nexport const slideData = (val) =>{\r\n    return {\r\n        type: types.SLIDE_DATA,\r\n        payload : val\r\n    }\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\n// import InputAdornment from \"@mui/material/InputAdornment\";\r\n// import OutlinedInput from \"@mui/material/OutlinedInput\";\r\n// import InputLabel from \"@mui/material/InputLabel\";\r\n// import FormControl from \"@mui/material/FormControl\";\r\n// import Visibility from \"@mui/icons-material/Visibility\";\r\n// import VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        borderRadius:'10px',\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid #D9D9D6\",\r\n        padding: \"12px 16px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n    },\r\n}));\r\n\r\nexport default function Register() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n    const [rePassword, setRePassword] = React.useState({\r\n        repassword: \"\",\r\n        showRePassword: false,\r\n    });\r\n    const { addToast } = useToasts();\r\n    const { setLoginStatus } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    // const handleClickShowPassword = () => {\r\n    //     setValues({\r\n    //         ...values,\r\n    //         showPassword: !values.showPassword,\r\n    //     });\r\n    // };\r\n\r\n    // const handleMouseDownPassword = (event) => {\r\n    //     event.preventDefault();\r\n    // };\r\n    // RePassword\r\n    const handleRePasswordChange = (prop) => (event) => {\r\n        setRePassword({ ...rePassword, [prop]: event.target.value });\r\n    };\r\n\r\n    // const handleClickShowRePassword = () => {\r\n    //     setRePassword({\r\n    //         ...rePassword,\r\n    //         showRePassword: !rePassword.showRePassword,\r\n    //     });\r\n    // };\r\n\r\n    // Submit New User Information to database\r\n    const submit = async () => {\r\n        const password = values.password;\r\n        const repassword = rePassword.repassword;\r\n\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (password !== repassword) {\r\n            addToast(\"Please Confirm Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newUser = {\r\n            email,\r\n            password,\r\n        };\r\n        const resultRegister = await Axios.post(\"/users/register\", newUser);\r\n\r\n        // Register Success Case\r\n        if (resultRegister.data.status === 200) {\r\n            setLoginStatus(true);\r\n\r\n            // Store current user's email to redux\r\n            const payload = {\r\n                email: email,\r\n                customerId: \"\",\r\n            };\r\n            dispatch(Actions.saveEmail(payload));\r\n            history.push(\"/login\");\r\n        } else {\r\n            addToast(resultRegister.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n    \r\n    const prevPage = () => {\r\n        history.push('/');\r\n    };\r\n    return (<Box\r\n        sx={{\r\n          height: '100vh',\r\n          backgroundColor: '#1a1938',\r\n        }}\r\n      >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n            <div className=\"top-bar\"></div>\r\n            \r\n            <div className=\"reg-item\">\r\n                \r\n            <p className=\"title\">Sign up</p>\r\n                <BootstrapInput\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    sx={{ width: \"90%\", my: \"14px\", mt:'25px' }}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n               \r\n                <BootstrapInput\r\n                    placeholder=\"Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    label=\"Password\"\r\n                />\r\n                <BootstrapInput\r\n                    placeholder=\"Confirm Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={rePassword.showRePassword ? \"text\" : \"password\"}\r\n                    value={rePassword.repassword}\r\n                    onChange={handleRePasswordChange(\"repassword\")}\r\n                    label=\"Password\"\r\n                />\r\n                <div className=\"bt-home\" style={{marginTop:'40px'}}>   \r\n                <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:3,width:'70%'}} color=\"primary\" variant=\"filled\" onClick={submit}>\r\n                    R e g i s t e r\r\n                </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fino.51ff789f.png\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport logoImg from \"../../images/fino.png\";\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function BoxSx() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    \r\n    <Box\r\n      sx={{\r\n        height: '100vh',\r\n        backgroundColor: '#1a1938',\r\n      }}\r\n    >\r\n      <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            px:3,\r\n            pt: 10\r\n          }}\r\n      >\r\n        <Grid item>\r\n          <img src={logoImg} alt=\"logo\" width=\"130px\" />\r\n        </Grid>\r\n        <Grid item sx={{mt:2}}>\r\n          <Typography variant=\"h4\" sx={{textAlign: 'center', color: '#fff'}}>\r\n            Bienvenido a Fino\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" style={{textAlign: 'center', color: \"#ffffff6e\" }}>\r\n            Emite tus facturas y boletas de una manera fácil, rápida y segura usando tú teléfono. \r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sx={{ mt: 1, width: '100%'}}>\r\n          <ButtonGroup\r\n              orientation=\"vertical\"\r\n              aria-label=\"vertical contained button group\"\r\n              sx={{width:'80%'}}\r\n          >\r\n            <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:2}} color=\"primary\" variant=\"contained\"   onClick={()=> history.push('/register')}>R e g i s t e r</Button>\r\n            <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:2}} color=\"primary\" variant=\"contained\"  onClick={()=> history.push('/login')}>L o g i n</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveSharpIcon from '@mui/icons-material/RemoveSharp';\r\nimport AddSharpIcon from '@mui/icons-material/AddSharp';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as Actions from \"../../redux/action\";\r\nimport React, { useEffect, useState } from 'react'\r\n \r\n export default function Slide(props) {\r\n      const dispatch = useDispatch();\r\n      const [width, setWidth] =useState(0);\r\n      const [amount,setAmount] = useState('0');\r\n      const [placeholder, setPlaceholder] = useState(0);\r\n      const [count, setCount] = useState(1);\r\n      const [description, setDescription] = useState(\"\");\r\n\r\n      const changeHandler = (e) =>{ \r\n            e.preventDefault();\r\n            const rgx = /^[0-9]*(\\.\\d{0,2})?$/;\r\n            const result = e.target.value.toString().match(rgx);\r\n            \r\n            if(result && result[0] <= 99999.99){\r\n                setAmount(prev => result ? e.target.value : prev);\r\n\r\n                if(e.target.value.slice(0,1)=== '0'){\r\n                    if(e.target.value.slice(0,2) === '0.')\r\n                    {\r\n                    }else{\r\n                        let temp =e.target.value.slice(1);\r\n                        setAmount(temp);\r\n                    }\r\n                }\r\n            }\r\n            \r\n      }\r\n     useEffect(() => {\r\n        if(amount ===''){\r\n            setAmount('0')\r\n        }\r\n        if(amount.slice(0).charCodeAt(0) === 46){\r\n            setAmount(prev => Number(prev).toFixed(2))\r\n        }\r\n        setWidth(4    +amount.toString().length*1.3);\r\n        setPlaceholder(amount);\r\n        if(amount.toString().includes('.')){\r\n            setPlaceholder(prev => Number(prev).toFixed(2))\r\n        }\r\n     },[amount])\r\n\r\n     const increase = ()=>{\r\n        setCount(prev => prev+1);\r\n    }     \r\n    const decrease = ()=>{\r\n        setCount(prev => {\r\n            if(prev >=2){\r\n                return prev-1;\r\n            }\r\n            else{\r\n                return prev\r\n            }\r\n        });\r\n        \r\n    }\r\n    const index = props.index;\r\n    // const active = props.active;\r\n    useEffect(()=>{\r\n\r\n        const ss = {index, count, amount, description};\r\n        dispatch(Actions.slideData(ss));\r\n\r\n        return ()=>{\r\n            const ss = {index : 0, count : 1, amount:'', description: ''}\r\n            dispatch(Actions.slideData(ss))\r\n        }\r\n    },[amount, count, dispatch, index, description]);\r\n\r\n    \r\n   return (\r\n     <div>\r\n<Grid container direction=\"column\" justifyContent=\" space-between\" alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n                <IconButton aria-label=\"minus\" sx={{mx: 3}} onClick={decrease}>\r\n                    <RemoveSharpIcon color=\"primary\" />\r\n                </IconButton>\r\n                <span className=\"count\">{count}</span>\r\n                <IconButton aria-label=\"plus\" sx={{mx: 3}} onClick={increase}>\r\n                    <AddSharpIcon color=\"primary\" />\r\n                </IconButton>\r\n            </Grid>\r\n            {/* placeholder = {amount? placeholder : 0} */}\r\n            <Grid item className=\"compose\">\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    id=\"filled-start-adornment\" \r\n                    sx={{ m: 1,pl:0, width: width+ \"em\", maxWidth : '100%'}}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"><p className='adorment'>S/</p></InputAdornment>,\r\n                        disableUnderline: true,\r\n                        style: { fontSize: 58 }\r\n                    }}\r\n                    type=\"number\"\r\n                    onChange={changeHandler}\r\n                    value={amount}\r\n                    // autoFocus={props.active ? \"true\" : \"false\"}\r\n                />\r\n            </Grid>\r\n            <Grid item sx={{\r\n                width:\"90%\"\r\n            }}>\r\n                <TextField \r\n                    placeholder=\"Description\"\r\n                    variant=\"standard\"\r\n                    InputProps={{\r\n                        inputProps: {\r\n                            style: { textAlign: \"center\" },\r\n                        }\r\n                    }}\r\n                    onChange = {(e)=> setDescription(e.target.value)}\r\n                    fullWidth\r\n                    focused\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n   )\r\n }\r\n \r\n","\r\nconst SendApi = (collection, invoiceInfo, response) => {\r\n      const docType = () => {\r\n            if(invoiceInfo.docType === 'dni'){\r\n                  return 1;\r\n             }\r\n             if(invoiceInfo.docType === 'ruc'){\r\n                  return 6;\r\n            }\r\n            return 0;\r\n      }\r\n      const type=()=>{\r\n         if(invoiceInfo.type === 'invoice'){\r\n            return '01';\r\n         }\r\n         if(invoiceInfo.type === 'ticket'){\r\n            return '03';\r\n         }\r\n         if(invoiceInfo.type === 'note'){\r\n            return '77';\r\n         }\r\n      }\r\n      function calcTime(offset) {\r\n         // create Date object for current location\r\n         var d = new Date();\r\n     \r\n         // convert to msec\r\n         // subtract local time zone offset \r\n         // get UTC time in msec\r\n         var utc = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n     \r\n         // create new Date object for different city\r\n         // using supplied offset\r\n         var nd = new Date(utc + (3600000*offset));\r\n         return nd;\r\n         // // return time as a string\r\n         // return \"The local time for city\"+ city +\" is \"+ nd.toLocaleString();\r\n     }\r\n     \r\n      const data = \r\n      {\r\n          \"contribuyente\":{\r\n             \"token_contribuyente\": response.token? response.token: \"SC4H9H0U2TXE1NYU4P0KRJIETM2QZ1MMYMM9X\",// token is very important.\r\n             \"id_usuario_vendedor\": response.vendor ? response.vendor : 0 , // default 0\r\n             \"tipo_proceso\": response.process ? response.process : 'prueba', //default prueba.\r\n             \"tipo_envio\":\"inmediato\"\r\n          },\r\n          \"cliente\":{\r\n             \"tipo_docidentidad\": docType(), // 1: dni, 6: ruc, another is 0.\r\n             \"numerodocumento\": invoiceInfo.doc, //\r\n             \"nombre\":  invoiceInfo.name, //\r\n             \"email\":\"\",\r\n             \"direccion\": invoiceInfo.direction, //\r\n             \"ubigeo\":\"\",\r\n             \"sexo\":\"\",\r\n             \"fecha_nac\":\"\",\r\n             \"celular\":\"\"\r\n          },\r\n          \"cabecera_comprobante\":{\r\n             \"tipo_documento\": type(), // 01: invoice or 03: ticket or 77: note\r\n             \"moneda\":\"PEN\",\r\n             \"idsucursal\": response.branch ? response.branch : 23, // default 23.\r\n             \"id_condicionpago\":\"0\",\r\n             \"fecha_comprobante\": `${calcTime('-5').getDate()}/${calcTime('-5').getMonth()+1}/${calcTime('-5').getFullYear()}`,\r\n             \"nro_placa\":\"\",\r\n             \"nro_orden\":\"\",\r\n             \"guia_remision\":\"\",\r\n             \"descuento_monto\":0,\r\n             \"observacion\":\"\",\r\n             \"descuento_porcentaje\": \"\"\r\n          },\r\n          \"detalle\":[\r\n            //  {\r\n            //     \"idproducto\":0,\r\n            //     \"codigo\":\"TV_CODIGOPROD\",\r\n            //     \"afecto_icbper\":\"no\",\r\n            //     \"id_tipoafectacionigv\":10,\r\n            //     \"descripcion\":\"Product 01\", //\r\n            //     \"idunidadmedida\":\"NIU\",\r\n            //     \"precio_venta\":500, //\r\n            //     \"cantidad\":2 //\r\n            //  },\r\n          ]\r\n      }\r\n      // eslint-disable-next-line array-callback-return\r\n      collection.map((el, index)=>{\r\n         if(el.index === index){\r\n            // eslint-disable-next-line no-mixed-operators\r\n            if((el.count === 1) && (el.amount === '0') || (el.amount === '')){\r\n            \t//don't include\r\n            }else{\r\n               data.detalle.push({\r\n                  \"idproducto\":0,\r\n                  \"codigo\":\"000\",\r\n                  \"afecto_icbper\":\"no\",\r\n                  \"id_tipoafectacionigv\":10,\r\n                  \"descripcion\" : el.description,\r\n                  \"idunidadmedida\":\"NIU\",\r\n                  \"precio_venta\" : el.amount,\r\n                  \"cantidad\": el.count\r\n            })\r\n            }\r\n            \r\n         }\r\n      })\r\n      console.log(data)\r\n      const postDetail = {\r\n         method: 'POST',\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(data)\r\n      }\r\n      return postDetail;\r\n}\r\n\r\nexport default SendApi;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./index.css\";\r\nimport Slide from './Slide'\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n//mui component\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Button from '@mui/material/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.min.css'\r\nimport SendApi from '../api/sendApi';\r\n\r\n\r\nimport * as Actions from \"../../redux/action\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function Invoice() {\r\n    const { setPdf, setConf, setLoginStatus } = useContext(UserContext);\r\n    const [invoiceInfo, setInvoiceInfo] = useState({\r\n        amount: \"\",\r\n        name: \"\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n        sellerId: \"\",\r\n        customerId: \"\",\r\n        type: \"\",\r\n        pdfLink:\"\",\r\n        docType: \"\"\r\n    });\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [dni, setDni] = useState(false);\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n    const [alter, setAlter] = useState(false);\r\n    const dispatch = useDispatch();\r\n    //  let email = useSelector((state) => state.email.currentEmail);\r\n\r\n       // let customerId = useSelector((state) => state.email.customerId);\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            let customerId = localStorage.getItem('customerId');\r\n            if (!token && !customerId) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId: customerId\r\n              });\r\n            \r\n    \r\n              setPdf('');\r\n        // Get customer information from \"customer\" table.\r\n        const temp={};\r\n       await Axios.get(\"/customers/get/\" + customerId).then(async (res) => {\r\n            temp.name = res.data[0].name;\r\n            temp.doc = res.data[0].doc;\r\n            temp.customerId = res.data[0]._id\r\n            temp.direction = res.data[0].direction\r\n            temp.sellerId = res.data[0].sellerId\r\n            temp.pdfLink=\"\"\r\n            temp.docType = res.data[0].docType\r\n            if(res.data[0].docType === 'dni'){\r\n              \r\n                setDni(true);\r\n            }\r\n        });\r\n      await  Axios.get(\"/users/getId/\" + userRes.data.email).then(\r\n      async (response) => {\r\n        setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n        temp.type = '';\r\n        if(response.data.docType[0] && !response.data.docType[1] && !response.data.docType[2]){\r\n            temp.type = 'invoice';\r\n            setDocType({...docType, 'invoice' : false});\r\n        }\r\n\r\n        if(!response.data.docType[0] && response.data.docType[1] && !response.data.docType[2]){ \r\n            temp.type = 'ticket';\r\n            setDocType({...docType, 'ticket' : false});\r\n        }\r\n\r\n        if(!response.data.docType[0] && !response.data.docType[1] && response.data.docType[2]){\r\n            temp.type = 'note';\r\n            setDocType({...docType, 'note' : false});\r\n        }\r\n\r\n        if(response.data.docType[0] && (response.data.docType[1] && !response.data.docType[2])){\r\n            setAlter(true);\r\n            if(temp.doc.length === 8){\r\n                temp.type = 'ticket'\r\n            }\r\n        }\r\n\r\n        if(response.data.docType[0] && (!response.data.docType[1] && response.data.docType[2])){\r\n            setAlter(true)\r\n            if(temp.doc.length === 8){\r\n                temp.type = 'note'\r\n            }\r\n        }\r\n\r\n        setInvoiceInfo(temp);\r\n        })\r\n};\r\n    checkLoggedIn();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const prevPage = () => {\r\n        history.push('/customer');\r\n    };\r\n\r\n \r\n    // Go to previous page.\r\n\r\n    const [slideCount, setSlideCount] = useState(2); \r\n\r\n    const increment = ()=>{\r\n        setSlideCount(prev=> prev +1)\r\n    }\r\n\r\n    //get total\r\n    const dataInfo = useSelector(state => state.slide)\r\n    const [ middle, setMiddle] = useState([]);\r\n    \r\n    const collection = [];\r\n    \r\n    const sort = () =>{\r\n        for(let i = 0; i<slideCount-1 ; i++){\r\n             collection.push(middle.filter((el)=> {\r\n                return el.index === i ;\r\n            }).pop());\r\n        }\r\n    }\r\n    const [total, setTotal]=useState(0);\r\n    const getTotal=()=>{\r\n        let sum = 0;\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i] === undefined){\r\n\r\n            }else{\r\n                sum += collection[i].count * Number(collection[i].amount);\r\n            }\r\n        }\r\n        setTotal(sum.toFixed(2))\r\n    }\r\n    useEffect(()=>{\r\n        setMiddle(prev=> [...prev, dataInfo])\r\n    },[dataInfo])\r\n    useEffect(()=>{\r\n        sort();\r\n        getTotal()\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [middle])\r\n    useEffect(()=>{\r\n        setInvoiceInfo({\r\n            ...invoiceInfo,\r\n            \"amount\" : total.toString()\r\n        });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[total])\r\n    const submit =async () => {\r\n        Axios.get(\"/users/get/\" + invoiceInfo.sellerId).then(\r\n            async (response) => {\r\n               \r\n              if (!response.data.active_status){\r\n                addToast(\"Your subscription has expired\", {\r\n                    appearance: \"info\",\r\n                    autoDismissTimeout: 2000,\r\n                    autoDismiss: true,\r\n                    placement: 'top-center'\r\n                });\r\n                localStorage.removeItem('auth-token')\r\n                localStorage.removeItem('customerId')\r\n                history.push('/login');\r\n                return;\r\n              }\r\n              \r\n            }\r\n          );\r\n        if (!invoiceInfo[\"amount\"]) {\r\n            addToast(\"Please Enter Amount\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }         \r\n        sort()\r\n        if(collection[0] === undefined){\r\n            addToast(\"Please Enter Description\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i].count === 1 && collection[i].amount === '0'){\r\n            }else{\r\n                if(collection[i].description === ''){\r\n                    addToast(\"Please Enter Description\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n                 if(collection[i].amount === '0'){\r\n                    addToast(\"Please Enter amount\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n            }\r\n             \r\n        }\r\n        if (!invoiceInfo[\"type\"]) {\r\n            addToast(\"Please Select Type\", {\r\n                appearance: \"info\",\r\n                autoDismiss: true,\r\n                autoDismissTimeout: 2000,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setPdf('http://example.com');\r\n        Axios.get(\"/users/get/\"+ invoiceInfo.sellerId).then((response)=>{\r\n            const postDetail = SendApi(collection, invoiceInfo, response.data);\r\n             getVals(postDetail,invoiceInfo.type);\r\n        })\r\n        \r\n    };\r\n    async function getVals(detail,type){\r\n        \r\n        return await fetch(type === 'note' ? \"https://facturavirtual.pe/facturacion/api/procesar_nota_venta\": \"https://facturavirtual.pe/facturacion/api/procesar_venta\", detail)\r\n        .then((response)=>{\r\n                 return response.json()\r\n        })\r\n\r\n        .then( (datas) => { \r\n\r\n               const gettingPdf = `https://facturavirtual.pe/sys_fe/download/downloadpdf/${datas.documento.id_contribuyente}/${datas.documento.id_tipodoc_electronico}/${datas.documento.serie_comprobante}/${datas.documento.numero_comprobante}/pdf/ticket/cpe.pdf`;\r\n            //   const gettingPdf =datas.url_absoluta_ticket;\r\n              setPdf(gettingPdf.toString());\r\n              let tmp_invoice = {...invoiceInfo,\"pdfLink\" : gettingPdf.toString()};\r\n\r\n            setInvoiceInfo({\r\n                    ...invoiceInfo,\r\n                    \"pdfLink\" : gettingPdf.toString()\r\n                })\r\n\r\n                return tmp_invoice\r\n              //return gettingPdf;\r\n        })\r\n        .then(async (aaa)=>{\r\n            Axios.post(\"/trans/create\", aaa).then(async (response) => {\r\n\r\n                if (response.data.status === 200) {\r\n                    setConf(true);\r\n                    localStorage.removeItem('customerId');\r\n                    const currentDate = new Date();\r\n                    const curFormatDate = currentDate;\r\n                    let sel ={\r\n                        name: aaa.name,\r\n                        date: curFormatDate\r\n                    }\r\n                    dispatch(Actions.selData(sel));\r\n                    history.push({\r\n                        pathname: \"/confirm/\" + invoiceInfo[\"amount\"],\r\n                    });\r\n\r\n                }\r\n            });\r\n        })\r\n        .catch((err)=>{ \r\n            addToast(\"En el ambiente de pruebas solo se permiten crear hasta 10 BOLETAS\", {\r\n            appearance: \"info\",\r\n            autoDismissTimeout: 2000,\r\n            autoDismiss: true,\r\n            placement: 'top-center'\r\n        });\r\n        setLoading(false)\r\n        return;})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            setTotal(0);\r\n            collection.fill(null);\r\n            setMiddle(null);\r\n            setSlideCount(2);\r\n            setDni(false);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    return (\r\n        <Box sx={{ \r\n            flexGrow: 1,\r\n            width: '100%',\r\n            height: '100vh',\r\n            backgroundColor : 'white',\r\n        }}>\r\n    <Grid container direction=\"column\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n        <Grid item container direction=\"row\" sx={{mt:5}} justifyContent=\"center\" alignItems=\"center\">\r\n            <p className=\"name\">{invoiceInfo[\"name\"]}</p>\r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n            <p className=\"doc\">{invoiceInfo[\"doc\"]}</p>\r\n        </Grid>\r\n        <Grid sx={{width: '100%', pt:2}} item>\r\n        <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            onReachEnd = {increment}\r\n            \r\n        >\r\n\r\n            {\r\n                (new Array(slideCount).fill(null).map((_, i)=>(\r\n                    <SwiperSlide key={i}>\r\n                        {({ isActive }) => (\r\n                            <Slide index={i} active={isActive ? true : false} />\r\n                            )}\r\n                        \r\n                    </SwiperSlide>\r\n                )))\r\n            }\r\n\r\n            {/* <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide> */}\r\n        </Swiper>\r\n           {/* <Slide /> */}\r\n        </Grid>\r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                sx={{\r\n                    pl:2\r\n                }}\r\n            >\r\n                {!dni && docType.invoice && <FormControlLabel name=\"type\" value=\"invoice\" control={<Radio size=\"small\" />} label=\"Invoice\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.ticket &&( !alter || !dni  )&& <FormControlLabel name=\"type\" value=\"ticket\" control={<Radio size=\"small\" />} label=\"Ticket\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.note && (!alter || !dni) && <FormControlLabel name=\"type\" value=\"note\" control={<Radio size=\"small\" />} label=\"Note\" onChange={(e) =>\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                         [e.target.name]: e.target.value,\r\n                    })\r\n                        }/>}        \r\n            </RadioGroup>\r\n        </Grid>\r\n\r\n        \r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <p className=\"total\">Total S/{total}</p>\r\n        </Grid>\r\n        <Grid item sx={{\r\n            pt:2,\r\n            width: '60%'\r\n        }}>\r\n        <LoadingButton\r\n          onClick={submit}\r\n          endIcon={<SendIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n        >\r\n          { invoiceInfo.type === '' ? 'Send' : invoiceInfo.type.toUpperCase() }\r\n        </LoadingButton>\r\n        </Grid>\r\n    </Grid>\r\n    </Box>\r\n\r\n    );\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import UserContext from \"../../context/UserContext\";\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nimport \"./index.css\";\r\n\r\nexport default function Admin() {\r\n    const [users, setUsers] = useState([]);\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        Axios.get(\"/users/all\").then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n\r\n        });\r\n        \r\n        return()=>{\r\n            setUsers([]);\r\n        }\r\n    }, [history]);\r\n\r\n    const logout = () => {\r\n        history.push('/')\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState('');\r\n\r\n    const handleClickOpen = (id) => {\r\n        setOpen(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen('');\r\n    };\r\n\r\n\r\n    const remove = (id) => {\r\n        //Before clicking \"Delete\" button,\r\n    \r\n        var prevUsers = users;\r\n\r\n        Axios.delete(\"/users/delete/\" + id).then((response) => {\r\n            if (response.data.msg === \"success\") {\r\n                var del_id = response.data.del_id;\r\n                var userSize = Object.keys(prevUsers).length;\r\n                var users = [];\r\n                for (let i = 0; i < userSize; i++) {\r\n                    var user = [];\r\n                    if (del_id !== prevUsers[i].id) {\r\n                        user = {\r\n                            id: prevUsers[i].id,\r\n                            name: prevUsers[i].name,\r\n                            ruc: prevUsers[i].ruc,\r\n                            branch: prevUsers[i].branch,\r\n                            vendor: prevUsers[i].vendor,\r\n                            process: prevUsers[i].process,\r\n                            credit: prevUsers[i].credit,\r\n                            paid: prevUsers[i].paid,\r\n                            token: prevUsers[i].token,\r\n                            email: prevUsers[i].email,\r\n                            active_status: prevUsers[i].active_status,\r\n                        };\r\n                        users.push(user);\r\n                    }\r\n                }\r\n                setUsers(users);\r\n                addToast(\"Deleted Successfully\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            } else {\r\n                addToast(\"Sorry, Operation is failure\", {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n    const deactive = (id) => {\r\n        Axios.get(\"/users/deactive/\" + id).then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n            addToast(\"Success, Deactivation\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n        });\r\n    };\r\n\r\n    const active = (id) => {\r\n        Axios.get(\"/users/active/\" + id).then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n            addToast(\"Success, Activation\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n        });\r\n    };\r\n\r\n    const edit = (id) => {\r\n        history.push({\r\n            pathname: \"/admin/edit/\" + id,\r\n        });\r\n    };\r\n\r\n    const newUser = () => {\r\n        history.push(\"/admin/new\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin\">\r\n            <div>\r\n                <IconButton onClick={logout}><i\r\n                    className=\"fas fa-sign-out-alt fa-rotate-180\"\r\n                    \r\n                ></i>\r\n                </IconButton>\r\n            </div>\r\n             <i className=\"fas fa-user-plus\" onClick={newUser}></i>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Ruc</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.ruc}</td>\r\n                            <td>\r\n                                \r\n                                <IconButton size=\"small\" onClick={() => edit(user.id)}><i\r\n                                    className=\"fas fa-pen\"\r\n                                ></i>\r\n                                </IconButton>\r\n                                <IconButton size=\"small\" onClick={() => handleClickOpen(user.id)}>\r\n                                <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                >\r\n                                </i></IconButton>\r\n                               \r\n                                {user.active_status ? (\r\n                                     <IconButton size=\"small\" onClick={() => deactive(user.id)}>\r\n                                    <i\r\n                                        className=\"fas fa-lock\"\r\n                                    ></i></IconButton>\r\n                                ) : (\r\n                                    <IconButton size=\"small\" onClick={() => active(user.id)}><i\r\n                                        className=\"fas fa-lock-open\"\r\n                                    ></i></IconButton>\r\n                                    \r\n                                )}\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Dialog\r\n                                        open={open ? true : false}\r\n                                        onClose={handleClose}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        <DialogTitle id=\"alert-dialog-title\">\r\n                                        {\"Caution\"}\r\n                                        </DialogTitle>\r\n                                        <DialogContent>\r\n                                        <DialogContentText id=\"alert-dialog-description\">\r\n                                            All data will be deleted.\r\n                                        </DialogContentText>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                        <Button onClick={handleClose}>{\"Cancel\"}</Button>\r\n                                        <Button onClick={() => remove(open)} autoFocus>\r\n                                            {\"Okay\"}\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/////////////////////////////////\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\n\r\nexport default function Edit() {\r\n  let { id } = useParams();\r\n    const [name, setName] = useState(\"\");\r\n    const [ruc, setRuc] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [credit, setCredit] = useState(\"\");\r\n    const [vendor, setVendor] = useState(\"\");\r\n    const [process, setProcess] = useState(\"\");\r\n    const [paid, setPaid] = useState(\"\");\r\n    const [docType, setDocType] = useState({\r\n      invoice: false,\r\n      ticket: false,\r\n      note: false\r\n\r\n    });\r\n    const docHandle = (event) =>{\r\n      setDocType({\r\n        ...docType,\r\n        [event.target.name] : event.target.checked\r\n      })\r\n    }\r\n\r\n\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n \r\n  const submit = async () => {\r\n        if (!name) {\r\n            addToast(\"Please Enter Name\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!ruc) {\r\n            addToast(\"Please Enter Ruc\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!branch) {\r\n            addToast(\"Please Enter Id Sucursal\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!token) {\r\n            addToast(\"Please Enter Token\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!vendor) {\r\n            addToast(\"Please Enter Id Vendor\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!process) {\r\n            addToast(\"Please Enter Tipo Proceso\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!credit) {\r\n            addToast(\"Please Enter Credit\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!paid) {\r\n            addToast(\"Please Enter Paid\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if(!docType.invoice && !docType.ticket && !docType.note){\r\n          addToast('Please Check Doc Types' , {\r\n            appearance: \"error\",\r\n            autoDismiss : true\r\n          })\r\n          return;\r\n        }\r\n\r\n    const newUser = {\r\n      id,\r\n      name,\r\n      ruc,\r\n      branch,\r\n      token,\r\n      email,\r\n      vendor,\r\n      process,\r\n      credit,\r\n      paid,\r\n      docType\r\n    };\r\n    const resultRegister = await Axios.put(\r\n      \"/users/update\",\r\n      newUser\r\n    );\r\n\r\n    // Register Success Case\r\n    if (resultRegister.status === 200) {\r\n      history.push(\"/admin\");\r\n    } else {\r\n      addToast(resultRegister.data.msg, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n    const prevPage = () => {\r\n      history.push('/admin');\r\n  };\r\n  \r\n    useEffect(() => {\r\n    Axios.get(\"/users/get/\" + id).then(\r\n      async (response) => {\r\n        setName(response.data.name);\r\n        setRuc(response.data.ruc);\r\n        setBranch(response.data.branch);\r\n        setToken(response.data.token);\r\n        setCredit(response.data.credit);\r\n        setVendor(response.data.vendor);\r\n        setProcess(response.data.process? response.data.process : \"prueba\");\r\n        setPaid(response.data.paid);\r\n        setEmail(response.data.email);\r\n        setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n      }\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ id]);\r\n\r\n    return (\r\n        <Box\r\n          component=\"form\"\r\n          sx={{ display: 'flex', flexWrap: 'wrap', p:3 }}\r\n          noValidate\r\n          autoComplete=\"on\"\r\n        >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n          </IconButton>\r\n          <div>\r\n          <InputLabel sx={{my:1, color: '#1976d2', fontWeight:'600'}} >Edit User</InputLabel>\r\n            <TextField\r\n              required\r\n              autoComplete=\"email\"\r\n              variant=\"standard\"\r\n              label=\"Name\"\r\n              focused\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{mb:1}}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Ruc\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ mr: 1,my:1, width: '60%' }}\r\n              value={ruc}\r\n              onChange={(e) => setRuc(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Id Sucursal\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n              sx={{ ml: 1,my:1, width: '35%' }}\r\n              value={branch}\r\n              onChange={(e) => setBranch(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Token\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              focused\r\n              fullWidth\r\n              sx={{my:1}}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              sx={{my:1}}\r\n              focused\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Vendor\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ my: 1,mr:1, width: '40%' }}\r\n              focused\r\n              value={vendor}\r\n              onChange={(e) => setVendor(e.target.value)}\r\n            />\r\n            <FormControl sx={{ my: 1,ml:1, width: '55%' }} size=\"small\" focused variant=\"standard\">\r\n              <InputLabel >Tipo Proceso</InputLabel>\r\n              <Select\r\n                value={process}\r\n                onChange={(e) => setProcess(e.target.value)}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value=\"prueba\">Prueba</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          <TextField\r\n              label=\"Id Credit\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              sx={{ my: 1,mr:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={credit}\r\n              onChange={(e) => setCredit(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Paid\"\r\n              type=\"number\"\r\n              \r\n              variant=\"standard\"\r\n              sx={{ my: 1,ml:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={paid}\r\n              onChange={(e) => setPaid(e.target.value)}\r\n            />\r\n\r\n            <FormControlLabel  control={<Checkbox  checked={docType.invoice} onChange={docHandle} name=\"invoice\" size=\"small\"/>} label=\"Invoice\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.ticket} onChange={docHandle} name=\"ticket\" size=\"small\"/>} label=\"Ticket\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.note} onChange={docHandle} name=\"note\" size=\"small\"/>} label=\"Note\" />\r\n\r\n            <Button onClick={submit} variant=\"contained\" sx={{my:2, width: '65%' }}>\r\n                Save\r\n            </Button>\r\n          </div>\r\n      </Box>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n/////////////////////////////////\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Input from '@mui/material/Input';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nexport default function Create() {\r\n    const [name, setName] = useState(\"\");\r\n    const [ruc, setRuc] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [credit, setCredit] = useState(\"\");\r\n    const [vendor, setVendor] = useState(\"\");\r\n    const [process, setProcess] = useState(\"prueba\");\r\n    const [paid, setPaid] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n    const [rePassword, setRePassword] = React.useState({\r\n        repassword: \"\",\r\n        showRePassword: false,\r\n    });\r\n    const [docType, setDocType] = useState({\r\n      invoice: true,\r\n      ticket: true,\r\n      note : true\r\n    })\r\n    const docHandle = (event) =>{\r\n      setDocType({\r\n        ...docType,\r\n        [event.target.name] : event.target.checked\r\n      })\r\n    }\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    // RePassword\r\n    const handleRePasswordChange = (prop) => (event) => {\r\n        setRePassword({ ...rePassword, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowRePassword = () => {\r\n        setRePassword({\r\n            ...rePassword,\r\n            showRePassword: !rePassword.showRePassword,\r\n        });\r\n    };\r\n\r\n    // Submit New User Information to database\r\n    const submit = async () => {\r\n        const password = values.password;\r\n        const repassword = rePassword.repassword;\r\n        if (!name) {\r\n            addToast(\"Please Enter Name\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!ruc) {\r\n            addToast(\"Please Enter Ruc\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!branch) {\r\n            addToast(\"Please Enter Id Sucursal\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!token) {\r\n            addToast(\"Please Enter Token\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!vendor) {\r\n            addToast(\"Please Enter Id Vendor\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!process) {\r\n            addToast(\"Please Enter Tipo Proceso\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!credit) {\r\n            addToast(\"Please Enter Credit\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!paid) {\r\n            addToast(\"Please Enter Paid\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (password !== repassword) {\r\n            addToast(\"Please Confirm Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if(!docType.invoice && !docType.ticket && !docType.note){\r\n          addToast('Please Check Doc Types' , {\r\n            appearance: \"error\",\r\n            autoDismiss : true\r\n          })\r\n          return;\r\n        }\r\n        const newUser = {\r\n            name,\r\n            ruc,\r\n            branch,\r\n            token,\r\n            email,\r\n            vendor,\r\n            process,\r\n            credit,\r\n            paid,\r\n            password,\r\n            docType\r\n        };\r\n        const resultRegister = await Axios.post(\"/users/register\", newUser);\r\n\r\n        // Register Success Case\r\n        if (resultRegister.data.status === 200) {\r\n            history.push(\"/admin\");\r\n        } else {\r\n            addToast(resultRegister.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n    const prevPage = () => {\r\n      history.push('/admin');\r\n  };\r\n    return (\r\n        <Box\r\n          component=\"form\"\r\n          sx={{ display: 'flex', flexWrap: 'wrap', p:3 }}\r\n          noValidate\r\n          autoComplete=\"on\"\r\n        >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n          </IconButton>\r\n          <div>\r\n          <InputLabel sx={{my:1, color: '#1976d2', fontWeight:'600'}} >New User</InputLabel>\r\n            <TextField\r\n              required\r\n              autoComplete=\"email\"\r\n              variant=\"standard\"\r\n              label=\"Name\"\r\n              focused\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{mb:1}}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Ruc\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ mr: 1,my:1, width: '60%' }}\r\n              value={ruc}\r\n              onChange={(e) => setRuc(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Id Sucursal\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n              sx={{ ml: 1,my:1, width: '35%' }}\r\n              value={branch}\r\n              onChange={(e) => setBranch(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Token\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              focused\r\n              fullWidth\r\n              sx={{my:1}}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              sx={{my:1}}\r\n              focused\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Vendor\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ my: 1,mr:1, width: '40%' }}\r\n              focused\r\n              value={vendor}\r\n              onChange={(e) => setVendor(e.target.value)}\r\n            />\r\n            <FormControl sx={{ my: 1,ml:1, width: '55%' }} size=\"small\" focused variant=\"standard\">\r\n              <InputLabel >Tipo Proceso</InputLabel>\r\n              <Select\r\n                value={process}\r\n                onChange={(e) => setProcess(e.target.value)}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value=\"prueba\">Prueba</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl sx={{my:1}} fullWidth variant=\"standard\" size=\"small\"  focused required>\r\n              <InputLabel >Password</InputLabel>\r\n              <Input\r\n\r\n                type={values.showPassword ? 'text' : 'password'}\r\n                value={values.password}\r\n                onChange={handleChange('password')}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff color='info' /> : <Visibility  color='info' />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          <FormControl sx={{my:1}} fullWidth variant=\"standard\" size=\"small\" focused>\r\n            <InputLabel>Confirm Password</InputLabel>\r\n            <Input\r\n              type={rePassword.showRePassword ? 'text' : 'password'}\r\n              value={rePassword.repassword}\r\n              onChange={handleRePasswordChange('repassword')}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowRePassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                    color='info'\r\n                  >\r\n                    {rePassword.showRePassword ? <VisibilityOff color='info' /> : <Visibility color='info' />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n          <TextField\r\n              label=\"Id Credit\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              sx={{ my: 1,mr:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={credit}\r\n              onChange={(e) => setCredit(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Paid\"\r\n              type=\"number\"\r\n              \r\n              variant=\"standard\"\r\n              sx={{ my: 1,ml:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={paid}\r\n              onChange={(e) => setPaid(e.target.value)}\r\n            />\r\n            <FormControlLabel  control={<Checkbox  checked={docType.invoice} onChange={docHandle} name=\"invoice\" size=\"small\"/>} label=\"Invoice\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.ticket} onChange={docHandle} name=\"ticket\" size=\"small\"/>} label=\"Ticket\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.note} onChange={docHandle} name=\"note\" size=\"small\"/>} label=\"Note\" />\r\n\r\n            <Button onClick={submit} variant=\"contained\" sx={{my:2, width: '65%' }}>\r\n                Save\r\n            </Button>\r\n            \r\n          </div>\r\n      </Box>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n import { useSelector } from \"react-redux\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport \"./index.css\";\r\n// import Check from '../../images/check.gif'\r\nimport Moment from \"react-moment\";\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import printJs from 'print-js'\r\n import { styled } from '@mui/material/styles';\r\n\r\n\r\nexport default function Confirm(props) {\r\n    const selInfo = useSelector(state => state.data);\r\n    const {id} = props.match.params;\r\n    const history = useHistory();\r\n    const { pdf, conf } = useContext(UserContext);\r\n    const [userInfo, setUserInfo] = useState({\r\n        name: \"\",\r\n        date: \"\",\r\n    });\r\n    // let customerId = useSelector((state) => state.email.customerId);\r\n\r\n    useEffect(() => {\r\n        if (navigator.share === undefined) {\r\n            if (window.location.protocol === 'http:') {\r\n              window.location.replace(window.location.href.replace(/^http:/, 'https:'));\r\n            } \r\n          }\r\n        if(pdf.toString() === ''){\r\n            history.push(\"/translist\");\r\n            return;\r\n        }else{\r\n            setUserInfo(selInfo)\r\n           \r\n        }\r\n        // Get customer information from \"customer\" table.\r\n       \r\n        return()=>{\r\n            setUserInfo({\r\n                name:\"\",\r\n                doc:\"\"\r\n            });\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const transList = () => {\r\n        history.push(\"/translist\");\r\n    };\r\n    // const print =async ()=>{\r\n    //     // let url = \"https://cors-anywhere.herokuapp.com/\"+pdf;\r\n    //     let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n    //  printJs({printable: url, type:'pdf', showModal:true})\r\n    // }\r\n    const print = ()=>{\r\n         let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n        sendUrlToPrint(url);\r\n    }\r\n    const sendUrlToPrint = (url)=>{\r\n        var  beforeUrl = 'intent:';\r\n        var  afterUrl = '#Intent;';\r\n        // Intent call with component\r\n        afterUrl += 'component=ru.a402d.rawbtprinter.activity.PrintDownloadActivity;'\r\n        afterUrl += 'package=ru.a402d.rawbtprinter;end;';\r\n        document.location=beforeUrl+encodeURI(pdf)+afterUrl;\r\n        return false;\r\n    }\r\n\r\n    \r\n    const share = async () => {\r\n        // let url = \"https://cors-anywhere.herokuapp.com/\"+pdf;\r\n        let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n      \r\n        let blob = await fetch(url).then(r => r.blob());\r\n            // here image is url/location of image\r\n            const file = new File([blob], `${userInfo[\"name\"]? userInfo[\"name\"] : 'Invited'}.pdf`, {type: blob.type});\r\n            if(navigator.share) {\r\n                await navigator.share({\r\n                title: \"Share\",\r\n                text: \"Hello sir.\",\r\n                url: window.location.href,\r\n                files: [file]\r\n                })\r\n                .then(() => console.log('Successful share'))\r\n                .catch((error) => console.log('Error in sharing', error));\r\n            }else {\r\n                window.alert(`system does not support sharing files.`);\r\n            }\r\n    }\r\n      const Img = styled('img')({\r\n        display:'block',\r\n        width: '55%',\r\n        maxWidth: '200px',\r\n        height: '50%',\r\n      });\r\n    return (\r\n        <div className=\"confirm\">\r\n            <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n            >\r\n                <Img src=\"/check.gif\" alt=\"CheckImage\" sx={{my:'auto'}}/>\r\n                \r\n               {/* <img src={Check} alt=\"checkImage\" className=\"check\" /> */}\r\n                <p className=\"username\">\r\n                    \r\n                    {userInfo.name}\r\n                </p>\r\n                <p className=\"p-amount\"><sup><sub>S/</sub></sup>{id}</p>\r\n                <Moment format=\"Do MMMM - HH:mm\">\r\n                            {userInfo.date}\r\n                        </Moment>\r\n               \r\n            </Grid>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                sx={{ padding: \"50px 40px\" }}\r\n            >\r\n                <IconButton aria-label=\"home\" onClick={transList}>\r\n                    <i  className=\"fas fa-home\"></i >\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\" onClick={share}>\r\n                    <i className=\"fas fa-share-alt\"></i>\r\n                </IconButton>\r\n                <IconButton aria-label=\"print\" onClick={print}>\r\n                    <i className=\"fas fa-print\"></i>\r\n                </IconButton>\r\n                \r\n                \r\n            </Grid>\r\n            <Button onClick={()=> {\r\n                if(conf)\r\n                    history.push('/customer')\r\n                else\r\n                    history.push(`/${userInfo[\"name\"] ? 'invoice' : 'invite'}`)\r\n                }} sx={{mt: 4}} variant=\"contained\" >Send Other</Button>\r\n        </div>\r\n    );\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\n//import { useSelector } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\n\r\nimport * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\nimport logoImg from \"../../images/fino.png\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n      position:'relative',\r\n  backgroundColor:'#fcfeffd6',\r\n  padding: theme.spacing(1),\r\n  textAlign: 'left',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst Img = styled('img')({\r\n      display:'block',\r\n      width:'30px',\r\n      heigth:'30px'\r\n    });\r\n\r\nexport default function Translist() {\r\n\r\n  const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [tranData, setTranData] = useState([]);\r\n    const { loginStatus, setLoginStatus, setConf, setPdf } = useContext(UserContext);\r\n    const [sellerId, setSellerId] = useState([]);\r\n //   const email = useSelector((state) => state.email.currentEmail);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n    const [openDialog, setDialogOpen] = React.useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (token === null) {\r\n              // history.push(\"/\");\r\n              // return;\r\n            }else{\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n              Axios.get(\"/users/getId/\" + userRes.data.email).then(async (response) => {\r\n                  setSellerId(response.data);\r\n                  if(!response.data.name){\r\n                    setDialogOpen(true)\r\n                  }\r\n                });\r\n                  Axios.get(\"/trans/all/\" + userRes.data.id).then(\r\n                    async (response) => {\r\n                        const currentDate = new Date();\r\n                        const curFormatDate = currentDate.toLocaleDateString('en-US', {\r\n                          hour12: false,\r\n                        });\r\n            \r\n                        var totalAmount = 0;\r\n                        for (var i = 0; i < response.data.length; i++) {\r\n                            const tranFormatDate = new Date(response.data[i].date)\r\n                                .toLocaleDateString('en-US', {\r\n                                  hour12: false,\r\n                                })\r\n                            if (curFormatDate === tranFormatDate) {\r\n                                totalAmount += response.data[i].amount;\r\n                            }\r\n                        }\r\n                        setTotalAmount(totalAmount);\r\n                        setTranData(response.data);\r\n                    }\r\n                );\r\n              }\r\n      };\r\n      checkLoggedIn();\r\n      return(()=>{\r\n        setTotalAmount(0);\r\n        setTranData([]);\r\n        setSellerId([])\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, []);\r\n   \r\n\r\n\r\n\r\n\r\n//Dialog Settings --------------------\r\n    const handleDialogClickOpen = () => {\r\n      setDialogOpen(true);\r\n    };\r\n    const handleDialogClose = () => {\r\n      setDialogOpen(false);\r\n    };\r\n// Dropmenu settings ----------------------------\r\n      const [anchorEl, setAnchorEl] = React.useState(null);\r\n      const open = Boolean(anchorEl);\r\n      const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n//----------------------------------------------------\r\n      const goCustomer = () => {\r\n        localStorage.removeItem('customerId')\r\n        history.push(\"/customer\");\r\n      };\r\n         \r\n      const logout = () => {\r\n        setLoginStatus({\r\n          token: undefined,\r\n          email: undefined,\r\n          customerId:''\r\n        });\r\n        localStorage.removeItem(\"auth-token\");\r\n        localStorage.removeItem(\"customerId\");\r\n        history.push(\"/\");\r\n        return;\r\n      };\r\n// Show transaction all ----------------------\r\n        const [showAll , setShowAll] = useState(false);\r\n        const setting = ()=>{\r\n            setShowAll(prev =>{\r\n                return !prev\r\n            })\r\n        }\r\n        const length = tranData.length;\r\n\r\n        const click = (amount, id, pdfLink, name, date)=>{\r\n          setConf(false);\r\n        //   const payload = {\r\n        //     email: email,\r\n        //     customerId: id,\r\n        // };\r\n        setPdf(pdfLink);\r\n          // dispatch(Actions.saveEmail(payload));\r\n          setLoginStatus({\r\n            ...loginStatus,\r\n            customerId: id\r\n          })\r\n          if(id){\r\n              localStorage.setItem(\"customerId\", id);\r\n          }\r\n          let sel ={\r\n            name: name,\r\n            date: date\r\n        }\r\n        dispatch(Actions.selData(sel));\r\n          history.push({\r\n            pathname: \"/confirm/\" + amount,\r\n        });\r\n        }\r\n  return (\r\n      <Grid\r\n      sx={{\r\n            height: '100vh',\r\n            color:'white'\r\n          }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"flex-start\"\r\n    >\r\n      <Grid item className=\"header\" container spacing={2} dirction=\"row\" justifyContent=\"space-between\" sx={{backgroundColor:\"#1a1938\", p:2}}>\r\n        <Grid item xs={2}\r\n  justifyContent=\"space-between\" container>\r\n            <Img src={logoImg} alt=\"logo\" sx={{my:'auto'}}/>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n            <Grid>\r\n            {sellerId[\"name\"] ? sellerId[\"name\"] : <Button variant=\"filled\" onClick={handleDialogClickOpen}>\r\n                        Please be a link\r\n                  </Button>}\r\n                  \r\n            </Grid>\r\n            <Grid>\r\n              {sellerId[\"ruc\"] ? `RUC: ${sellerId[\"ruc\"]}` : \"+51 943204360\"}\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={2} justifyContent=\"flex-end\" container>\r\n            <IconButton\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                  sx={{color:'white'}}\r\n            >\r\n                  <MoreVertIcon sx={{color:'white'}}/>\r\n            </IconButton>\r\n            <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                  }}\r\n            >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={logout}>Logout</MenuItem>\r\n            </Menu>          \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Item >\r\n                  <span>Today</span>\r\n                  <span style={{position:'absolute',right:'10px'}}>S/&nbsp;<span>{totalAmount.toFixed(2)}</span></span>\r\n            </Item >\r\n           \r\n        </Grid>\r\n      </Grid>\r\n      <Grid item className=\"body\" >\r\n      <Paper sx={{ overflow: 'hidden', width:'100%' }}>\r\n      <TableContainer sx={{ maxHeight: 'calc(100vh - 220px)' }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n          <TableRow>\r\n            <TableCell>Últimos Movimientos</TableCell>\r\n            <TableCell align=\"right\">\r\n              <Button  variant=\"text\"\r\n                    color=\"info\" onClick={setting} sx={{fontSize:'13px', p:0}}>Ver Todos</Button>\r\n            </TableCell>\r\n          </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {tranData.map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n              onClick={()=>click(row.amount, row.customerId, row.pdfLink, row.name, row.date)}\r\n              hover\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }, p:0 }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\" sx={{p:1}}>\r\n                <strong>{row[\"name\"]}</strong>\r\n                <p className=\"type\">\r\n                  {row[\"type\"]}&nbsp;::&nbsp;\r\n                  <Moment format=\"Do MMMM - HH:mm\">\r\n                    {row[\"date\"]}\r\n                  </Moment>\r\n                </p>\r\n              </TableCell>\r\n              <TableCell align=\"right\" >S/&nbsp;&nbsp;{row.amount}</TableCell>\r\n              \r\n            </TableRow>\r\n          )).reverse().slice(0, (showAll === true ? length : 8)) \r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n    </Paper>\r\n      </Grid>\r\n      <Grid item className=\"footer\" sx={{position:'fixed', bottom:'0px',width:'100%'}}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={goCustomer}\r\n                    color=\"info\"\r\n                    sx={{marginBottom:'10px', width:'60%'}}\r\n                    >\r\n                    SEND\r\n                </Button>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={sellerId[\"name\"]? false : openDialog}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        fullWidth\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle sx={{mx:'auto'}} color=\"primary\" >{\"Go to the pro version!!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText sx={{fontSize:'80%'}} id=\"alert-dialog-slide-description\">\r\n            Welcome to Fino: you are currently in a trial version. If you want to use the pro version, please contact our phone numbers: +51 943204360 or press the button bellow.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions sx={{mx:'auto'}}>\r\n          <Button sx={{p:1, fontSize:'70%', }} startIcon={<WhatsAppIcon color=\"white\" sx={{fontSize:'80px'}} fontSize=\"large\" />} color=\"success\" variant=\"contained\" onClick={()=>{window.open(\"https://api.whatsapp.com/send?phone=+51943204360&text=Hola,%20deseo%20soporte%20para%20integrar%20mi%20sistema%20a%20FINO.\");\r\n      }}>Contactar por WhatsApp</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport UserContext from \"../../context/UserContext\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n// import { useDispatch } from \"react-redux\";\r\n//\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n// import * as Actions from \"../../redux/action\";\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport {\r\n    SwipeableList,\r\n    SwipeableListItem,\r\n    SwipeAction,\r\n    TrailingActions,\r\n    Type as ListType\r\n  } from \"react-swipeable-list\";\r\n  import \"react-swipeable-list/dist/styles.css\";\r\n \r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 14,\r\n        width: \"100%\",\r\n        padding: \"12px 16px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n        \"&:focus\": {\r\n            borderColor: \"#FA4616\",\r\n            borderWidth: \"1px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Customer() {\r\n    // const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { loginStatus, setLoginStatus } = useContext(UserContext);\r\n    const { addToast } = useToasts();\r\n    const [totalCustomer, setTotalCustomer] = useState([]);\r\n    const [allCustomer, setAllCustomer] = useState([]);\r\n    const [customerInfo, setCustomerInfo] = useState({\r\n        sellerId: \"\",\r\n        name: \"\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n        docType: \"\"\r\n    });\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            localStorage.removeItem('customerId')\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (!token) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n\r\n            Axios.get(\"/users/getId/\" + userRes.data.email).then(async (response) => {\r\n                setCustomerInfo({\r\n                    ...customerInfo,\r\n                    \"sellerId\": response.data._id\r\n                });\r\n                setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n            });\r\n            Axios.get(\"/customers/all/\" + userRes.data.id).then(async (res) => {\r\n                setAllCustomer(res.data);\r\n                setTotalCustomer(res.data);\r\n            });\r\n      };\r\n    checkLoggedIn();\r\n\r\n    return()=>{\r\n        setCustomerInfo([]);\r\n        setAllCustomer([]);\r\n        setDocType({})\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n\r\n  \r\n    // When creating new customer.\r\n    \r\n    const saveCustomer = async () => {\r\n        if (!customerInfo[\"name\"]) {\r\n            addToast(\"Please enter name\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        if (!customerInfo[\"doc\"]) {\r\n            addToast(\"Please enter doc number\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        if (!customerInfo[\"direction\"]) {\r\n            addToast(\"Please enter direction\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n\r\n        const result = await Axios.post(\"/customers/create\", customerInfo);\r\n\r\n        // Register Success Case\r\n        if (result.data.status === 200) {\r\n            \r\n            setCustomerInfo({\r\n                ...customerInfo,\r\n                \"doc\": \"\",\r\n                \"name\": \"\",\r\n                \"direction\": \"\",\r\n            });\r\n            // setDoc('');\r\n            // setShow(false);\r\n            Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n                async (response) => {\r\n                    let aaa = response.data.pop();\r\n                    selectCustomer(aaa[\"id\"]);\r\n                }\r\n            );\r\n          //  selectCustomer(aaa.id);\r\n        } else {\r\n            addToast(result.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n\r\n \r\n    // When seller selects customer.\r\n    const selectCustomer = (id) => {\r\n        // Store current customer's ID to redux\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: id,\r\n        // };\r\n\r\n        Axios.get(\"/customers/get/\" + id).then(async (response) => {\r\n        if((!docType.ticket && !docType.note)&&(response.data[0].docType === 'dni')){\r\n            addToast(\"You can't invoice a DNI!!! Please link to admin.\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            setShow(false);\r\n            setDoc('');\r\n            setAllCustomer(totalCustomer);\r\n            // Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n            //     async (response) => {\r\n            //         setAllCustomer(response.data);\r\n            //     }\r\n            // );\r\n          }else{\r\n            // dispatch(Actions.saveEmail(payload));\r\n            setLoginStatus({\r\n                ...loginStatus,\r\n                customerId: id\r\n              })\r\n              \r\n              localStorage.setItem(\"customerId\", id);\r\n            history.push(\"/invoice\");\r\n          }\r\n      })\r\n\r\n}\r\n    // Go to previous page.\r\n    const prevPage = () => {\r\n        history.push('/translist');\r\n    };\r\n\r\n    const [doc, setDoc] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    // Search functionality\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        setDoc(e.target.value);\r\n        // if search work doesn't exist,\r\n        if (e.target.value) {\r\n            const searchKey = e.target.value.toString().toLowerCase();\r\n            let searchResult = [];\r\n            for (var i = 0; i < allCustomer.length; i++) {\r\n                if (\r\n                    allCustomer[i][\"name\"]\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchKey) ||\r\n                    allCustomer[i][\"doc\"]\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchKey)\r\n                ) {\r\n                    searchResult.push(allCustomer[i]);\r\n                }\r\n            }\r\n            setAllCustomer(searchResult);\r\n        } else {\r\n            setShow(false);\r\n            // Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n            //     async (response) => {\r\n            //         setAllCustomer(response.data);\r\n            //     }\r\n            // );\r\n            setAllCustomer(totalCustomer)\r\n            setCustomerInfo({\r\n                ...customerInfo,\r\n                \"doc\": '',\r\n                \"name\": '',\r\n                \"direction\": ''\r\n            })        }\r\n    };\r\n\r\n    const getCustomerFromAPI=()=>{\r\n        setText('');\r\n        setCustomerInfo({\r\n            ...customerInfo,\r\n            \"doc\": doc,\r\n            \"name\": \"\",\r\n            \"direction\": \"\",\r\n            docType: ''\r\n        });\r\n        setShow(true);\r\n       \r\n        if(doc.length === 8){\r\n            let url = \"https://facturalahoy.com/api/persona/\" + doc.toString() +'/facturalaya_evalles_orE26f69ngmqmqB';\r\n            fetch(url)\r\n                .then((res)=> {return res.json()})\r\n                .then((data)=> {\r\n                    if(data.respuesta === \"ok\"){\r\n                    setCustomerInfo({\r\n                        ...customerInfo,\r\n                        \"doc\": data.dni,\r\n                        \"name\": data.nombre,\r\n                        \"direction\":'',\r\n                        docType: 'dni'\r\n                    })\r\n                }else{\r\n                    addToast(\"Doc number is incorrect\", {\r\n                        appearance: \"info\",\r\n                        autoDismissTimeout: 2000,\r\n                        autoDismiss: true,\r\n                        placement: 'top-center'\r\n                    });\r\n                    setText(`RUC OR DNI, does not exist, type correctly.\r\n                    If it is another type of document, type manually.`);\r\n                }\r\n                })\r\n                .catch((err)=>{ console.log(err)});\r\n        }\r\n        else\r\n        {\r\n            if(doc.length === 11 ){\r\n                \r\n                let url = \"https://facturalahoy.com/api/empresa/\" + doc.toString() +'/facturalaya_evalles_orE26f69ngmqmqB';\r\n                fetch(url)\r\n                    .then((res)=> {return res.json()})\r\n                    .then((data)=> {\r\n                        if(data.respuesta === \"ok\"){\r\n                            setCustomerInfo({\r\n                                ...customerInfo,\r\n                                \"doc\": data.ruc,\r\n                                \"name\": data.razon_social,\r\n                                \"direction\": data.direccion.trim(),\r\n                                docType: 'ruc'\r\n                            })\r\n                        }\r\n                        else{\r\n                            addToast(\"Doc number is incorrect\", {\r\n                                appearance: \"info\",\r\n                                autoDismissTimeout: 2000,\r\n                                autoDismiss: true,\r\n                                placement: 'top-center'\r\n                            });\r\n                            setText(`RUC OR DNI, does not exist, type correctly.\r\n                            If it is another type of document, type manually.`);\r\n                        }\r\n                    })\r\n                    .catch((err)=>{ console.log(err)});\r\n            }\r\n            else{\r\n                addToast(\"Can't find doc number\", {\r\n                    appearance: \"info\",\r\n                    autoDismissTimeout: 2000,\r\n                    autoDismiss: true,\r\n                    placement: 'top-center'\r\n                });\r\n                setText(`RUC OR DNI, does not exist, type correctly.\r\n                If it is another type of document, type manually.`);\r\n            }\r\n        }\r\n        \r\n    }\r\n    // Create Invite Guest.\r\n    const inviteGuest = () => {\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: '',\r\n        // };\r\n        if(!docType.ticket && !docType.note){\r\n            addToast(\"Now You can't use DNI and Invite\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            // setShow(false);\r\n            // setDoc('');\r\n            // Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n            //     async (response) => {\r\n            //         setAllCustomer(response.data);\r\n            //     }\r\n            // );\r\n          }else{\r\n            // dispatch(Actions.saveEmail(payload));\r\n            localStorage.removeItem('customerId');\r\n            history.push(\"/invite\");\r\n          }\r\n    };\r\n   const [text, setText ] = useState('');\r\n    const handleDelete = (id) => () => {\r\n\r\n    Axios.delete(\"/customers/delete/\" + id).then((res) =>{\r\n         if(res.data.msg === \"success\"){\r\n            addToast(\"Deleted Successfully\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n         }else {\r\n            addToast(\"Sorry, Operation is failure\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n     })\r\n    }\r\n    \r\n  const [open, setOpen] = React.useState(false);\r\n  const [changeData, setChangeData] = useState({\r\n      id:'',\r\n      name: '',\r\n      direction : ''\r\n  });\r\n  const handleEdit = (id, name, direction) => () => {\r\n    setChangeData({\r\n        id: id,\r\n        name :  name,\r\n        direction : direction\r\n    })\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = async () =>{\r\n    const result = await Axios.put(\r\n        \"/customers/update\",\r\n        {id: changeData.id, name: changeData.name, direction: changeData.direction}\r\n      );\r\n    if(result.status === 200){\r\n        const newItems = allCustomer.map(item => {\r\n            if (changeData.id === item.id) {\r\n              return { ...item, name: changeData.name, direction : changeData.direction}\r\n            }\r\n            return item;\r\n          });\r\n          setAllCustomer(newItems);\r\n        handleClose();\r\n    }\r\n    else{\r\n        addToast(result.data.msg, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n    }\r\n  }\r\n   const trailingActions = (id, name, direction) => (\r\n    <TrailingActions sx={{overflow:'hidden'}}>\r\n      <SwipeAction  sx={{width:'10px'}} onClick={handleEdit(id, name, direction)}>\r\n          \r\n            <Button variant=\"text\" endIcon={<EditIcon  size=\"large\"/>}>\r\n            </Button>\r\n            \r\n      </SwipeAction>\r\n      <SwipeAction destructive={true} onClick={handleDelete(id)}>\r\n       \r\n      <Button variant=\"text\"  startIcon={<DeleteIcon size=\"large\" />}>\r\n            </Button>\r\n      </SwipeAction>\r\n    </TrailingActions>\r\n  );\r\n\r\n\r\n    return (\r\n            <Box sx={{ height:'100vh', backgroundColor:'#EDEDF5'}}>\r\n                <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                    <ClearIcon />\r\n                </IconButton>\r\n                <p style={{ letterSpacing: '3px', fontWeight:'500',paddingBottom:\"20px\", fontSize: '20px', color : \"#1976d2\", paddingTop:'40px'}}>CUSTOMERS</p>\r\n\r\n                    <Paper\r\n                        sx={{\r\n                            px:1,\r\n                            mx:1,\r\n                            mb:0,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            marginBottom: \"13px\",\r\n                            boxShadow: \"unset\",\r\n                            border: \"1px solid #f5f5f5\",\r\n                        }}\r\n                    >\r\n                        <InputBase\r\n                            sx={{ ml: 1, flex: 1 }}\r\n                            placeholder=\"Search Name or Doc in list\"\r\n                            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                            onChange={(e) => search(e)}\r\n                            value={doc}\r\n                        />\r\n                        <IconButton onClick={getCustomerFromAPI} sx={{ p: \"10px\" }} aria-label=\"search\">\r\n                            <SearchIcon  color=\"primary\"/>\r\n                        </IconButton>\r\n                    </Paper>\r\n\r\n                    {!show &&<Paper sx={{ overflow: 'hidden',  width:'100%',backgroundColor:'#EDEDF5',mt:\"0\", boxShadow:'0px 0px 0px 0px' }}>\r\n                        <TableContainer sx={{mx:'auto',width:'95%',Index:'0', maxHeight: 'calc(100vh - 225px)' }}>\r\n                            <Table aria-label=\"sticky table\">\r\n                            <TableBody>\r\n                            <SwipeableList sx={{p:0, m:0}} type={ListType.IOS}>\r\n                            {allCustomer.map((row, index) => (\r\n                                <SwipeableListItem\r\n                                key={index}\r\n                                //leadingActions={leadingActions()}\r\n                                trailingActions={trailingActions(row.id, row.name, row.direction)}\r\n                              >\r\n                                <TableCell \r\n                                onClick={() => selectCustomer(row.id)} key={index}\r\n                                 scope=\"row\" sx={{p:1,pl:1,mb:1, width:'100%', borderLeft:'3px solid grey'}}>\r\n                                    <strong>{row.name}</strong>\r\n                                    <p >\r\n                                    {row.doc}\r\n                                    </p>\r\n                                </TableCell>\r\n                                </SwipeableListItem>\r\n                            ))\r\n                            }</SwipeableList>\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Paper>}\r\n                    {show && (<div>\r\n                        <p style={{color:'#1976d2', fontSize:'14px', marginTop:'15px', padding: '0px 50px' }}>{text}</p>\r\n                        <Grid container direction=\"column\" >\r\n                            <BootstrapInput\r\n                                placeholder=\"Enter Name\"\r\n                                name=\"description\"\r\n                                sx={{ width: \"85%\",mx: 'auto'}}\r\n                                value={customerInfo[\"name\"]}\r\n                                onChange={(e) => {\r\n                                    setCustomerInfo({\r\n                                        ...customerInfo,\r\n                                        \"name\": e.target.value,\r\n                                    });\r\n                                }}\r\n                                disabled={text === '' ? true : false }\r\n                            />\r\n                        </Grid>\r\n                        <Grid container direction=\"column\" sx={{mt:2}}>\r\n                            <BootstrapInput\r\n                                placeholder=\"Enter Direction\"\r\n                                name=\"description\"\r\n                                sx={{ width: \"85%\", mx: 'auto'}}\r\n                                value={customerInfo[\"direction\"]}\r\n                                onChange={(e) => {\r\n                                    setCustomerInfo({\r\n                                        ...customerInfo,\r\n                                        \"direction\": e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ marginTop: \"40px\" }}\r\n                            onClick={saveCustomer}\r\n                            className=\"btn-action\"\r\n                        >\r\n                            Select\r\n                        </Button>\r\n                    </div>)}\r\n                    <Grid item className=\"footer\" sx={{position:'fixed', bottom:'0px',width:'100%'}}>\r\n                    {!show && <Button  variant=\"contained\"\r\n                    sx={{mb:2, width:'80%'}}\r\n                        onClick={inviteGuest}\r\n                       >\r\n                    INVITADO\r\n                </Button>}\r\n                     </Grid>\r\n                    <Dialog open={open} onClose={handleClose}>\r\n                        <DialogTitle>Edit Customer</DialogTitle>\r\n                        <DialogContent>\r\n                        {/* <DialogContentText>\r\n                            You can change or delete your customer.\r\n                        </DialogContentText> */}\r\n                        <TextField\r\n                            autoFocus\r\n                            focused\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value= {changeData.name}\r\n                            onChange = {e => setChangeData({...changeData, name : e.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"direction\"\r\n                            focused\r\n                            label=\"direction\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value = {changeData.direction}\r\n                            onChange = {e => setChangeData({...changeData ,direction : e.target.value})}\r\n                        />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button onClick={handleChange}>Change</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./index.css\";\r\nimport Slide from '../Invoice/Slide'\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//mui component\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import Button from '@mui/material/Button';\r\nimport SendApi from '../api/sendApi';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// Import Swiper styles\r\nimport 'swiper/swiper.min.css'\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport * as Actions from \"../../redux/action\";\r\n\r\nexport default function Invite() {\r\n    const dispatch = useDispatch();\r\n    const { setLoginStatus, setPdf , setConf} = useContext(UserContext);\r\n    const [invoiceInfo, setInvoiceInfo] = useState({\r\n        amount: \"\",\r\n        name: \"Invited\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n        sellerId: \"\",\r\n        customerId: \"\",\r\n        type: \"\",\r\n        pdfLink:\"\"\r\n    });\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    // let email = useSelector((state) => state.email.currentEmail);\r\n    // let email = loginStatus.email;\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (!token) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n            \r\n    \r\n              Axios.get(\"/users/getId/\" + userRes.data.email).then(\r\n                async (response) => {\r\n                  setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n                  setInvoiceInfo({\r\n                      ...invoiceInfo,\r\n                      \"sellerId\" : response.data._id\r\n                  })\r\n                if(response.data.docType[1] && !response.data.docType[2]){\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                        \"type\" : 'ticket',\r\n                        \"sellerId\": response.data._id,\r\n                    })\r\n                    \r\n                    setDocType({...docType, 'ticket' : false});\r\n                }\r\n        \r\n                if(!response.data.docType[1] && response.data.docType[2]){\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                        \"type\" : 'note',\r\n                        \"sellerId\": response.data._id,\r\n                    })\r\n                    setDocType({...docType, 'note' : false});\r\n                }\r\n                })\r\n\r\n          };\r\n          checkLoggedIn();    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const prevPage = () => {\r\n        history.push('/customer');\r\n    };\r\n    \r\n    const [slideCount, setSlideCount] = useState(2); \r\n\r\n    const increment = ()=>{\r\n        setSlideCount(prev=> prev +1)\r\n    }\r\n    \r\n    //get total\r\n    const dataInfo = useSelector(state => state.slide)\r\n    const [ middle, setMiddle] = useState([]);\r\n    \r\n    const collection = [];\r\n    \r\n    const sort = () =>{\r\n        for(let i = 0; i<slideCount-1 ; i++){\r\n             collection.push(middle.filter((el)=> {\r\n                return el.index === i ;\r\n            }).pop());\r\n        }\r\n    }\r\n    const [total, setTotal]=useState(0);\r\n    const getTotal=()=>{\r\n        let sum = 0;\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i] === undefined){\r\n\r\n            }else{\r\n                sum += collection[i].count * Number(collection[i].amount);\r\n            }\r\n        }\r\n        setTotal(sum.toFixed(2))\r\n    }\r\n    useEffect(()=>{\r\n        setMiddle(prev=> [...prev, dataInfo])\r\n    },[dataInfo])\r\n    useEffect(()=>{\r\n        sort();\r\n        getTotal()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [middle])\r\n    useEffect(()=>{\r\n        setInvoiceInfo({\r\n            ...invoiceInfo,\r\n            \"amount\" : total.toString()\r\n        });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[total])\r\n    const submit = (e) => {\r\n        if (!invoiceInfo[\"amount\"]) {\r\n            addToast(\"Please Enter Amount\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        // v9alidation()\r\n        sort()\r\n        if(collection[0] === undefined){\r\n            addToast(\"Please Enter Description\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i].count === 1 && collection[i].amount === '0'){\r\n\r\n            }else{\r\n                if(collection[i].description === ''){\r\n                    addToast(\"Please Enter Description\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n                 if(collection[i].amount === '0'){\r\n                    addToast(\"Please Enter amount\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n            }\r\n        }\r\n        if (!invoiceInfo[\"type\"]) {\r\n            addToast(\"Please Select Type\", {\r\n                appearance: \"info\",\r\n                autoDismiss: true,\r\n                autoDismissTimeout: 2000,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setPdf('http://example.com');\r\n        Axios.get(\"/users/get/\"+ invoiceInfo.sellerId).then((response)=>{\r\n            const postDetail = SendApi(collection, invoiceInfo, response.data);\r\n\r\n            getVals(postDetail, invoiceInfo.type);\r\n        })\r\n    };\r\n\r\n    async function getVals(detail, type){\r\n        \r\n        return await fetch(type === 'note' ? \"https://facturavirtual.pe/facturacion/api/procesar_nota_venta\": \"https://facturavirtual.pe/facturacion/api/procesar_venta\", detail)\r\n        .then((response)=>{\r\n                 return response.json()\r\n        })\r\n\r\n        .then((datas) => { \r\n               const gettingPdf = `https://facturavirtual.pe/sys_fe/download/downloadpdf/${datas.documento.id_contribuyente}/${datas.documento.id_tipodoc_electronico}/${datas.documento.serie_comprobante}/${datas.documento.numero_comprobante}/pdf/ticket/cpe.pdf`;\r\n            // const gettingPdf =datas.url_absoluta_ticket;\r\n              setPdf(gettingPdf.toString());\r\n              setInvoiceInfo({\r\n                  ...invoiceInfo,\r\n                  pdfLink : gettingPdf\r\n              })\r\n              let tmp_invoice = {...invoiceInfo,\"pdfLink\" : gettingPdf.toString()};\r\n              \r\n              Axios.post(\"/trans/create\", tmp_invoice).then(async (response) => {\r\n                if (response.data.status === 200) {\r\n                    setConf(true)\r\n                    const currentDate = new Date();\r\n                    const curFormatDate = currentDate;\r\n                    let sel ={\r\n                        name: 'Invited',\r\n                        date: curFormatDate\r\n                    }\r\n                    dispatch(Actions.selData(sel));\r\n                    history.push({\r\n                        pathname: \"/confirm/\" + invoiceInfo[\"amount\"],\r\n                    });\r\n                }\r\n            });\r\n              //return gettingPdf;\r\n        })\r\n        .catch((err)=>{ \r\n            addToast(\"En el ambiente de pruebas solo se permiten crear hasta 10 BOLETAS\", {\r\n            appearance: \"info\",\r\n            autoDismissTimeout: 2000,\r\n            autoDismiss: true,\r\n            placement: 'top-center'\r\n        });\r\n        setLoading(false);\r\n        return;})\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            setTotal();\r\n            collection.fill(null);\r\n            setMiddle(null);\r\n            setSlideCount(2);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return (\r\n        <Box sx={{ \r\n            flexGrow: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor : 'white'\r\n        }}>\r\n            \r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n\r\n    <Grid container direction=\"column\" sx={{mt:8}} justifyContent=\"space-between\" alignItems=\"center\" >\r\n        <Grid item>\r\n            <p className=\"doc\">Invited</p>\r\n        </Grid>\r\n        <Grid sx={{width: '100%', mt:1}} item>\r\n            <Swiper\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                onReachEnd = {()=>increment()}\r\n            >\r\n\r\n                {\r\n                    (new Array(slideCount).fill(null).map((_, i)=>(\r\n                        <SwiperSlide  key={i}><Slide index={i}/></SwiperSlide>\r\n                    )))\r\n                }\r\n\r\n            </Swiper>\r\n        </Grid>\r\n\r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                sx={{\r\n                    pl:2\r\n                }}\r\n            >\r\n                \r\n                {docType.ticket && <FormControlLabel name=\"type\" value=\"ticket\" control={<Radio size=\"small\" />} label=\"Ticket\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.note && <FormControlLabel name=\"type\" value=\"note\" control={<Radio size=\"small\" />} label=\"Note\" onChange={(e) =>\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                         [e.target.name]: e.target.value,\r\n                    })\r\n                        }/>}        \r\n            </RadioGroup>\r\n        </Grid>\r\n\r\n        <Grid item sx={{\r\n            mt:4\r\n        }}>\r\n            <p className=\"total\">Total S/{total}</p>\r\n        </Grid>\r\n        <Grid item sx={{\r\n            width: '60%',\r\n            mt:1\r\n        }}>\r\n            <LoadingButton\r\n          onClick={submit}\r\n          endIcon={<SendIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n        >\r\n          { invoiceInfo.type === '' ? 'Send' : invoiceInfo.type.toUpperCase() }\r\n        </LoadingButton> \r\n        </Grid>\r\n    </Grid>\r\n    </Box>\r\n\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, HashRouter as Router } from \"react-router-dom\";\r\n\r\n// import Axios from 'axios'\r\nimport {\r\n  Home,\r\n  Login,\r\n  Register,\r\n  Invoice,\r\n  Admin,\r\n  Edit,\r\n  Create,\r\n  Confirm,\r\n  TransList,\r\n  Customer,\r\n  Invite,\r\n} from \"../pages\";\r\n//import { PageTransition } from \"@steveeeie/react-page-transition\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n// import { useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function Index() {\r\n  const [loginStatus, setLoginStatus] = useState({\r\n    token: undefined,\r\n    email: undefined,\r\n    customerId:''\r\n  });\r\n  const [pdf, setPdf] = useState('');\r\n  const [conf, setConf] = useState(true);\r\n  // const history = useHistory();\r\n  \r\n  // useEffect(() => {\r\n  //   const checkLoggedIn = async () => {\r\n  //     let token = localStorage.getItem(\"auth-token\");\r\n  //     if (token) {\r\n\r\n  //       await Axios.get(\"/users/\", {\r\n  //           headers: { \"x-auth-token\": token },\r\n  //         })\r\n  //         .then(userRes=>{\r\n  //           setLoginStatus({\r\n  //             token,\r\n  //             email: userRes.email,\r\n  //             customerId:''\r\n  //           });\r\n  //         })\r\n  //         .catch(err => {\r\n  //         history.push('/');\r\n  //         })\r\n  //     }\r\n  //   };\r\n\r\n  //   checkLoggedIn();\r\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={{ loginStatus, setLoginStatus, pdf, setPdf, conf, setConf }}>\r\n        <ToastProvider>\r\n          {/* <Route\r\n            render={({ location }) => {\r\n              return (\r\n                <PageTransition\r\n                  preset=\"moveToLeftFromRight\"\r\n                  transitionKey={location.pathname}\r\n                > */}\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={Home}></Route>\r\n                    <Route exact path=\"/login\" component={Login}></Route>\r\n                    <Route exact path=\"/register\" component={Register}></Route>\r\n                    <Route exact path=\"/invoice\" component={Invoice}></Route>\r\n                    <Route exact path=\"/admin\" component={Admin}></Route>\r\n                    <Route exact path=\"/admin/edit/:id\" component={Edit}></Route>\r\n                    <Route exact path=\"/admin/new\" component={Create}></Route>\r\n                    <Route exact path=\"/confirm/:id\" component={Confirm}></Route>\r\n                    <Route exact path=\"/translist\" component={TransList}></Route>\r\n                    <Route exact path=\"/customer\" component={Customer}></Route>\r\n                    <Route exact path=\"/invite\" component={Invite}></Route>\r\n                  </Switch>\r\n                {/* </PageTransition>\r\n              );\r\n            }}\r\n          /> */}\r\n        </ToastProvider>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = {\r\n  currentEmail: \"\",\r\n  customerId: \"\",\r\n};\r\nexport const emailReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_EMAIL:\r\n      var newState = {\r\n        ...state,\r\n        currentEmail: action.payload.email,\r\n        customerId: action.payload.customerId,\r\n      };\r\n\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = {\r\n};\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SEL_DATA:\r\n            return  action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = { };\r\nexport const slideReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.SLIDE_DATA:\r\n            return  action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { emailReducer } from \"./reducers/emailReducer\";\r\nimport { dataReducer } from \"./reducers/dataReducer\";\r\nimport { slideReducer } from \"./reducers/slideReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    email: emailReducer,\r\n    data: dataReducer,\r\n    slide: slideReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst enhancer = composeWithDevTools(applyMiddleware(ReduxThunk));\r\nexport const store = () => {\r\n    const store = createStore(rootReducer, enhancer);\r\n    return store;\r\n};\r\nexport default store;\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store\";\n\nfunction App() {\n  const store = configureStore();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}