{"version":3,"sources":["context/UserContext.js","pages/Login/index.js","redux/types.js","redux/action.js","pages/Register/index.js","images/fino.png","pages/Home/index.js","pages/Invoice/Slide.js","pages/api/sendApi.js","pages/Invoice/index.js","pages/Admin/index.js","pages/Admin/Edit/index.js","pages/Admin/Create/index.js","pages/Confirm/index.js","pages/TransList/index.js","pages/Customer/index.js","pages/Invite/index.js","routes/index.js","redux/reducers/emailReducer.js","redux/reducers/dataReducer.js","redux/reducers/slideReducer.js","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["createContext","isLoggedIn","userId","token","login","logout","BootstrapInput","styled","InputBase","theme","marginTop","spacing","position","backgroundColor","border","borderRadius","width","padding","transition","transitions","create","Login","prop","addToast","useToasts","setLoginStatus","useContext","UserContext","history","useHistory","useState","email","setEmail","React","password","showPassword","values","setValues","a","push","appearance","autoDismiss","loginUser","Axios","post","loginRes","data","status","msg","customerId","localStorage","setItem","Box","sx","height","IconButton","color","aria-label","onClick","top","right","className","placeholder","my","mt","value","onChange","e","target","marginBottom","type","event","label","Button","p","variant","Typography","SAVE_EMAIL","SEL_DATA","SLIDE_DATA","slideData","val","types","payload","Register","dispatch","useDispatch","repassword","showRePassword","rePassword","setRePassword","submit","newUser","resultRegister","handleRePasswordChange","style","BoxSx","Grid","container","direction","justifyContent","alignItems","px","pt","item","src","logoImg","alt","textAlign","ButtonGroup","orientation","Slide","props","setWidth","amount","setAmount","setPlaceholder","count","setCount","description","setDescription","useEffect","slice","charCodeAt","prev","Number","toFixed","toString","length","includes","index","Actions","mx","TextField","InputProps","inputProps","fullWidth","focused","SendApi","collection","invoiceInfo","response","date","Date","vendor","process","doc","name","branch","getDate","getMonth","getFullYear","map","el","detalle","method","headers","body","JSON","stringify","Invoice","setPdf","setConf","sellerId","pdfLink","setInvoiceInfo","loading","setLoading","dni","setDni","invoice","ticket","note","docType","setDocType","alter","setAlter","getItem","get","userRes","temp","then","res","_id","checkLoggedIn","slideCount","setSlideCount","dataInfo","useSelector","state","slide","middle","setMiddle","sort","i","filter","pop","total","setTotal","sum","undefined","getTotal","console","log","active_status","autoDismissTimeout","placement","removeItem","getVals","detail","fetch","json","datas","gettingPdf","url_absoluta_ticket","tmp_invoice","aaa","pathname","catch","err","fill","flexGrow","spaceBetween","slidesPerView","onReachEnd","Array","_","RadioGroup","row","aria-labelledby","pl","FormControlLabel","control","Radio","size","LoadingButton","endIcon","loadingPosition","toUpperCase","Admin","users","setUsers","user","id","ruc","credit","paid","open","setOpen","handleClose","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","prevUsers","delete","del_id","userSize","Object","keys","remove","autoFocus","Edit","useParams","setName","setRuc","setBranch","setToken","setCredit","setVendor","setProcess","setPaid","docHandle","checked","put","component","display","flexWrap","noValidate","autoComplete","InputLabel","fontWeight","required","mb","mr","ml","FormControl","Select","MenuItem","Checkbox","Create","handleMouseDownPassword","preventDefault","Input","endAdornment","InputAdornment","onMouseDown","edge","Confirm","match","params","loginStatus","pdf","conf","userInfo","setUserInfo","navigator","share","window","location","protocol","replace","href","curFormatDate","sendUrlToPrint","url","document","encodeURI","afterUrl","encodeURIComponent","r","blob","file","File","title","text","files","error","alert","Img","maxWidth","format","Transition","forwardRef","ref","Item","Paper","palette","secondary","heigth","Translist","tranData","setTranData","setSellerId","totalAmount","setTotalAmount","openDialog","setDialogOpen","currentDate","toISOString","tranFormatDate","anchorEl","setAnchorEl","Boolean","showAll","setShowAll","dirction","xs","aria-controls","aria-haspopup","aria-expanded","currentTarget","Menu","MenuListProps","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","fontSize","TableBody","hover","scope","reverse","bottom","TransitionComponent","keepMounted","startIcon","borderColor","borderWidth","Customer","allCustomer","setAllCustomer","customerInfo","setCustomerInfo","saveCustomer","result","selectCustomer","setShow","setDoc","show","setText","handleDelete","changeData","setChangeData","handleEdit","handleChange","newItems","letterSpacing","paddingBottom","paddingTop","boxShadow","flex","searchKey","toLowerCase","searchResult","search","respuesta","nombre","razon_social","direccion","trim","Index","m","ListType","IOS","trailingActions","destructive","borderLeft","disabled","margin","Invite","Provider","exact","path","Home","TransList","initialState","currentEmail","currentData","rootReducer","combineReducers","action","newState","enhancer","composeWithDevTools","applyMiddleware","ReduxThunk","store","createStore","App","configureStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fafa01c2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport default createContext({\r\n      isLoggedIn: false,\r\n      userId: null,\r\n      token: null,\r\n      login: () => {},\r\n      logout: () => {}\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Axios from \"axios\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport Box from '@mui/material/Box';\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid #D9D9D6\",\r\n        borderRadius:'10px',\r\n        width: \"100%\",\r\n        padding: \"10px 15px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Login() {\r\n    // const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const { setLoginStatus } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const login = async () => {\r\n        const password = values.password;\r\n\r\n        // Store current user's email to redux\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: \"\",\r\n        // };\r\n       \r\n\r\n        // When user is super admin, redirect to admin page.\r\n        if (email === \"superadmin\" && password === \"superadmin\") {\r\n            history.push(\"/admin\");\r\n            return;\r\n        }\r\n\r\n        if (!email) {\r\n            addToast(\"Ingrese su E-mail\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!password) {\r\n            addToast(\"Please Enter Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const loginUser = { email, password };\r\n        const loginRes = await Axios.post(\"/users/login\", loginUser);\r\n\r\n        if (loginRes.data.status === \"No User\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (loginRes.data.status === \"Wrong Password\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (loginRes.data.status === \"No Active\") {\r\n            addToast(loginRes.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        // If login is success.\r\n        // if (loginRes.data.status === \"Success\") {\r\n            \r\n            setLoginStatus({\r\n                token: loginRes.data.token,\r\n                email: loginRes.data.email,\r\n                customerId: ''\r\n              });\r\n              localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            // dispatch(Actions.saveEmail(payload));\r\n            history.push(\"/translist\");\r\n        // }\r\n    };\r\n    const prevPage = () => {\r\n        history.push('/');\r\n    };\r\n    return (\r\n        <Box\r\n          sx={{\r\n            height: '100vh',\r\n            backgroundColor: '#1a1938',\r\n          }}\r\n    >\r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n            <div className=\"reg-item\">\r\n                \r\n            <p className=\"title\">Sign In</p>\r\n                <BootstrapInput\r\n                    placeholder=\"Email\"\r\n                    sx={{ width: \"90%\", my:'14px', mt:'25px'}}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <BootstrapInput\r\n                    placeholder=\"Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    label=\"Password\"\r\n                />\r\n                 <div className=\"bt-home\">   \r\n                    <Button sx={{backgroundColor:'transparent', width:'70%', color: '#0dcaf0',p:2, mt:'20%'}} color=\"primary\" variant=\"filled\" onClick={login}>\r\n                     L O G I N\r\n                    </Button>\r\n                    <Typography variant=\"subtitle2\" >\r\n                       Olvidaste la contraseña?\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n","export const SAVE_EMAIL = \"SAVE_EMAIL\";\r\nexport const SEL_DATA = \"SEL_DATA\";\r\n\r\nexport const SLIDE_DATA = \"SLIDE_DATA\"","import * as types from \"./types\";\r\n\r\nexport const saveEmail = (val) => {\r\n    return {\r\n        type: types.SAVE_EMAIL,\r\n        payload: val,\r\n    };\r\n};\r\n\r\nexport const selData = (val) => {\r\n    return {\r\n        type: types.SEL_DATA,\r\n        payload: val,\r\n    };\r\n};\r\n\r\nexport const slideData = (val) =>{\r\n    return {\r\n        type: types.SLIDE_DATA,\r\n        payload : val\r\n    }\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\n// import InputAdornment from \"@mui/material/InputAdornment\";\r\n// import OutlinedInput from \"@mui/material/OutlinedInput\";\r\n// import InputLabel from \"@mui/material/InputLabel\";\r\n// import FormControl from \"@mui/material/FormControl\";\r\n// import Visibility from \"@mui/icons-material/Visibility\";\r\n// import VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        borderRadius:'10px',\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid #D9D9D6\",\r\n        padding: \"12px 16px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n    },\r\n}));\r\n\r\nexport default function Register() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n    const [rePassword, setRePassword] = React.useState({\r\n        repassword: \"\",\r\n        showRePassword: false,\r\n    });\r\n    const { addToast } = useToasts();\r\n    const { setLoginStatus } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    // const handleClickShowPassword = () => {\r\n    //     setValues({\r\n    //         ...values,\r\n    //         showPassword: !values.showPassword,\r\n    //     });\r\n    // };\r\n\r\n    // const handleMouseDownPassword = (event) => {\r\n    //     event.preventDefault();\r\n    // };\r\n    // RePassword\r\n    const handleRePasswordChange = (prop) => (event) => {\r\n        setRePassword({ ...rePassword, [prop]: event.target.value });\r\n    };\r\n\r\n    // const handleClickShowRePassword = () => {\r\n    //     setRePassword({\r\n    //         ...rePassword,\r\n    //         showRePassword: !rePassword.showRePassword,\r\n    //     });\r\n    // };\r\n\r\n    // Submit New User Information to database\r\n    const submit = async () => {\r\n        const password = values.password;\r\n        const repassword = rePassword.repassword;\r\n\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (password !== repassword) {\r\n            addToast(\"Please Confirm Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newUser = {\r\n            email,\r\n            password,\r\n        };\r\n        const resultRegister = await Axios.post(\"/users/register\", newUser);\r\n\r\n        // Register Success Case\r\n        if (resultRegister.data.status === 200) {\r\n            setLoginStatus(true);\r\n\r\n            // Store current user's email to redux\r\n            const payload = {\r\n                email: email,\r\n                customerId: \"\",\r\n            };\r\n            dispatch(Actions.saveEmail(payload));\r\n            history.push(\"/login\");\r\n        } else {\r\n            addToast(resultRegister.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n    \r\n    const prevPage = () => {\r\n        history.push('/');\r\n    };\r\n    return (<Box\r\n        sx={{\r\n          height: '100vh',\r\n          backgroundColor: '#1a1938',\r\n        }}\r\n      >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n            <div className=\"top-bar\"></div>\r\n            \r\n            <div className=\"reg-item\">\r\n                \r\n            <p className=\"title\">Sign up</p>\r\n                <BootstrapInput\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    sx={{ width: \"90%\", my: \"14px\", mt:'25px' }}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n               \r\n                <BootstrapInput\r\n                    placeholder=\"Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    label=\"Password\"\r\n                />\r\n                <BootstrapInput\r\n                    placeholder=\"Confirm Password\"\r\n                    sx={{ width: \"90%\", marginBottom: \"14px\" }}\r\n                    type={rePassword.showRePassword ? \"text\" : \"password\"}\r\n                    value={rePassword.repassword}\r\n                    onChange={handleRePasswordChange(\"repassword\")}\r\n                    label=\"Password\"\r\n                />\r\n                <div className=\"bt-home\" style={{marginTop:'40px'}}>   \r\n                <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:3,width:'70%'}} color=\"primary\" variant=\"filled\" onClick={submit}>\r\n                    R e g i s t e r\r\n                </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fino.51ff789f.png\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport logoImg from \"../../images/fino.png\";\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function BoxSx() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    \r\n    <Box\r\n      sx={{\r\n        height: '100vh',\r\n        backgroundColor: '#1a1938',\r\n      }}\r\n    >\r\n      <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            px:3,\r\n            pt: 10\r\n          }}\r\n      >\r\n        <Grid item>\r\n          <img src={logoImg} alt=\"logo\" width=\"130px\" />\r\n        </Grid>\r\n        <Grid item sx={{mt:2}}>\r\n          <Typography variant=\"h4\" sx={{textAlign: 'center', color: '#fff'}}>\r\n            Bienvenido a Fino\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" style={{textAlign: 'center', color: \"#ffffff6e\" }}>\r\n            Emite tus facturas y boletas de una manera fácil, rápida y segura usando tú teléfono. \r\n          </Typography>\r\n        </Grid>\r\n        <Grid item sx={{ mt: 1, width: '100%'}}>\r\n          <ButtonGroup\r\n              orientation=\"vertical\"\r\n              aria-label=\"vertical contained button group\"\r\n              sx={{width:'80%'}}\r\n          >\r\n            <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:2}} color=\"primary\" variant=\"contained\"   onClick={()=> history.push('/register')}>R e g i s t e r</Button>\r\n            <Button sx={{backgroundColor:'transparent', color: '#0dcaf0',p:2}} color=\"primary\" variant=\"contained\"  onClick={()=> history.push('/login')}>L o g i n</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport RemoveSharpIcon from '@mui/icons-material/RemoveSharp';\r\nimport AddSharpIcon from '@mui/icons-material/AddSharp';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as Actions from \"../../redux/action\";\r\nimport React, { useEffect, useState } from 'react'\r\n \r\n export default function Slide(props) {\r\n      const dispatch = useDispatch();\r\n      const [width, setWidth] =useState(0);\r\n      const [amount,setAmount] = useState('0');\r\n      const [placeholder, setPlaceholder] = useState(0);\r\n      const [count, setCount] = useState(1);\r\n      const [description, setDescription] = useState(\"\");\r\n\r\n      const changeHandler = (e) =>{ \r\n            e.preventDefault();\r\n            const rgx = /^[0-9]*(\\.\\d{0,2})?$/;\r\n            const result = e.target.value.toString().match(rgx);\r\n            \r\n            if(result && result[0] <= 99999.99){\r\n                setAmount(prev => result ? e.target.value : prev);\r\n\r\n                if(e.target.value.slice(0,1)=== '0'){\r\n                    if(e.target.value.slice(0,2) === '0.')\r\n                    {\r\n                    }else{\r\n                        let temp =e.target.value.slice(1);\r\n                        setAmount(temp);\r\n                    }\r\n                }\r\n            }\r\n            \r\n      }\r\n     useEffect(() => {\r\n        if(amount ===''){\r\n            setAmount('0')\r\n        }\r\n        if(amount.slice(0).charCodeAt(0) === 46){\r\n            setAmount(prev => Number(prev).toFixed(2))\r\n        }\r\n        setWidth(4    +amount.toString().length*1.3);\r\n        setPlaceholder(amount);\r\n        if(amount.toString().includes('.')){\r\n            setPlaceholder(prev => Number(prev).toFixed(2))\r\n        }\r\n     },[amount])\r\n\r\n     const increase = ()=>{\r\n        setCount(prev => prev+1);\r\n    }     \r\n    const decrease = ()=>{\r\n        setCount(prev => {\r\n            if(prev >=2){\r\n                return prev-1;\r\n            }\r\n            else{\r\n                return prev\r\n            }\r\n        });\r\n        \r\n    }\r\n    const index = props.index;\r\n    useEffect(()=>{\r\n\r\n        const ss = {index, count, amount, description};\r\n        dispatch(Actions.slideData(ss));\r\n\r\n        return ()=>{\r\n            const ss = {index : 0, count : 1, amount:'', description: ''}\r\n            dispatch(Actions.slideData(ss))\r\n        }\r\n    },[amount, count, dispatch, index, description]);\r\n\r\n    \r\n   return (\r\n     \r\n<Grid container direction=\"column\" justifyContent=\" space-between\" alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n                <IconButton aria-label=\"minus\" sx={{mx: 3}} onClick={decrease}>\r\n                    <RemoveSharpIcon color=\"primary\" />\r\n                </IconButton>\r\n                <span className=\"count\">{count}</span>\r\n                <IconButton aria-label=\"plus\" sx={{mx: 3}} onClick={increase}>\r\n                    <AddSharpIcon color=\"primary\" />\r\n                </IconButton>\r\n            </Grid>\r\n            {/* <Grid item className=\"compose\" placeholder = {amount? placeholder : 0}>\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    id=\"filled-start-adornment\" \r\n                    sx={{ m: 1,pl:0, width: width+ \"em\", maxWidth : '100%'}}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\"><p className='adorment'>S/</p></InputAdornment>,\r\n                        disableUnderline: true,\r\n                        style: { fontSize: 58 }\r\n                    }}\r\n                    type=\"number\"\r\n                    onChange={changeHandler}\r\n                    value={amount}\r\n                />\r\n            </Grid> */}\r\n            <Grid item sx={{\r\n                width:\"90%\"\r\n            }}>\r\n                <TextField \r\n                    placeholder=\"Description\"\r\n                    variant=\"standard\"\r\n                    InputProps={{\r\n                        inputProps: {\r\n                            style: { textAlign: \"center\" },\r\n                        }\r\n                    }}\r\n                    onChange = {(e)=> setDescription(e.target.value)}\r\n                    fullWidth\r\n                    focused\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n   )\r\n }\r\n \r\n","\r\nconst SendApi = (collection, invoiceInfo, response) => {\r\n\r\n      const date = new Date();\r\n      const isdni = () => {\r\n            if(invoiceInfo.doc.length === 8){\r\n                  return 1;\r\n             }\r\n             if(invoiceInfo.doc.length === 11){\r\n                  return 6;\r\n            }\r\n            return 0;\r\n      }\r\n      const type=()=>{\r\n         if(invoiceInfo.type === 'invoice'){\r\n            return '01';\r\n         }\r\n         if(invoiceInfo.type === 'ticket'){\r\n            return '03';\r\n         }\r\n         if(invoiceInfo.type === 'note'){\r\n            return '77';\r\n         }\r\n      }\r\n      const data = \r\n      {\r\n          \"contribuyente\":{\r\n             \"token_contribuyente\": response.token? response.token: \"SC4H9H0U2TXE1NYU4P0KRJIETM2QZ1MMYMM9X\",// token is very important.\r\n             \"id_usuario_vendedor\": response.vendor ? response.vendor : 0 , // default 0\r\n             \"tipo_proceso\": response.process ? response.process : 'prueba', //default prueba.\r\n             \"tipo_envio\":\"inmediato\"\r\n          },\r\n          \"cliente\":{\r\n             \"tipo_docidentidad\": isdni(), // 1: dni, 6: ruc, another is 0.\r\n             \"numerodocumento\": invoiceInfo.doc, //\r\n             \"nombre\":  invoiceInfo.name, //\r\n             \"email\":\"\",\r\n             \"direccion\": invoiceInfo.direction, //\r\n             \"ubigeo\":\"\",\r\n             \"sexo\":\"\",\r\n             \"fecha_nac\":\"\",\r\n             \"celular\":\"\"\r\n          },\r\n          \"cabecera_comprobante\":{\r\n             \"tipo_documento\": type(), // 01: invoice or 03: ticket or 77: note\r\n             \"moneda\":\"PEN\",\r\n             \"idsucursal\": response.branch ? response.branch : 23, // default 23.\r\n             \"id_condicionpago\":\"0\",\r\n             \"fecha_comprobante\": `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`,\r\n             \"nro_placa\":\"\",\r\n             \"nro_orden\":\"\",\r\n             \"guia_remision\":\"\",\r\n             \"descuento_monto\":0,\r\n             \"observacion\":\"\",\r\n             \"descuento_porcentaje\": \"\"\r\n          },\r\n          \"detalle\":[\r\n            //  {\r\n            //     \"idproducto\":0,\r\n            //     \"codigo\":\"TV_CODIGOPROD\",\r\n            //     \"afecto_icbper\":\"no\",\r\n            //     \"id_tipoafectacionigv\":10,\r\n            //     \"descripcion\":\"Product 01\", //\r\n            //     \"idunidadmedida\":\"NIU\",\r\n            //     \"precio_venta\":500, //\r\n            //     \"cantidad\":2 //\r\n            //  },\r\n          ]\r\n      }\r\n      // eslint-disable-next-line array-callback-return\r\n      collection.map((el, index)=>{\r\n         if(el.index === index){\r\n            // eslint-disable-next-line no-mixed-operators\r\n            if((el.count === 1) && (el.amount === '0') || (el.amount === '')){\r\n            \t//don't include\r\n            }else{\r\n               data.detalle.push({\r\n                  \"idproducto\":0,\r\n                  \"codigo\":\"000\",\r\n                  \"afecto_icbper\":\"no\",\r\n                  \"id_tipoafectacionigv\":10,\r\n                  \"descripcion\" : el.description,\r\n                  \"idunidadmedida\":\"NIU\",\r\n                  \"precio_venta\" : el.amount,\r\n                  \"cantidad\": el.count\r\n            })\r\n            }\r\n            \r\n         }\r\n      })\r\n\r\n      const postDetail = {\r\n         method: 'POST',\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(data)\r\n      }\r\n      return postDetail;\r\n}\r\n\r\nexport default SendApi;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./index.css\";\r\nimport Slide from './Slide'\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n//mui component\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Button from '@mui/material/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.min.css'\r\nimport SendApi from '../api/sendApi';\r\n\r\n\r\nexport default function Invoice() {\r\n    const { setPdf, setConf, setLoginStatus } = useContext(UserContext);\r\n    const [invoiceInfo, setInvoiceInfo] = useState({\r\n        amount: \"\",\r\n        name: \"\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n        sellerId: \"\",\r\n        customerId: \"\",\r\n        type: \"\",\r\n        pdfLink:\"\"\r\n    });\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [dni, setDni] = useState(false);\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n    const [alter, setAlter] = useState(false);\r\n    //  let email = useSelector((state) => state.email.currentEmail);\r\n\r\n       // let customerId = useSelector((state) => state.email.customerId);\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            let customerId = localStorage.getItem('customerId');\r\n            if (!token && !customerId) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId: customerId\r\n              });\r\n            \r\n    \r\n              setPdf('');\r\n        // Get customer information from \"customer\" table.\r\n        const temp={};\r\n        Axios.get(\"/customers/get/\" + customerId).then(async (res) => {\r\n            temp.name = res.data[0].name;\r\n            temp.doc = res.data[0].doc;\r\n            temp.customerId = res.data[0]._id\r\n            temp.direction = res.data[0].direction\r\n            temp.sellerId = res.data[0].sellerId\r\n            temp.pdfLink=\"\"\r\n            if(res.data[0].doc.length === 8){\r\n              \r\n                setDni(true);\r\n            }\r\n        });\r\n        Axios.get(\"/users/getId/\" + userRes.data.email).then(\r\n      async (response) => {\r\n        setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n        temp.type = '';\r\n        if(response.data.docType[0] && !response.data.docType[1] && !response.data.docType[2]){\r\n            temp.type = 'invoice';\r\n            setDocType({...docType, 'invoice' : false});\r\n        }\r\n\r\n        if(!response.data.docType[0] && response.data.docType[1] && !response.data.docType[2]){ \r\n            temp.type = 'ticket';\r\n            setDocType({...docType, 'ticket' : false});\r\n        }\r\n\r\n        if(!response.data.docType[0] && !response.data.docType[1] && response.data.docType[2]){\r\n            temp.type = 'note';\r\n            setDocType({...docType, 'note' : false});\r\n        }\r\n\r\n        if(response.data.docType[0] && (response.data.docType[1] && !response.data.docType[2])){\r\n            setAlter(true);\r\n            if(temp.doc.length === 8){\r\n                temp.type = 'ticket'\r\n            }\r\n        }\r\n\r\n        if(response.data.docType[0] && (!response.data.docType[1] && response.data.docType[2])){\r\n            setAlter(true)\r\n            if(temp.doc.length === 8){\r\n                temp.type = 'note'\r\n            }\r\n        }\r\n\r\n        setInvoiceInfo(temp);\r\n        })\r\n};\r\n    checkLoggedIn();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const prevPage = () => {\r\n        history.push('/customer');\r\n    };\r\n\r\n \r\n    // Go to previous page.\r\n\r\n    const [slideCount, setSlideCount] = useState(2); \r\n\r\n    const increment = ()=>{\r\n        setSlideCount(prev=> prev +1)\r\n    }\r\n\r\n    //get total\r\n    const dataInfo = useSelector(state => state.slide)\r\n    const [ middle, setMiddle] = useState([]);\r\n    \r\n    const collection = [];\r\n    \r\n    const sort = () =>{\r\n        for(let i = 0; i<slideCount-1 ; i++){\r\n             collection.push(middle.filter((el)=> {\r\n                return el.index === i ;\r\n            }).pop());\r\n        }\r\n    }\r\n    const [total, setTotal]=useState(0);\r\n    const getTotal=()=>{\r\n        let sum = 0;\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i] === undefined){\r\n\r\n            }else{\r\n                sum += collection[i].count * Number(collection[i].amount);\r\n            }\r\n        }\r\n        setTotal(sum.toFixed(2))\r\n    }\r\n    useEffect(()=>{\r\n        setMiddle(prev=> [...prev, dataInfo])\r\n    },[dataInfo])\r\n    useEffect(()=>{\r\n        sort();\r\n        getTotal()\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [middle])\r\n    useEffect(()=>{\r\n        setInvoiceInfo({\r\n            ...invoiceInfo,\r\n            \"amount\" : total.toString()\r\n        });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[total])\r\n    const submit =async () => {\r\n        Axios.get(\"/users/get/\" + invoiceInfo.sellerId).then(\r\n            async (response) => {\r\n                console.log(response.data.active_status)\r\n              if (!response.data.active_status){\r\n                addToast(\"Your subscription has expired\", {\r\n                    appearance: \"info\",\r\n                    autoDismissTimeout: 2000,\r\n                    autoDismiss: true,\r\n                    placement: 'top-center'\r\n                });\r\n                localStorage.removeItem('auth-token')\r\n                localStorage.removeItem('customerId')\r\n                history.push('/login');\r\n                return;\r\n              }\r\n              \r\n            }\r\n          );\r\n        if (!invoiceInfo[\"amount\"]) {\r\n            addToast(\"Please Enter Amount\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }         \r\n        sort()\r\n        if(collection[0] === undefined){\r\n            addToast(\"Please Enter Description\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i].count === 1 && collection[i].amount === '0'){\r\n            }else{\r\n                if(collection[i].description === ''){\r\n                    addToast(\"Please Enter Description\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n                 if(collection[i].amount === '0'){\r\n                    addToast(\"Please Enter amount\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n            }\r\n             \r\n        }\r\n        if (!invoiceInfo[\"type\"]) {\r\n            addToast(\"Please Select Type\", {\r\n                appearance: \"info\",\r\n                autoDismiss: true,\r\n                autoDismissTimeout: 2000,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setPdf('http://example.com');\r\n        Axios.get(\"/users/get/\"+ invoiceInfo.sellerId).then((response)=>{\r\n            const postDetail = SendApi(collection, invoiceInfo, response.data);\r\n             getVals(postDetail,invoiceInfo.type);\r\n        })\r\n        \r\n    };\r\n    async function getVals(detail,type){\r\n        \r\n        return await fetch(type === 'note' ? \"https://facturavirtual.pe/facturacion/api/procesar_nota_venta\": \"https://facturavirtual.pe/facturacion/api/procesar_venta\", detail)\r\n        .then((response)=>{\r\n                 return response.json()\r\n        })\r\n\r\n        .then( (datas) => { \r\n\r\n            //   const gettingPdf = `https://facturavirtual.pe/sys_fe/download/downloadpdf/${datas.documento.id_contribuyente}/${datas.documento.id_tipodoc_electronico}/${datas.documento.serie_comprobante}/${datas.documento.numero_comprobante}/pdf/ticket`;\r\n              const gettingPdf =datas.url_absoluta_ticket;\r\n              setPdf(gettingPdf.toString());\r\n              let tmp_invoice = {...invoiceInfo,\"pdfLink\" : gettingPdf.toString()};\r\n\r\n            setInvoiceInfo({\r\n                    ...invoiceInfo,\r\n                    \"pdfLink\" : gettingPdf.toString()\r\n                })\r\n\r\n                return tmp_invoice\r\n              //return gettingPdf;\r\n        })\r\n        .then(async (aaa)=>{\r\n            Axios.post(\"/trans/create\", aaa).then(async (response) => {\r\n\r\n                if (response.data.status === 200) {\r\n                    setConf(true);\r\n                    localStorage.removeItem('customerId')\r\n                    history.push({\r\n                        pathname: \"/confirm/\" + invoiceInfo[\"amount\"],\r\n                    });\r\n\r\n                }\r\n            });\r\n        })\r\n        .catch((err)=>{ \r\n            addToast(\"En el ambiente de pruebas solo se permiten crear hasta 10 BOLETAS\", {\r\n            appearance: \"info\",\r\n            autoDismissTimeout: 2000,\r\n            autoDismiss: true,\r\n            placement: 'top-center'\r\n        });\r\n        setLoading(false)\r\n        return;})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            setTotal(0);\r\n            collection.fill(null);\r\n            setMiddle(null);\r\n            setSlideCount(2);\r\n            setDni(false);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    return (\r\n        <Box sx={{ \r\n            flexGrow: 1,\r\n            width: '100%',\r\n            height: '100vh',\r\n            backgroundColor : 'white',\r\n        }}>\r\n    <Grid container direction=\"column\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n        <Grid item container direction=\"row\" sx={{mt:5}} justifyContent=\"center\" alignItems=\"center\">\r\n            <p className=\"name\">{invoiceInfo[\"name\"]}</p>\r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n            <p className=\"doc\">{invoiceInfo[\"doc\"]}</p>\r\n        </Grid>\r\n        <Grid sx={{width: '100%', pt:2}} item>\r\n        <Swiper\r\n            spaceBetween={0}\r\n            slidesPerView={1}\r\n            onReachEnd = {increment}\r\n            \r\n        >\r\n\r\n            {\r\n                (new Array(slideCount).fill(null).map((_, i)=>(\r\n                    <SwiperSlide key={i}><Slide index={i}/></SwiperSlide>\r\n                )))\r\n            }\r\n\r\n            {/* <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide>\r\n            <SwiperSlide><Slide /></SwiperSlide> */}\r\n        </Swiper>\r\n           {/* <Slide /> */}\r\n        </Grid>\r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                sx={{\r\n                    pl:2\r\n                }}\r\n            >\r\n                {!dni && docType.invoice && <FormControlLabel name=\"type\" value=\"invoice\" control={<Radio size=\"small\" />} label=\"Invoice\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.ticket &&( !alter || !dni  )&& <FormControlLabel name=\"type\" value=\"ticket\" control={<Radio size=\"small\" />} label=\"Ticket\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.note && (!alter || !dni) && <FormControlLabel name=\"type\" value=\"note\" control={<Radio size=\"small\" />} label=\"Note\" onChange={(e) =>\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                         [e.target.name]: e.target.value,\r\n                    })\r\n                        }/>}        \r\n            </RadioGroup>\r\n        </Grid>\r\n\r\n        \r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <p className=\"total\">Total S/{total}</p>\r\n        </Grid>\r\n        <Grid item sx={{\r\n            pt:2,\r\n            width: '60%'\r\n        }}>\r\n        <LoadingButton\r\n          onClick={submit}\r\n          endIcon={<SendIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n        >\r\n          { invoiceInfo.type === '' ? 'Send' : invoiceInfo.type.toUpperCase() }\r\n        </LoadingButton>\r\n        </Grid>\r\n    </Grid>\r\n    </Box>\r\n\r\n    );\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import UserContext from \"../../context/UserContext\";\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nimport \"./index.css\";\r\n\r\nexport default function Admin() {\r\n    const [users, setUsers] = useState([]);\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        Axios.get(\"/users/all\").then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n\r\n        });\r\n        \r\n        return()=>{\r\n            setUsers([]);\r\n        }\r\n    }, [history]);\r\n\r\n    const logout = () => {\r\n        history.push('/')\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState('');\r\n\r\n    const handleClickOpen = (id) => {\r\n        setOpen(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen('');\r\n    };\r\n\r\n\r\n    const remove = (id) => {\r\n        //Before clicking \"Delete\" button,\r\n    \r\n        var prevUsers = users;\r\n\r\n        Axios.delete(\"/users/delete/\" + id).then((response) => {\r\n            if (response.data.msg === \"success\") {\r\n                var del_id = response.data.del_id;\r\n                var userSize = Object.keys(prevUsers).length;\r\n                var users = [];\r\n                for (let i = 0; i < userSize; i++) {\r\n                    var user = [];\r\n                    if (del_id !== prevUsers[i].id) {\r\n                        user = {\r\n                            id: prevUsers[i].id,\r\n                            name: prevUsers[i].name,\r\n                            ruc: prevUsers[i].ruc,\r\n                            branch: prevUsers[i].branch,\r\n                            vendor: prevUsers[i].vendor,\r\n                            process: prevUsers[i].process,\r\n                            credit: prevUsers[i].credit,\r\n                            paid: prevUsers[i].paid,\r\n                            token: prevUsers[i].token,\r\n                            email: prevUsers[i].email,\r\n                            active_status: prevUsers[i].active_status,\r\n                        };\r\n                        users.push(user);\r\n                    }\r\n                }\r\n                setUsers(users);\r\n                addToast(\"Deleted Successfully\", {\r\n                    appearance: \"success\",\r\n                    autoDismiss: true,\r\n                });\r\n            } else {\r\n                addToast(\"Sorry, Operation is failure\", {\r\n                    appearance: \"error\",\r\n                    autoDismiss: true,\r\n                });\r\n            }\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n    const deactive = (id) => {\r\n        Axios.get(\"/users/deactive/\" + id).then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n            addToast(\"Success, Deactivation\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n        });\r\n    };\r\n\r\n    const active = (id) => {\r\n        Axios.get(\"/users/active/\" + id).then((response) => {\r\n            var users = [];\r\n            for (let i = 0; i < response.data.length; i++) {\r\n                var user = [];\r\n                user = {\r\n                    id: response.data[i].id,\r\n                    name: response.data[i].name,\r\n                    ruc: response.data[i].ruc,\r\n                    branch: response.data[i].branch,\r\n                    vendor: response.data[i].vendor,\r\n                    process: response.data[i].process,\r\n                    credit: response.data[i].credit,\r\n                    paid: response.data[i].paid,\r\n                    token: response.data[i].token,\r\n                    email: response.data[i].email,\r\n                    active_status: response.data[i].active_status,\r\n                };\r\n                users.push(user);\r\n            }\r\n            setUsers(users);\r\n            addToast(\"Success, Activation\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n        });\r\n    };\r\n\r\n    const edit = (id) => {\r\n        history.push({\r\n            pathname: \"/admin/edit/\" + id,\r\n        });\r\n    };\r\n\r\n    const newUser = () => {\r\n        history.push(\"/admin/new\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin\">\r\n            <div>\r\n                <IconButton onClick={logout}><i\r\n                    className=\"fas fa-sign-out-alt fa-rotate-180\"\r\n                    \r\n                ></i>\r\n                </IconButton>\r\n            </div>\r\n             <i className=\"fas fa-user-plus\" onClick={newUser}></i>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Ruc</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.ruc}</td>\r\n                            <td>\r\n                                \r\n                                <IconButton size=\"small\" onClick={() => edit(user.id)}><i\r\n                                    className=\"fas fa-pen\"\r\n                                ></i>\r\n                                </IconButton>\r\n                                <IconButton size=\"small\" onClick={() => handleClickOpen(user.id)}>\r\n                                <i\r\n                                    className=\"fas fa-trash-alt\"\r\n                                >\r\n                                </i></IconButton>\r\n                               \r\n                                {user.active_status ? (\r\n                                     <IconButton size=\"small\" onClick={() => deactive(user.id)}>\r\n                                    <i\r\n                                        className=\"fas fa-lock\"\r\n                                    ></i></IconButton>\r\n                                ) : (\r\n                                    <IconButton size=\"small\" onClick={() => active(user.id)}><i\r\n                                        className=\"fas fa-lock-open\"\r\n                                    ></i></IconButton>\r\n                                    \r\n                                )}\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Dialog\r\n                                        open={open ? true : false}\r\n                                        onClose={handleClose}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        <DialogTitle id=\"alert-dialog-title\">\r\n                                        {\"Caution\"}\r\n                                        </DialogTitle>\r\n                                        <DialogContent>\r\n                                        <DialogContentText id=\"alert-dialog-description\">\r\n                                            All data will be deleted.\r\n                                        </DialogContentText>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                        <Button onClick={handleClose}>{\"Cancel\"}</Button>\r\n                                        <Button onClick={() => remove(open)} autoFocus>\r\n                                            {\"Okay\"}\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/////////////////////////////////\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\n\r\nexport default function Edit() {\r\n  let { id } = useParams();\r\n    const [name, setName] = useState(\"\");\r\n    const [ruc, setRuc] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [credit, setCredit] = useState(\"\");\r\n    const [vendor, setVendor] = useState(\"\");\r\n    const [process, setProcess] = useState(\"\");\r\n    const [paid, setPaid] = useState(\"\");\r\n    const [docType, setDocType] = useState({\r\n      invoice: false,\r\n      ticket: false,\r\n      note: false\r\n\r\n    });\r\n    const docHandle = (event) =>{\r\n      setDocType({\r\n        ...docType,\r\n        [event.target.name] : event.target.checked\r\n      })\r\n    }\r\n\r\n\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n \r\n  const submit = async () => {\r\n        if (!name) {\r\n            addToast(\"Please Enter Name\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!ruc) {\r\n            addToast(\"Please Enter Ruc\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!branch) {\r\n            addToast(\"Please Enter Id Sucursal\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!token) {\r\n            addToast(\"Please Enter Token\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!vendor) {\r\n            addToast(\"Please Enter Id Vendor\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!process) {\r\n            addToast(\"Please Enter Tipo Proceso\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!credit) {\r\n            addToast(\"Please Enter Credit\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!paid) {\r\n            addToast(\"Please Enter Paid\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if(!docType.invoice && !docType.ticket && !docType.note){\r\n          addToast('Please Check Doc Types' , {\r\n            appearance: \"error\",\r\n            autoDismiss : true\r\n          })\r\n          return;\r\n        }\r\n\r\n    const newUser = {\r\n      id,\r\n      name,\r\n      ruc,\r\n      branch,\r\n      token,\r\n      email,\r\n      vendor,\r\n      process,\r\n      credit,\r\n      paid,\r\n      docType\r\n    };\r\n    const resultRegister = await Axios.put(\r\n      \"/users/update\",\r\n      newUser\r\n    );\r\n\r\n    // Register Success Case\r\n    if (resultRegister.status === 200) {\r\n      history.push(\"/admin\");\r\n    } else {\r\n      addToast(resultRegister.data.msg, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n    const prevPage = () => {\r\n      history.push('/admin');\r\n  };\r\n  \r\n    useEffect(() => {\r\n    Axios.get(\"/users/get/\" + id).then(\r\n      async (response) => {\r\n        setName(response.data.name);\r\n        setRuc(response.data.ruc);\r\n        setBranch(response.data.branch);\r\n        setToken(response.data.token);\r\n        setCredit(response.data.credit);\r\n        setVendor(response.data.vendor);\r\n        setProcess(response.data.process? response.data.process : \"prueba\");\r\n        setPaid(response.data.paid);\r\n        setEmail(response.data.email);\r\n        setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n      }\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ id]);\r\n\r\n    return (\r\n        <Box\r\n          component=\"form\"\r\n          sx={{ display: 'flex', flexWrap: 'wrap', p:3 }}\r\n          noValidate\r\n          autoComplete=\"on\"\r\n        >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n          </IconButton>\r\n          <div>\r\n          <InputLabel sx={{my:1, color: '#1976d2', fontWeight:'600'}} >Edit User</InputLabel>\r\n            <TextField\r\n              required\r\n              autoComplete=\"email\"\r\n              variant=\"standard\"\r\n              label=\"Name\"\r\n              focused\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{mb:1}}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Ruc\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ mr: 1,my:1, width: '60%' }}\r\n              value={ruc}\r\n              onChange={(e) => setRuc(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Id Sucursal\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n              sx={{ ml: 1,my:1, width: '35%' }}\r\n              value={branch}\r\n              onChange={(e) => setBranch(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Token\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              focused\r\n              fullWidth\r\n              sx={{my:1}}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              sx={{my:1}}\r\n              focused\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Vendor\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ my: 1,mr:1, width: '40%' }}\r\n              focused\r\n              value={vendor}\r\n              onChange={(e) => setVendor(e.target.value)}\r\n            />\r\n            <FormControl sx={{ my: 1,ml:1, width: '55%' }} size=\"small\" focused variant=\"standard\">\r\n              <InputLabel >Tipo Proceso</InputLabel>\r\n              <Select\r\n                value={process}\r\n                onChange={(e) => setProcess(e.target.value)}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value=\"prueba\">Prueba</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          <TextField\r\n              label=\"Id Credit\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              sx={{ my: 1,mr:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={credit}\r\n              onChange={(e) => setCredit(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Paid\"\r\n              type=\"number\"\r\n              \r\n              variant=\"standard\"\r\n              sx={{ my: 1,ml:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={paid}\r\n              onChange={(e) => setPaid(e.target.value)}\r\n            />\r\n\r\n            <FormControlLabel  control={<Checkbox  checked={docType.invoice} onChange={docHandle} name=\"invoice\" size=\"small\"/>} label=\"Invoice\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.ticket} onChange={docHandle} name=\"ticket\" size=\"small\"/>} label=\"Ticket\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.note} onChange={docHandle} name=\"note\" size=\"small\"/>} label=\"Note\" />\r\n\r\n            <Button onClick={submit} variant=\"contained\" sx={{my:2, width: '65%' }}>\r\n                Save\r\n            </Button>\r\n          </div>\r\n      </Box>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Axios from \"axios\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n/////////////////////////////////\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Input from '@mui/material/Input';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\n\r\nexport default function Create() {\r\n    const [name, setName] = useState(\"\");\r\n    const [ruc, setRuc] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [credit, setCredit] = useState(\"\");\r\n    const [vendor, setVendor] = useState(\"\");\r\n    const [process, setProcess] = useState(\"prueba\");\r\n    const [paid, setPaid] = useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        showPassword: false,\r\n    });\r\n    const [rePassword, setRePassword] = React.useState({\r\n        repassword: \"\",\r\n        showRePassword: false,\r\n    });\r\n    const [docType, setDocType] = useState({\r\n      invoice: true,\r\n      ticket: true,\r\n      note : true\r\n    })\r\n    const docHandle = (event) =>{\r\n      setDocType({\r\n        ...docType,\r\n        [event.target.name] : event.target.checked\r\n      })\r\n    }\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    // RePassword\r\n    const handleRePasswordChange = (prop) => (event) => {\r\n        setRePassword({ ...rePassword, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowRePassword = () => {\r\n        setRePassword({\r\n            ...rePassword,\r\n            showRePassword: !rePassword.showRePassword,\r\n        });\r\n    };\r\n\r\n    // Submit New User Information to database\r\n    const submit = async () => {\r\n        const password = values.password;\r\n        const repassword = rePassword.repassword;\r\n        if (!name) {\r\n            addToast(\"Please Enter Name\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!ruc) {\r\n            addToast(\"Please Enter Ruc\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!branch) {\r\n            addToast(\"Please Enter Id Sucursal\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!token) {\r\n            addToast(\"Please Enter Token\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!email) {\r\n            addToast(\"Please Enter Email\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!vendor) {\r\n            addToast(\"Please Enter Id Vendor\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!process) {\r\n            addToast(\"Please Enter Tipo Proceso\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!credit) {\r\n            addToast(\"Please Enter Credit\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (!paid) {\r\n            addToast(\"Please Enter Paid\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if (password !== repassword) {\r\n            addToast(\"Please Confirm Password\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n            return;\r\n        }\r\n        if(!docType.invoice && !docType.ticket && !docType.note){\r\n          addToast('Please Check Doc Types' , {\r\n            appearance: \"error\",\r\n            autoDismiss : true\r\n          })\r\n          return;\r\n        }\r\n        const newUser = {\r\n            name,\r\n            ruc,\r\n            branch,\r\n            token,\r\n            email,\r\n            vendor,\r\n            process,\r\n            credit,\r\n            paid,\r\n            password,\r\n            docType\r\n        };\r\n        const resultRegister = await Axios.post(\"/users/register\", newUser);\r\n\r\n        // Register Success Case\r\n        if (resultRegister.data.status === 200) {\r\n            history.push(\"/admin\");\r\n        } else {\r\n            addToast(resultRegister.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n    const prevPage = () => {\r\n      history.push('/admin');\r\n  };\r\n    return (\r\n        <Box\r\n          component=\"form\"\r\n          sx={{ display: 'flex', flexWrap: 'wrap', p:3 }}\r\n          noValidate\r\n          autoComplete=\"on\"\r\n        >\r\n          <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n          </IconButton>\r\n          <div>\r\n          <InputLabel sx={{my:1, color: '#1976d2', fontWeight:'600'}} >New User</InputLabel>\r\n            <TextField\r\n              required\r\n              autoComplete=\"email\"\r\n              variant=\"standard\"\r\n              label=\"Name\"\r\n              focused\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{mb:1}}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Ruc\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ mr: 1,my:1, width: '60%' }}\r\n              value={ruc}\r\n              onChange={(e) => setRuc(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Id Sucursal\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n              sx={{ ml: 1,my:1, width: '35%' }}\r\n              value={branch}\r\n              onChange={(e) => setBranch(e.target.value)}\r\n              focused\r\n            />\r\n            <TextField\r\n              label=\"Token\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              focused\r\n              fullWidth\r\n              sx={{my:1}}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              size=\"small\"\r\n              variant=\"standard\"\r\n              fullWidth\r\n              sx={{my:1}}\r\n              focused\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Vendor\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              size=\"small\"\r\n              sx={{ my: 1,mr:1, width: '40%' }}\r\n              focused\r\n              value={vendor}\r\n              onChange={(e) => setVendor(e.target.value)}\r\n            />\r\n            <FormControl sx={{ my: 1,ml:1, width: '55%' }} size=\"small\" focused variant=\"standard\">\r\n              <InputLabel >Tipo Proceso</InputLabel>\r\n              <Select\r\n                value={process}\r\n                onChange={(e) => setProcess(e.target.value)}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value=\"prueba\">Prueba</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl sx={{my:1}} fullWidth variant=\"standard\" size=\"small\"  focused required>\r\n              <InputLabel >Password</InputLabel>\r\n              <Input\r\n\r\n                type={values.showPassword ? 'text' : 'password'}\r\n                value={values.password}\r\n                onChange={handleChange('password')}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {values.showPassword ? <VisibilityOff color='info' /> : <Visibility  color='info' />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          <FormControl sx={{my:1}} fullWidth variant=\"standard\" size=\"small\" focused>\r\n            <InputLabel>Confirm Password</InputLabel>\r\n            <Input\r\n              type={rePassword.showRePassword ? 'text' : 'password'}\r\n              value={rePassword.repassword}\r\n              onChange={handleRePasswordChange('repassword')}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowRePassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                    color='info'\r\n                  >\r\n                    {rePassword.showRePassword ? <VisibilityOff color='info' /> : <Visibility color='info' />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n          <TextField\r\n              label=\"Id Credit\"\r\n              type=\"number\"\r\n              variant=\"standard\"\r\n              sx={{ my: 1,mr:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={credit}\r\n              onChange={(e) => setCredit(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Id Paid\"\r\n              type=\"number\"\r\n              \r\n              variant=\"standard\"\r\n              sx={{ my: 1,ml:2, width: '45%' }}\r\n              size=\"small\"\r\n              focused\r\n              value={paid}\r\n              onChange={(e) => setPaid(e.target.value)}\r\n            />\r\n            <FormControlLabel  control={<Checkbox  checked={docType.invoice} onChange={docHandle} name=\"invoice\" size=\"small\"/>} label=\"Invoice\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.ticket} onChange={docHandle} name=\"ticket\" size=\"small\"/>} label=\"Ticket\" />\r\n            <FormControlLabel control={<Checkbox checked={docType.note} onChange={docHandle} name=\"note\" size=\"small\"/>} label=\"Note\" />\r\n\r\n            <Button onClick={submit} variant=\"contained\" sx={{my:2, width: '65%' }}>\r\n                Save\r\n            </Button>\r\n            \r\n          </div>\r\n      </Box>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n// import { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport \"./index.css\";\r\n// import Check from '../../images/check.gif'\r\nimport Moment from \"react-moment\";\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import printJs from 'print-js'\r\n import { styled } from '@mui/material/styles';\r\n\r\n\r\nexport default function Confirm(props) {\r\n    const {id} = props.match.params;\r\n    const history = useHistory();\r\n    const { loginStatus, pdf, conf } = useContext(UserContext);\r\n    const [userInfo, setUserInfo] = useState({\r\n        name: \"\",\r\n        doc: \"\",\r\n    });\r\n    // let customerId = useSelector((state) => state.email.customerId);\r\n\r\n    useEffect(() => {\r\n        if (navigator.share === undefined) {\r\n            if (window.location.protocol === 'http:') {\r\n              window.location.replace(window.location.href.replace(/^http:/, 'https:'));\r\n            } \r\n          }\r\n        if(pdf.toString() === ''){\r\n            history.push(\"/translist\");\r\n            return;\r\n        }else{\r\n            Axios.get(\"/customers/get/\" + loginStatus.customerId).then(async (response) => {\r\n\r\n                setUserInfo({\r\n                    ...userInfo,\r\n                    \"name\": response.data[0].name,\r\n                    \"doc\": response.data[0].doc,\r\n                });\r\n            });\r\n        }\r\n        // Get customer information from \"customer\" table.\r\n       \r\n        return()=>{\r\n            setUserInfo({\r\n                name:\"\",\r\n                doc:\"\"\r\n            });\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const transList = () => {\r\n        history.push(\"/translist\");\r\n    };\r\n    const currentDate = new Date();\r\n    const curFormatDate = currentDate;\r\n    // const print =async ()=>{\r\n    //     // let url = \"https://cors-anywhere.herokuapp.com/\"+pdf;\r\n    //     let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n    //  printJs({printable: url, type:'pdf', showModal:true})\r\n    // }\r\n    const print = ()=>{\r\n        // let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n        sendUrlToPrint(pdf);\r\n    }\r\n    const sendUrlToPrint = (url)=>{\r\n        var  beforeUrl = 'intent:';\r\n        var  afterUrl = '#Intent;';\r\n        // Intent call with component\r\n        afterUrl += 'component=ru.a402d.rawbtprinter.activity.PrintDownloadActivity;'\r\n        afterUrl += 'package=ru.a402d.rawbtprinter;end;';\r\n        document.location=beforeUrl+encodeURI(url)+afterUrl;\r\n        return false;\r\n    }\r\n\r\n    \r\n    const share = async () => {\r\n        // let url = \"https://cors-anywhere.herokuapp.com/\"+pdf;\r\n        let url  = `https://api.allorigins.win/raw?url=${encodeURIComponent(pdf)}`\r\n      \r\n        let blob = await fetch(url).then(r => r.blob());\r\n            // here image is url/location of image\r\n            const file = new File([blob], `${userInfo[\"name\"]? userInfo[\"name\"] : 'Invited'}.pdf`, {type: blob.type});\r\n            if(navigator.share) {\r\n                await navigator.share({\r\n                title: \"Share\",\r\n                text: \"Hello sir.\",\r\n                url: window.location.href,\r\n                files: [file]\r\n                })\r\n                .then(() => console.log('Successful share'))\r\n                .catch((error) => console.log('Error in sharing', error));\r\n            }else {\r\n                window.alert(`system does not support sharing files.`);\r\n            }\r\n    }\r\n      const Img = styled('img')({\r\n        display:'block',\r\n        width: '55%',\r\n        maxWidth: '200px',\r\n        height: '50%',\r\n      });\r\n    return (\r\n        <div className=\"confirm\">\r\n            <Grid\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n            >\r\n                <Img src=\"/check.gif\" alt=\"CheckImage\" sx={{my:'auto'}}/>\r\n                \r\n               {/* <img src={Check} alt=\"checkImage\" className=\"check\" /> */}\r\n                <p className=\"username\">\r\n                    \r\n                    {userInfo[\"name\"] ? userInfo[\"name\"] : <>Invited</>}\r\n                </p>\r\n                <p className=\"p-amount\"><sup><sub>S/</sub></sup>{id}</p>\r\n                <Moment format=\"Do MMMM YYYY - HH:mm\">\r\n                                    {curFormatDate}\r\n                        </Moment>\r\n               \r\n            </Grid>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                sx={{ padding: \"50px 40px\" }}\r\n            >\r\n                <IconButton aria-label=\"home\" onClick={transList}>\r\n                    <i  className=\"fas fa-home\"></i >\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\" onClick={share}>\r\n                    <i className=\"fas fa-share-alt\"></i>\r\n                </IconButton>\r\n                <IconButton aria-label=\"print\" onClick={print}>\r\n                    <i className=\"fas fa-print\"></i>\r\n                </IconButton>\r\n                \r\n                \r\n            </Grid>\r\n            <Button onClick={()=> {\r\n                if(conf)\r\n                    history.push('/customer')\r\n                else\r\n                    history.push(`/${userInfo[\"name\"] ? 'invoice' : 'invite'}`)\r\n                }} sx={{mt: 4}} variant=\"contained\" >Send Other</Button>\r\n        </div>\r\n    );\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\n//import { useSelector } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\r\n\r\n// import * as Actions from \"../../redux/action\";\r\nimport \"./index.css\";\r\nimport logoImg from \"../../images/fino.png\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n      return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n      position:'relative',\r\n  backgroundColor:'#fcfeffd6',\r\n  padding: theme.spacing(1),\r\n  textAlign: 'left',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst Img = styled('img')({\r\n      display:'block',\r\n      width:'30px',\r\n      heigth:'30px'\r\n    });\r\n\r\nexport default function Translist() {\r\n\r\n  // const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [tranData, setTranData] = useState([]);\r\n    const { loginStatus, setLoginStatus, setConf, setPdf } = useContext(UserContext);\r\n    const [sellerId, setSellerId] = useState([]);\r\n //   const email = useSelector((state) => state.email.currentEmail);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n    const [openDialog, setDialogOpen] = React.useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n      const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (token === null) {\r\n              // history.push(\"/\");\r\n              // return;\r\n            }else{\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n              Axios.get(\"/users/getId/\" + userRes.data.email).then(async (response) => {\r\n                  setSellerId(response.data);\r\n                  if(!response.data.name){\r\n                    setDialogOpen(true)\r\n                  }\r\n                });\r\n                  Axios.get(\"/trans/all/\" + userRes.data.id).then(\r\n                    async (response) => {\r\n                        const currentDate = new Date();\r\n                        const curFormatDate = currentDate.toISOString().slice(0, 10);\r\n            \r\n                        var totalAmount = 0;\r\n                        for (var i = 0; i < response.data.length; i++) {\r\n                            const tranFormatDate = new Date(response.data[i].date)\r\n                                .toISOString()\r\n                                .slice(0, 10);\r\n                            if (curFormatDate === tranFormatDate) {\r\n                                totalAmount += response.data[i].amount;\r\n                            }\r\n                        }\r\n                        setTotalAmount(totalAmount);\r\n                        setTranData(response.data);\r\n                    }\r\n                );\r\n              }\r\n      };\r\n      checkLoggedIn();\r\n      return(()=>{\r\n        setTotalAmount(0);\r\n        setTranData([]);\r\n        setSellerId([])\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, []);\r\n   \r\n\r\n\r\n\r\n\r\n//Dialog Settings --------------------\r\n    const handleDialogClickOpen = () => {\r\n      setDialogOpen(true);\r\n    };\r\n    const handleDialogClose = () => {\r\n      setDialogOpen(false);\r\n    };\r\n// Dropmenu settings ----------------------------\r\n      const [anchorEl, setAnchorEl] = React.useState(null);\r\n      const open = Boolean(anchorEl);\r\n      const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n//----------------------------------------------------\r\n      const goCustomer = () => {\r\n        localStorage.removeItem('customerId')\r\n        history.push(\"/customer\");\r\n      };\r\n         \r\n      const logout = () => {\r\n        setLoginStatus({\r\n          token: undefined,\r\n          email: undefined,\r\n          customerId:''\r\n        });\r\n        localStorage.removeItem(\"auth-token\");\r\n        localStorage.removeItem(\"customerId\");\r\n        history.push(\"/\");\r\n        return;\r\n      };\r\n// Show transaction all ----------------------\r\n        const [showAll , setShowAll] = useState(false);\r\n        const setting = ()=>{\r\n            setShowAll(prev =>{\r\n                return !prev\r\n            })\r\n        }\r\n        const length = tranData.length;\r\n\r\n        const click = (amount, id, pdfLink)=>{\r\n          setConf(false);\r\n        //   const payload = {\r\n        //     email: email,\r\n        //     customerId: id,\r\n        // };\r\n        setPdf(pdfLink);\r\n          // dispatch(Actions.saveEmail(payload));\r\n          setLoginStatus({\r\n            ...loginStatus,\r\n            customerId: id\r\n          })\r\n          console.log(id+\"dafaw\")\r\n          if(id){\r\n              localStorage.setItem(\"customerId\", id);\r\n          }\r\n         \r\n          history.push({\r\n            pathname: \"/confirm/\" + amount,\r\n        });\r\n        }\r\n  return (\r\n      <Grid\r\n      sx={{\r\n            height: '100vh',\r\n            color:'white'\r\n          }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"flex-start\"\r\n    >\r\n      <Grid item className=\"header\" container spacing={2} dirction=\"row\" justifyContent=\"space-between\" sx={{backgroundColor:\"#1a1938\", p:2}}>\r\n        <Grid item xs={2}\r\n  justifyContent=\"space-between\" container>\r\n            <Img src={logoImg} alt=\"logo\" sx={{my:'auto'}}/>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n            <Grid>\r\n            {sellerId[\"name\"] ? sellerId[\"name\"] : <Button variant=\"filled\" onClick={handleDialogClickOpen}>\r\n                        Please be a link\r\n                  </Button>}\r\n                  \r\n            </Grid>\r\n            <Grid>\r\n              {sellerId[\"ruc\"] ? `RUC: ${sellerId[\"ruc\"]}` : \"+51 943204360\"}\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={2} justifyContent=\"flex-end\" container>\r\n            <IconButton\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                  sx={{color:'white'}}\r\n            >\r\n                  <MoreVertIcon sx={{color:'white'}}/>\r\n            </IconButton>\r\n            <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                  }}\r\n            >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={logout}>Logout</MenuItem>\r\n            </Menu>          \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Item >\r\n                  <span>Today</span>\r\n                  <span style={{position:'absolute',right:'10px'}}>S/&nbsp;<span>{totalAmount.toFixed(2)}</span></span>\r\n            </Item >\r\n           \r\n        </Grid>\r\n      </Grid>\r\n      <Grid item className=\"body\" >\r\n      <Paper sx={{ overflow: 'hidden', width:'100%' }}>\r\n      <TableContainer sx={{ maxHeight: 'calc(100vh - 220px)' }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n          <TableRow>\r\n            <TableCell>Últimos Movimientos</TableCell>\r\n            <TableCell align=\"right\">\r\n              <Button  variant=\"text\"\r\n                    color=\"info\" onClick={setting} sx={{fontSize:'13px', p:0}}>Ver Todos</Button>\r\n            </TableCell>\r\n          </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {tranData.map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n              onClick={()=>click(row.amount, row.customerId, row.pdfLink)}\r\n              hover\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }, p:0 }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\" sx={{p:1}}>\r\n                <strong>{row[\"name\"]}</strong>\r\n                <p className=\"type\">\r\n                  {row[\"type\"]}&nbsp;::&nbsp;\r\n                  <Moment format=\"Do MMMM - HH:mm\">\r\n                    {row[\"date\"]}\r\n                  </Moment>\r\n                </p>\r\n              </TableCell>\r\n              <TableCell align=\"right\" >S/&nbsp;&nbsp;{row.amount}</TableCell>\r\n              \r\n            </TableRow>\r\n          )).reverse().slice(0, (showAll === true ? length : 8)) \r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n    </Paper>\r\n      </Grid>\r\n      <Grid item className=\"footer\" sx={{position:'fixed', bottom:'0px',width:'100%'}}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={goCustomer}\r\n                    color=\"info\"\r\n                    sx={{marginBottom:'10px', width:'60%'}}\r\n                    >\r\n                    SEND\r\n                </Button>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={sellerId[\"name\"]? false : openDialog}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        fullWidth\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle sx={{mx:'auto'}} color=\"primary\" >{\"Go to the pro version!!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText sx={{fontSize:'80%'}} id=\"alert-dialog-slide-description\">\r\n            Welcome to Fino: you are currently in a trial version. If you want to use the pro version, please contact our phone numbers: +51 943204360 or press the button bellow.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions sx={{mx:'auto'}}>\r\n          <Button sx={{p:1, fontSize:'70%', }} startIcon={<WhatsAppIcon color=\"white\" sx={{fontSize:'80px'}} fontSize=\"large\" />} color=\"success\" variant=\"contained\" onClick={()=>{window.open(\"https://api.whatsapp.com/send?phone=+51943204360&text=Hola,%20deseo%20soporte%20para%20integrar%20mi%20sistema%20a%20FINO.\");\r\n      }}>Contactar por WhatsApp</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport UserContext from \"../../context/UserContext\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n// import { useDispatch } from \"react-redux\";\r\n//\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n// import * as Actions from \"../../redux/action\";\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport {\r\n    SwipeableList,\r\n    SwipeableListItem,\r\n    SwipeAction,\r\n    TrailingActions,\r\n    Type as ListType\r\n  } from \"react-swipeable-list\";\r\n  import \"react-swipeable-list/dist/styles.css\";\r\n \r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n    \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n        position: \"relative\",\r\n        backgroundColor: \"white\",\r\n        fontSize: 14,\r\n        width: \"100%\",\r\n        padding: \"12px 16px\",\r\n        transition: theme.transitions.create([\r\n            \"border-color\",\r\n            \"background-color\",\r\n            \"box-shadow\",\r\n            \"border-width\",\r\n        ]),\r\n        \"&:focus\": {\r\n            borderColor: \"#FA4616\",\r\n            borderWidth: \"1px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Customer() {\r\n    // const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { loginStatus, setLoginStatus } = useContext(UserContext);\r\n    const { addToast } = useToasts();\r\n    const [allCustomer, setAllCustomer] = useState([]);\r\n    const [customerInfo, setCustomerInfo] = useState({\r\n        sellerId: \"\",\r\n        name: \"\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n    });\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            localStorage.removeItem('customerId')\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (!token) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n\r\n            Axios.get(\"/users/getId/\" + userRes.data.email).then(async (response) => {\r\n                setCustomerInfo({\r\n                    ...customerInfo,\r\n                    \"sellerId\": response.data._id\r\n                });\r\n                setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n            });\r\n            Axios.get(\"/customers/all/\" + userRes.data.id).then(async (res) => {\r\n                setAllCustomer(res.data);\r\n            });\r\n      };\r\n    checkLoggedIn();\r\n\r\n    return()=>{\r\n        setCustomerInfo([]);\r\n        setAllCustomer([]);\r\n        setDocType({})\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n\r\n  \r\n    // When creating new customer.\r\n    const saveCustomer = async () => {\r\n        if (!customerInfo[\"name\"]) {\r\n            addToast(\"Please enter name\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        if (!customerInfo[\"doc\"]) {\r\n            addToast(\"Please enter doc number\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        if (!customerInfo[\"direction\"]) {\r\n            addToast(\"Please enter direction\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n\r\n        const result = await Axios.post(\"/customers/create\", customerInfo);\r\n\r\n        // Register Success Case\r\n        if (result.data.status === 200) {\r\n            \r\n            setCustomerInfo({\r\n                ...customerInfo,\r\n                \"doc\": \"\",\r\n                \"name\": \"\",\r\n                \"direction\": \"\",\r\n            });\r\n            // setDoc('');\r\n            // setShow(false);\r\n            Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n                async (response) => {\r\n                    let aaa = response.data.pop();\r\n                    selectCustomer(aaa[\"id\"]);\r\n                }\r\n            );\r\n          //  selectCustomer(aaa.id);\r\n        } else {\r\n            addToast(result.data.msg, {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n    };\r\n\r\n \r\n    // When seller selects customer.\r\n    const selectCustomer = (id) => {\r\n        // Store current customer's ID to redux\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: id,\r\n        // };\r\n\r\n        Axios.get(\"/customers/get/\" + id).then(async (response) => {\r\n        if((!docType.ticket && !docType.note)&&(response.data[0].doc.length === 8)){\r\n            addToast(\"You can't invoice a DNI!!! Please link to admin.\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            setShow(false);\r\n            setDoc('');\r\n            Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n                async (response) => {\r\n                    setAllCustomer(response.data);\r\n                }\r\n            );\r\n          }else{\r\n            // dispatch(Actions.saveEmail(payload));\r\n            setLoginStatus({\r\n                ...loginStatus,\r\n                customerId: id\r\n              })\r\n              \r\n              localStorage.setItem(\"customerId\", id);\r\n            history.push(\"/invoice\");\r\n          }\r\n      })\r\n\r\n}\r\n    // Go to previous page.\r\n    const prevPage = () => {\r\n        history.push('/translist');\r\n    };\r\n\r\n    const [doc, setDoc] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    // Search functionality\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n        setDoc(e.target.value);\r\n        // if search work doesn't exist,\r\n        if (e.target.value) {\r\n            const searchKey = e.target.value.toString().toLowerCase();\r\n            let searchResult = [];\r\n            for (var i = 0; i < allCustomer.length; i++) {\r\n                if (\r\n                    allCustomer[i][\"name\"]\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchKey) ||\r\n                    allCustomer[i][\"doc\"]\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .includes(searchKey)\r\n                ) {\r\n                    searchResult.push(allCustomer[i]);\r\n                }\r\n            }\r\n            setAllCustomer(searchResult);\r\n        } else {\r\n            setShow(false);\r\n            Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n                async (response) => {\r\n                    setAllCustomer(response.data);\r\n                }\r\n            );\r\n            setCustomerInfo({\r\n                ...customerInfo,\r\n                \"doc\": '',\r\n                \"name\": '',\r\n                \"direction\": ''\r\n            })        }\r\n    };\r\n\r\n    const getCustomerFromAPI=()=>{\r\n        setText('');\r\n        setCustomerInfo({\r\n            ...customerInfo,\r\n            \"doc\": doc,\r\n            \"name\": \"\",\r\n            \"direction\": \"\",\r\n        });\r\n        setShow(true);\r\n        if(doc.length !== 8 && doc.length !== 11){\r\n            addToast(\"Doc number is incorrect\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            setText(`RUC OR DNI, does not exist, type correctly.\r\n            If it is another type of document, type manually.`);\r\n        }\r\n        if(doc.length === 8){\r\n            let url = \"https://facturalahoy.com/api/persona/\" + doc.toString() +'/facturalaya_evalles_orE26f69ngmqmqB';\r\n            fetch(url)\r\n                .then((res)=> {return res.json()})\r\n                .then((data)=> {\r\n                    if(data.respuesta === \"ok\"){\r\n                    setCustomerInfo({\r\n                        ...customerInfo,\r\n                        \"doc\": data.dni,\r\n                        \"name\": data.nombre,\r\n                        \"direction\":''\r\n                    })\r\n                }else{\r\n                    addToast(\"Doc number is incorrect\", {\r\n                        appearance: \"info\",\r\n                        autoDismissTimeout: 2000,\r\n                        autoDismiss: true,\r\n                        placement: 'top-center'\r\n                    });\r\n                    setText(`RUC OR DNI, does not exist, type correctly.\r\n                    If it is another type of document, type manually.`);\r\n                }\r\n                })\r\n                .catch((err)=>{ console.log(err)});\r\n        }\r\n        if(doc.length === 11){\r\n            let url = \"https://facturalahoy.com/api/empresa/\" + doc.toString() +'/facturalaya_evalles_orE26f69ngmqmqB';\r\n            fetch(url)\r\n                .then((res)=> {return res.json()})\r\n                .then((data)=> {\r\n                    if(data.respuesta === \"ok\"){\r\n                        setCustomerInfo({\r\n                            ...customerInfo,\r\n                            \"doc\": data.ruc,\r\n                            \"name\": data.razon_social,\r\n                            \"direction\": data.direccion.trim()\r\n                        })\r\n                    }\r\n                    else{\r\n                        addToast(\"Doc number is incorrect\", {\r\n                            appearance: \"info\",\r\n                            autoDismissTimeout: 2000,\r\n                            autoDismiss: true,\r\n                            placement: 'top-center'\r\n                        });\r\n                        setText(`RUC OR DNI, does not exist, type correctly.\r\n                        If it is another type of document, type manually.`);\r\n                    }\r\n                })\r\n                .catch((err)=>{ console.log(err)});\r\n        }\r\n\r\n    }\r\n    // Create Invite Guest.\r\n    const inviteGuest = () => {\r\n        // const payload = {\r\n        //     email: email,\r\n        //     customerId: '',\r\n        // };\r\n        if(!docType.ticket && !docType.note){\r\n            addToast(\"Now You can't use DNI and Invite\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            // setShow(false);\r\n            // setDoc('');\r\n            // Axios.get(\"/customers/all/\" + customerInfo[\"sellerId\"]).then(\r\n            //     async (response) => {\r\n            //         setAllCustomer(response.data);\r\n            //     }\r\n            // );\r\n          }else{\r\n            // dispatch(Actions.saveEmail(payload));\r\n            localStorage.removeItem('customerId');\r\n            history.push(\"/invite\");\r\n          }\r\n    };\r\n   const [text, setText ] = useState('');\r\n    const handleDelete = (id) => () => {\r\n\r\n    Axios.delete(\"/customers/delete/\" + id).then((res) =>{\r\n         if(res.data.msg === \"success\"){\r\n            addToast(\"Deleted Successfully\", {\r\n                appearance: \"success\",\r\n                autoDismiss: true,\r\n            });\r\n         }else {\r\n            addToast(\"Sorry, Operation is failure\", {\r\n                appearance: \"error\",\r\n                autoDismiss: true,\r\n            });\r\n        }\r\n     })\r\n    }\r\n    \r\n  const [open, setOpen] = React.useState(false);\r\n  const [changeData, setChangeData] = useState({\r\n      id:'',\r\n      name: '',\r\n      direction : ''\r\n  });\r\n  const handleEdit = (id, name, direction) => () => {\r\n    setChangeData({\r\n        id: id,\r\n        name :  name,\r\n        direction : direction\r\n    })\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChange = async () =>{\r\n    const result = await Axios.put(\r\n        \"/customers/update\",\r\n        {id: changeData.id, name: changeData.name, direction: changeData.direction}\r\n      );\r\n    if(result.status === 200){\r\n        const newItems = allCustomer.map(item => {\r\n            if (changeData.id === item.id) {\r\n              return { ...item, name: changeData.name, direction : changeData.direction}\r\n            }\r\n            return item;\r\n          });\r\n          setAllCustomer(newItems);\r\n        handleClose();\r\n    }\r\n    else{\r\n        addToast(result.data.msg, {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n          });\r\n    }\r\n  }\r\n   const trailingActions = (id, name, direction) => (\r\n    <TrailingActions sx={{overflow:'hidden'}}>\r\n      <SwipeAction  sx={{width:'10px'}} onClick={handleEdit(id, name, direction)}>\r\n          \r\n            <Button variant=\"text\" endIcon={<EditIcon  size=\"large\"/>}>\r\n            </Button>\r\n            \r\n      </SwipeAction>\r\n      <SwipeAction destructive={true} onClick={handleDelete(id)}>\r\n       \r\n      <Button variant=\"text\"  startIcon={<DeleteIcon size=\"large\" />}>\r\n            </Button>\r\n      </SwipeAction>\r\n    </TrailingActions>\r\n  );\r\n\r\n\r\n    return (\r\n            <Box sx={{ height:'100vh', backgroundColor:'#EDEDF5'}}>\r\n                <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                    <ClearIcon />\r\n                </IconButton>\r\n                <p style={{ letterSpacing: '3px', fontWeight:'500',paddingBottom:\"20px\", fontSize: '20px', color : \"#1976d2\", paddingTop:'40px'}}>CUSTOMERS</p>\r\n\r\n                    <Paper\r\n                        sx={{\r\n                            px:1,\r\n                            mx:1,\r\n                            mb:0,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            marginBottom: \"13px\",\r\n                            boxShadow: \"unset\",\r\n                            border: \"1px solid #f5f5f5\",\r\n                        }}\r\n                    >\r\n                        <InputBase\r\n                            sx={{ ml: 1, flex: 1 }}\r\n                            placeholder=\"Search Name or Doc in list\"\r\n                            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                            onChange={(e) => search(e)}\r\n                            value={doc}\r\n                        />\r\n                        <IconButton onClick={getCustomerFromAPI} sx={{ p: \"10px\" }} aria-label=\"search\">\r\n                            <SearchIcon  color=\"primary\"/>\r\n                        </IconButton>\r\n                    </Paper>\r\n\r\n                    {!show &&<Paper sx={{ overflow: 'hidden',  width:'100%',backgroundColor:'#EDEDF5',mt:\"0\", boxShadow:'0px 0px 0px 0px' }}>\r\n                        <TableContainer sx={{mx:'auto',width:'95%',Index:'0', maxHeight: 'calc(100vh - 225px)' }}>\r\n                            <Table aria-label=\"sticky table\">\r\n                            <TableBody>\r\n                            <SwipeableList sx={{p:0, m:0}} type={ListType.IOS}>\r\n                            {allCustomer.map((row, index) => (\r\n                                <SwipeableListItem\r\n                                key={index}\r\n                                //leadingActions={leadingActions()}\r\n                                trailingActions={trailingActions(row.id, row.name, row.direction)}\r\n                              >\r\n                                <TableCell \r\n                                onClick={() => selectCustomer(row.id)} key={index}\r\n                                 scope=\"row\" sx={{p:1,pl:1,mb:1, width:'100%', borderLeft:'3px solid grey'}}>\r\n                                    <strong>{row.name}</strong>\r\n                                    <p >\r\n                                    {row.doc}\r\n                                    </p>\r\n                                </TableCell>\r\n                                </SwipeableListItem>\r\n                            ))\r\n                            }</SwipeableList>\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Paper>}\r\n                    {show && (<div>\r\n                        <p style={{color:'#1976d2', fontSize:'14px', marginTop:'15px', padding: '0px 50px' }}>{text}</p>\r\n                        <Grid container direction=\"column\" >\r\n                            <BootstrapInput\r\n                                placeholder=\"Enter Name\"\r\n                                name=\"description\"\r\n                                sx={{ width: \"85%\",mx: 'auto'}}\r\n                                value={customerInfo[\"name\"]}\r\n                                onChange={(e) => {\r\n                                    setCustomerInfo({\r\n                                        ...customerInfo,\r\n                                        \"name\": e.target.value,\r\n                                    });\r\n                                }}\r\n                                disabled={text === '' ? true : false }\r\n                            />\r\n                        </Grid>\r\n                        <Grid container direction=\"column\" sx={{mt:2}}>\r\n                            <BootstrapInput\r\n                                placeholder=\"Enter Direction\"\r\n                                name=\"description\"\r\n                                sx={{ width: \"85%\", mx: 'auto'}}\r\n                                value={customerInfo[\"direction\"]}\r\n                                onChange={(e) => {\r\n                                    setCustomerInfo({\r\n                                        ...customerInfo,\r\n                                        \"direction\": e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ marginTop: \"40px\" }}\r\n                            onClick={saveCustomer}\r\n                            className=\"btn-action\"\r\n                        >\r\n                            Select\r\n                        </Button>\r\n                    </div>)}\r\n                    <Grid item className=\"footer\" sx={{position:'fixed', bottom:'0px',width:'100%'}}>\r\n                    {!show && <Button  variant=\"contained\"\r\n                    sx={{mb:2, width:'80%'}}\r\n                        onClick={inviteGuest}\r\n                       >\r\n                    INVITADO\r\n                </Button>}\r\n                     </Grid>\r\n                    <Dialog open={open} onClose={handleClose}>\r\n                        <DialogTitle>Edit Customer</DialogTitle>\r\n                        <DialogContent>\r\n                        {/* <DialogContentText>\r\n                            You can change or delete your customer.\r\n                        </DialogContentText> */}\r\n                        <TextField\r\n                            autoFocus\r\n                            focused\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value= {changeData.name}\r\n                            onChange = {e => setChangeData({...changeData, name : e.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"direction\"\r\n                            focused\r\n                            label=\"direction\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            variant=\"standard\"\r\n                            value = {changeData.direction}\r\n                            onChange = {e => setChangeData({...changeData ,direction : e.target.value})}\r\n                        />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button onClick={handleChange}>Change</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"./index.css\";\r\nimport Slide from '../Invoice/Slide'\r\nimport { useToasts } from \"react-toast-notifications\";\r\n//mui component\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport IconButton from '@mui/material/IconButton';\r\n// import Button from '@mui/material/Button';\r\nimport SendApi from '../api/sendApi';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n// Import Swiper styles\r\nimport 'swiper/swiper.min.css'\r\n\r\n\r\nexport default function Invite() {\r\n    const { setLoginStatus, setPdf , setConf} = useContext(UserContext);\r\n    const [invoiceInfo, setInvoiceInfo] = useState({\r\n        amount: \"\",\r\n        name: \"Invited\",\r\n        doc: \"\",\r\n        direction: \"\",\r\n        sellerId: \"\",\r\n        customerId: \"\",\r\n        type: \"\",\r\n        pdfLink:\"\"\r\n    });\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    // let email = useSelector((state) => state.email.currentEmail);\r\n    // let email = loginStatus.email;\r\n    const [docType, setDocType] = useState({\r\n        invoice: false,\r\n        ticket: false,\r\n        note: false\r\n  \r\n      });\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if (!token) {\r\n              history.push(\"/\");\r\n              return;\r\n            }\r\n              const userRes = await Axios.get(\"/users/\", {\r\n                headers: { \"x-auth-token\": token },\r\n              });\r\n              setLoginStatus({\r\n                token,\r\n                email: userRes.data.email,\r\n                customerId:''\r\n              });\r\n            \r\n    \r\n              Axios.get(\"/users/getId/\" + userRes.data.email).then(\r\n                async (response) => {\r\n                  setDocType({...docType, 'invoice' : response.data.docType[0], 'ticket' : response.data.docType[1], 'note' : response.data.docType[2]})\r\n                  setInvoiceInfo({\r\n                      ...invoiceInfo,\r\n                      \"sellerId\" : response.data._id\r\n                  })\r\n                if(response.data.docType[1] && !response.data.docType[2]){\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                        \"type\" : 'ticket',\r\n                        \"sellerId\": response.data._id,\r\n                    })\r\n                    \r\n                    setDocType({...docType, 'ticket' : false});\r\n                }\r\n        \r\n                if(!response.data.docType[1] && response.data.docType[2]){\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                        \"type\" : 'note',\r\n                        \"sellerId\": response.data._id,\r\n                    })\r\n                    setDocType({...docType, 'note' : false});\r\n                }\r\n                })\r\n\r\n          };\r\n          checkLoggedIn();    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const prevPage = () => {\r\n        history.push('/customer');\r\n    };\r\n    \r\n    const [slideCount, setSlideCount] = useState(2); \r\n\r\n    const increment = ()=>{\r\n        setSlideCount(prev=> prev +1)\r\n    }\r\n    \r\n    //get total\r\n    const dataInfo = useSelector(state => state.slide)\r\n    const [ middle, setMiddle] = useState([]);\r\n    \r\n    const collection = [];\r\n    \r\n    const sort = () =>{\r\n        for(let i = 0; i<slideCount-1 ; i++){\r\n             collection.push(middle.filter((el)=> {\r\n                return el.index === i ;\r\n            }).pop());\r\n        }\r\n    }\r\n    const [total, setTotal]=useState(0);\r\n    const getTotal=()=>{\r\n        let sum = 0;\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i] === undefined){\r\n\r\n            }else{\r\n                sum += collection[i].count * Number(collection[i].amount);\r\n            }\r\n        }\r\n        setTotal(sum.toFixed(2))\r\n    }\r\n    useEffect(()=>{\r\n        setMiddle(prev=> [...prev, dataInfo])\r\n    },[dataInfo])\r\n    useEffect(()=>{\r\n        sort();\r\n        getTotal()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [middle])\r\n    useEffect(()=>{\r\n        setInvoiceInfo({\r\n            ...invoiceInfo,\r\n            \"amount\" : total.toString()\r\n        });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[total])\r\n    const submit = (e) => {\r\n        if (!invoiceInfo[\"amount\"]) {\r\n            addToast(\"Please Enter Amount\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        // v9alidation()\r\n        sort()\r\n        if(collection[0] === undefined){\r\n            addToast(\"Please Enter Description\", {\r\n                appearance: \"info\",\r\n                autoDismissTimeout: 2000,\r\n                autoDismiss: true,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        for(let i = 0; i< collection.length; i++){\r\n            if(collection[i].count === 1 && collection[i].amount === '0'){\r\n\r\n            }else{\r\n                if(collection[i].description === ''){\r\n                    addToast(\"Please Enter Description\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n                 if(collection[i].amount === '0'){\r\n                    addToast(\"Please Enter amount\", {\r\n                        appearance: \"info\",\r\n                        autoDismiss: true,\r\n                        autoDismissTimeout: 2000,\r\n                        placement: 'top-center'\r\n                    });\r\n                    return;\r\n                 }\r\n            }\r\n        }\r\n        if (!invoiceInfo[\"type\"]) {\r\n            addToast(\"Please Select Type\", {\r\n                appearance: \"info\",\r\n                autoDismiss: true,\r\n                autoDismissTimeout: 2000,\r\n                placement: 'top-center'\r\n            });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setPdf('http://example.com');\r\n        Axios.get(\"/users/get/\"+ invoiceInfo.sellerId).then((response)=>{\r\n            const postDetail = SendApi(collection, invoiceInfo, response.data);\r\n\r\n            getVals(postDetail, invoiceInfo.type);\r\n        })\r\n    };\r\n\r\n    async function getVals(detail, type){\r\n        \r\n        return await fetch(type === 'note' ? \"https://facturavirtual.pe/facturacion/api/procesar_nota_venta\": \"https://facturavirtual.pe/facturacion/api/procesar_venta\", detail)\r\n        .then((response)=>{\r\n                 return response.json()\r\n        })\r\n\r\n        .then((datas) => { \r\n            //   const gettingPdf = `https://facturavirtual.pe/sys_fe/download/downloadpdf/${datas.documento.id_contribuyente}/${datas.documento.id_tipodoc_electronico}/${datas.documento.serie_comprobante}/${datas.documento.numero_comprobante}/pdf/ticket`;\r\n            const gettingPdf =datas.url_absoluta_ticket;\r\n              setPdf(gettingPdf.toString());\r\n              setInvoiceInfo({\r\n                  ...invoiceInfo,\r\n                  pdfLink : gettingPdf\r\n              })\r\n              let tmp_invoice = {...invoiceInfo,\"pdfLink\" : gettingPdf.toString()};\r\n              \r\n              Axios.post(\"/trans/create\", tmp_invoice).then(async (response) => {\r\n                if (response.data.status === 200) {\r\n                    setConf(true)\r\n                    history.push({\r\n                        pathname: \"/confirm/\" + invoiceInfo[\"amount\"],\r\n                    });\r\n                }\r\n            });\r\n              //return gettingPdf;\r\n        })\r\n        .catch((err)=>{ \r\n            addToast(\"En el ambiente de pruebas solo se permiten crear hasta 10 BOLETAS\", {\r\n            appearance: \"info\",\r\n            autoDismissTimeout: 2000,\r\n            autoDismiss: true,\r\n            placement: 'top-center'\r\n        });\r\n        setLoading(false);\r\n        return;})\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            setTotal();\r\n            collection.fill(null);\r\n            setMiddle(null);\r\n            setSlideCount(2);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return (\r\n        <Box sx={{ \r\n            flexGrow: 1,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor : 'white'\r\n        }}>\r\n            \r\n            <IconButton color=\"primary\" aria-label=\"back\" onClick={prevPage} sx={{position : 'absolute', top: '10px', right: '10px'}}>\r\n                <ClearIcon />\r\n            </IconButton>\r\n\r\n    <Grid container direction=\"column\" sx={{mt:8}} justifyContent=\"space-between\" alignItems=\"center\" >\r\n        <Grid item>\r\n            <p className=\"doc\">Invited</p>\r\n        </Grid>\r\n        <Grid sx={{width: '100%', mt:1}} item>\r\n            <Swiper\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                onReachEnd = {()=>increment()}\r\n            >\r\n\r\n                {\r\n                    (new Array(slideCount).fill(null).map((_, i)=>(\r\n                        <SwiperSlide  key={i}><Slide index={i}/></SwiperSlide>\r\n                    )))\r\n                }\r\n\r\n            </Swiper>\r\n        </Grid>\r\n\r\n        <Grid item sx={{\r\n            mt:2\r\n        }}>\r\n            <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                sx={{\r\n                    pl:2\r\n                }}\r\n            >\r\n                \r\n                {docType.ticket && <FormControlLabel name=\"type\" value=\"ticket\" control={<Radio size=\"small\" />} label=\"Ticket\" onChange={(e) =>\r\n                            setInvoiceInfo({\r\n                                ...invoiceInfo,\r\n                                [e.target.name]: e.target.value,\r\n                            })\r\n                        }/>}\r\n                {docType.note && <FormControlLabel name=\"type\" value=\"note\" control={<Radio size=\"small\" />} label=\"Note\" onChange={(e) =>\r\n                    setInvoiceInfo({\r\n                        ...invoiceInfo,\r\n                         [e.target.name]: e.target.value,\r\n                    })\r\n                        }/>}        \r\n            </RadioGroup>\r\n        </Grid>\r\n\r\n        <Grid item sx={{\r\n            mt:4\r\n        }}>\r\n            <p className=\"total\">Total S/{total}</p>\r\n        </Grid>\r\n        <Grid item sx={{\r\n            width: '60%',\r\n            mt:1\r\n        }}>\r\n            <LoadingButton\r\n          onClick={submit}\r\n          endIcon={<SendIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n        >\r\n          { invoiceInfo.type === '' ? 'Send' : invoiceInfo.type.toUpperCase() }\r\n        </LoadingButton> \r\n        </Grid>\r\n    </Grid>\r\n    </Box>\r\n\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, HashRouter as Router } from \"react-router-dom\";\r\n\r\n// import Axios from 'axios'\r\nimport {\r\n  Home,\r\n  Login,\r\n  Register,\r\n  Invoice,\r\n  Admin,\r\n  Edit,\r\n  Create,\r\n  Confirm,\r\n  TransList,\r\n  Customer,\r\n  Invite,\r\n} from \"../pages\";\r\n//import { PageTransition } from \"@steveeeie/react-page-transition\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n// import { useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function Index() {\r\n  const [loginStatus, setLoginStatus] = useState({\r\n    token: undefined,\r\n    email: undefined,\r\n    customerId:''\r\n  });\r\n  const [pdf, setPdf] = useState('');\r\n  const [conf, setConf] = useState(true);\r\n  // const history = useHistory();\r\n  \r\n  // useEffect(() => {\r\n  //   const checkLoggedIn = async () => {\r\n  //     let token = localStorage.getItem(\"auth-token\");\r\n  //     if (token) {\r\n\r\n  //       await Axios.get(\"/users/\", {\r\n  //           headers: { \"x-auth-token\": token },\r\n  //         })\r\n  //         .then(userRes=>{\r\n  //           setLoginStatus({\r\n  //             token,\r\n  //             email: userRes.email,\r\n  //             customerId:''\r\n  //           });\r\n  //         })\r\n  //         .catch(err => {\r\n  //         history.push('/');\r\n  //         })\r\n  //     }\r\n  //   };\r\n\r\n  //   checkLoggedIn();\r\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={{ loginStatus, setLoginStatus, pdf, setPdf, conf, setConf }}>\r\n        <ToastProvider>\r\n          {/* <Route\r\n            render={({ location }) => {\r\n              return (\r\n                <PageTransition\r\n                  preset=\"moveToLeftFromRight\"\r\n                  transitionKey={location.pathname}\r\n                > */}\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={Home}></Route>\r\n                    <Route exact path=\"/login\" component={Login}></Route>\r\n                    <Route exact path=\"/register\" component={Register}></Route>\r\n                    <Route exact path=\"/invoice\" component={Invoice}></Route>\r\n                    <Route exact path=\"/admin\" component={Admin}></Route>\r\n                    <Route exact path=\"/admin/edit/:id\" component={Edit}></Route>\r\n                    <Route exact path=\"/admin/new\" component={Create}></Route>\r\n                    <Route exact path=\"/confirm/:id\" component={Confirm}></Route>\r\n                    <Route exact path=\"/translist\" component={TransList}></Route>\r\n                    <Route exact path=\"/customer\" component={Customer}></Route>\r\n                    <Route exact path=\"/invite\" component={Invite}></Route>\r\n                  </Switch>\r\n                {/* </PageTransition>\r\n              );\r\n            }}\r\n          /> */}\r\n        </ToastProvider>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = {\r\n  currentEmail: \"\",\r\n  customerId: \"\",\r\n};\r\nexport const emailReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_EMAIL:\r\n      var newState = {\r\n        ...state,\r\n        currentEmail: action.payload.email,\r\n        customerId: action.payload.customerId,\r\n      };\r\n\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = {\r\n    currentData: \"data\",\r\n};\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SEL_DATA:\r\n            return { ...state, currentData: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as types from \"../types\";\r\n\r\nexport const initialState = { };\r\nexport const slideReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.SLIDE_DATA:\r\n            return  action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { emailReducer } from \"./reducers/emailReducer\";\r\nimport { dataReducer } from \"./reducers/dataReducer\";\r\nimport { slideReducer } from \"./reducers/slideReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    email: emailReducer,\r\n    data: dataReducer,\r\n    slide: slideReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst enhancer = composeWithDevTools(applyMiddleware(ReduxThunk));\r\nexport const store = () => {\r\n    const store = createStore(rootReducer, enhancer);\r\n    return store;\r\n};\r\nexport default store;\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store\";\n\nfunction App() {\n  const store = configureStore();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}